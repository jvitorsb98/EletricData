{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment EletricData  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0.0 \par
}}EletricData}
{\comment Generated by doxygen 1.9.6.}
{\creatim \yr2023\mo5\dy18\hr3\min3\sec7}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt EletricData}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.0.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Thu May 18 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Namespace List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all namespaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Ui} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Barra\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExportarCsv\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExportarExcel\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExportarPdf\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Linha\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Main\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QDialog
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
FiltroLinha\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FiltrosBarra\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QFrame
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
FrameBarras\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FrameExportar\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FrameTensoes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QMainWindow
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MainWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QPushButton
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
AnimatedHoverButton\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Style\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b AnimatedHoverButton} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Barra} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExportarCsv} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExportarExcel} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExportarPdf} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para pdf Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FiltroLinha} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableLinhas do {\b FrameBarras} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FiltrosBarra} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableBarras do {\b FrameBarras} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FrameBarras} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pelo armazenamento dos dados em nos atributos da classes {\b Barra} e {\b Linha}. Al\'E9m de etregar ao us\'FAario uma TabWidget amig\'E1vel, para que possa filtrar os dados que quiser para realizar sua an\'E1lise. @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FrameExportar} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela exporta\'E7\'E3o dos dados em 3 formatos diferentes ( Pdf , Excel e .csv ) @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FrameTensoes} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela aquisi\'E7\'E3o dos dados de tens\'E3o nominal do sistema el\'E9trico @reentrant Essa janela foi construida com 1 frame que se posiciona no mesmo local do frame respons\'E1vel por receber os arquivos no {\b MainWindow}, nele h\'E1 um QTableWidget para inser\'E7\'E3o dos valores das tens\'F5es, seja por inser\'E7\'E3o manual ou para importar um arquivo com esses dados. Al\'E9m de bot\'F5es de salva, avan\'E7ar e voltar })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Linha} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Main} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe principal do programa @reentrant Respons\'E1vel por iniciar o programa, iniciar um spash e o Frame {\b MainWindow} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MainWindow} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela Principal do Programa @reentrant Essa janela foi construida com 2 frames, um com o intuito de funcionar como uma barra de status do andamento da aplica\'E7\'E3o(tendo 4 labels como sinalizadores) e o outro possui componentes repons\'E1veis por receber endere\'E7o de arquivos que ser\'E3o utilizados nos proximos frames para trataemnto de dados })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Style} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b D:/QT/EletricData/{\b animatedhoverbutton.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b AnimatedHoverButton.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b Barra.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b exportarcsv.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b exportarcsv.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b exportarexcel.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b exportarexcel.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b exportarpdf.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b exportarpdf.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b filtrolinha.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b filtrolinha.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b filtrosbarra.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b filtrosbarra.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b framebarras.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b framebarras.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b frameexportar.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b frameexportar.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b frametensoes.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b frametensoes.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b Linha.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b mainwindow.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b mainwindow.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b style.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ui Namespace Reference\par \pard\plain 
{\tc\tcl2 \v Ui}
{\xe \v Ui}
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AnimatedHoverButton Class Reference\par \pard\plain 
{\tc\tcl2 \v AnimatedHoverButton}
{\xe \v AnimatedHoverButton}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par
{
{\f2 #include <AnimatedHoverButton.h>}}\par
Inheritance diagram for AnimatedHoverButton:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_animated_hover_button.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AnimatedHoverButton} (const QString &text, QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTransitionDuration} (int duration)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b event} (QEvent *event) override\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b paintEvent} (QPaintEvent *) override\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AnimatedHoverButton\:AnimatedHoverButton}
{\xe \v AnimatedHoverButton\:AnimatedHoverButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AnimatedHoverButton::AnimatedHoverButton (const QString &  {\i text}, QWidget *  {\i parent} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MIT License\par
Copyright (c) 2018 Michael Scopchanov\par
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                                                                              :\par
36     QPushButton(text, parent),\par
37     m_transition({\cf17 nullptr}),\par
38     m_duration(1000),\par
39     m_currentColor(Qt::transparent)\par
40 \{\par
41 \par
42 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v event\:AnimatedHoverButton}
{\xe \v AnimatedHoverButton\:event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AnimatedHoverButton::event (QEvent *  {\i event}){\f2 [override]}}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50 \{\par
51     {\cf19 switch} (event->type()) \{\par
52     {\cf19 case} QEvent::HoverEnter:\par
53         animateHover({\cf17 true});\par
54         {\cf19 break};\par
55     {\cf19 case} QEvent::HoverLeave:\par
56         animateHover({\cf17 false});\par
57         {\cf19 break};\par
58     {\cf19 default}:\par
59         {\cf19 break};\par
60     \}\par
61 \par
62     {\cf19 return} QPushButton::event(event);\par
63 \}\par
}
}
{\xe \v paintEvent\:AnimatedHoverButton}
{\xe \v AnimatedHoverButton\:paintEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AnimatedHoverButton::paintEvent (QPaintEvent * ){\f2 [override]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 66 \{\par
67     QStylePainter painter({\cf17 this});\par
68     QStyleOptionButton option;\par
69 \par
70     initStyleOption(&option);\par
71 \par
72     option.state &= ~QStyle::State_MouseOver;\par
73 \par
74     painter.drawControl(QStyle::CE_PushButton, option);\par
75     painter.setOpacity(0.25);\par
76     painter.fillRect(rect(), m_currentColor);\par
77 \}\par
}
}
{\xe \v setTransitionDuration\:AnimatedHoverButton}
{\xe \v AnimatedHoverButton\:setTransitionDuration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AnimatedHoverButton::setTransitionDuration (int  {\i duration})}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 45 \{\par
46     m_duration = duration;\par
47 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b AnimatedHoverButton.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b animatedhoverbutton.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Barra Class Reference\par \pard\plain 
{\tc\tcl2 \v Barra}
{\xe \v Barra}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
{
{\f2 #include <Barra.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTensaoPu} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTensaoPu} (double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTensaoNominalKv} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTensaoNominalKv} (double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getThdvPercent} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setThdvPercent} (double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< int, std::pair< std::pair< double, double >, std::pair< int, bool > > > {\b getDti} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b somatorioHarmonico} (int key1, double dAbsolut, double dPercent, int classeTensaoThdi, bool poluida)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTensaoEficaz} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTensaoEficaz} (double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getClasseTensaoThdv} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClasseTensaoThdv} (int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getBarraInfectadaThdv} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setbarraInfectadaThdv} (bool value)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getBarraInfectadaThdv\:Barra}
{\xe \v Barra\:getBarraInfectadaThdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Barra::getBarraInfectadaThdv (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 57                                 \{\par
58         {\cf19 return} barraInfectadaThdv;\par
59     \}\par
}
}
{\xe \v getClasseTensaoThdv\:Barra}
{\xe \v Barra\:getClasseTensaoThdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Barra::getClasseTensaoThdv (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 49                              \{\par
50         {\cf19 return} classeTensaoThdv;\par
51     \}\par
}
}
{\xe \v getDti\:Barra}
{\xe \v Barra\:getDti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::map< int, std::pair< std::pair< double, double >, std::pair< int, bool > > > Barra::getDti (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                                                               \{\par
34         {\cf19 return} dti;\par
35     \}\par
}
}
{\xe \v getTensaoEficaz\:Barra}
{\xe \v Barra\:getTensaoEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Barra::getTensaoEficaz (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                              \{\par
42         {\cf19 return} tensaoEficaz;\par
43     \}\par
}
}
{\xe \v getTensaoNominalKv\:Barra}
{\xe \v Barra\:getTensaoNominalKv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Barra::getTensaoNominalKv (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                  \{\par
18         {\cf19 return} tensaoNominalKv;\par
19     \}\par
}
}
{\xe \v getTensaoPu\:Barra}
{\xe \v Barra\:getTensaoPu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Barra::getTensaoPu (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9                           \{\par
10         {\cf19 return} tensaoPu;\par
11     \}\par
}
}
{\xe \v getThdvPercent\:Barra}
{\xe \v Barra\:getThdvPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Barra::getThdvPercent (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                              \{\par
26         {\cf19 return} thdvPercent;\par
27     \}\par
}
}
{\xe \v setbarraInfectadaThdv\:Barra}
{\xe \v Barra\:setbarraInfectadaThdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setbarraInfectadaThdv (bool  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 61                                           \{\par
62         barraInfectadaThdv = value;\par
63     \}\par
}
}
{\xe \v setClasseTensaoThdv\:Barra}
{\xe \v Barra\:setClasseTensaoThdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setClasseTensaoThdv (int  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53                                        \{\par
54         classeTensaoThdv= value;\par
55     \}\par
}
}
{\xe \v setTensaoEficaz\:Barra}
{\xe \v Barra\:setTensaoEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setTensaoEficaz (double  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 45                                        \{\par
46         tensaoEficaz = value;\par
47     \}\par
}
}
{\xe \v setTensaoNominalKv\:Barra}
{\xe \v Barra\:setTensaoNominalKv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setTensaoNominalKv (double  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                           \{\par
22         tensaoNominalKv = value;\par
23     \}\par
}
}
{\xe \v setTensaoPu\:Barra}
{\xe \v Barra\:setTensaoPu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setTensaoPu (double  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                    \{\par
14         tensaoPu = value;\par
15     \}\par
}
}
{\xe \v setThdvPercent\:Barra}
{\xe \v Barra\:setThdvPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setThdvPercent (double  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 29                                       \{\par
30         thdvPercent = value;\par
31     \}\par
}
}
{\xe \v somatorioHarmonico\:Barra}
{\xe \v Barra\:somatorioHarmonico}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::somatorioHarmonico (int  {\i key1}, double  {\i dAbsolut}, double  {\i dPercent}, int  {\i classeTensaoThdi}, bool  {\i poluida}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                                                                                               \{\par
38         this->dti.insert(\{key1,\{\{dAbsolut,dPercent\},\{classeTensaoThdi,poluida\}\}\});\par
39     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b Barra.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExportarCsv Class Reference\par \pard\plain 
{\tc\tcl2 \v ExportarCsv}
{\xe \v ExportarCsv}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\par
{
{\f2 #include <exportarcsv.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExportarCsv} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInterBarrasInterL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInterBarrasInterL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInterBarrasTodL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInterBarrasTodL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvCompBarrasInterL2InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvCompBarrasInterL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvCompBarrasTodL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvCompBarrasaTodL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInfecBarrasInterL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInfecBarrasInterL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInfecBarrasTodL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInfecBarrasTodL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFile * {\b criaArquivo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveBarrasIntervalo} (QTextStream *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveBarrasComp} (QTextStream *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveBarrasInfec} (QTextStream *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveLInterL1InterL2} (QTextStream *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveLInterL1TodL2} (QTextStream *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveLTodL1InterL2} (QTextStream *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveLTodL1TodL2} (QTextStream *)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ExportarCsv\:ExportarCsv}
{\xe \v ExportarCsv\:ExportarCsv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ExportarCsv::ExportarCsv (QWidget *  {\i parent} = {\f2 nullptr})}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12 \{\par
13     parentExportarCsv = parent;\par
14 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v criaArquivo\:ExportarCsv}
{\xe \v ExportarCsv\:criaArquivo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * ExportarCsv::criaArquivo ()}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 147                                \{\par
148     {\cf20 //Configura-se um filtro para pesquisa do diretorio}\par
149     QFile *arquivoSaida = {\cf17 new} QFile();\par
150     QString filtro={\cf22 "Arquivos separados por virgula (*.csv)"};\par
151     QString localSalvamento =QFileDialog::getSaveFileName(parentExportarCsv,{\cf22 "Salvar Arquivo"},QDir::homePath(),filtro);\par
152     arquivoSaida->setFileName(localSalvamento);\par
153     {\cf19 if}(!arquivoSaida->open(QFile::WriteOnly | QFile::Text))\{\par
154         {\cf19 if}(arquivoSaida->error() == QFile::OpenError)\{  {\cf20 //verifica se o usuario nao selecionou nenhuma}\par
155             {\cf19 return} {\cf17 nullptr};\par
156         \}\par
157         QMessageBox::warning(parentExportarCsv,{\cf22 "Erro"},{\cf22 "Arquivo n\'E3o p\'F4de ser savo"}); {\cf20 //caso tenha selecionado e n\'E3o tenha conseguido abrir \'E9 enviado uma messagem de erro}\par
158         {\cf19 return} {\cf17 nullptr};\par
159     \}\par
160 \par
161     {\cf19 return} arquivoSaida;\par
162 \par
163 \}\par
}
}
{\xe \v CsvCompBarrasaTodL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvCompBarrasaTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvCompBarrasaTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 94                                           \{\par
95     QFile *arquivoSaida = criaArquivo();\par
96     QTextStream saida(arquivoSaida);\par
97     CsvEscreveBarrasComp(&saida);\par
98     CsvEscreveLTodL1TodL2(&saida);\par
99 \par
100 \par
101     arquivoSaida->flush();\par
102     arquivoSaida->close();\par
103 \}\par
}
}
{\xe \v CsvCompBarrasInterL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvCompBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvCompBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73                                            \{\par
74     QFile *arquivoSaida = criaArquivo();\par
75     QTextStream saida(arquivoSaida);\par
76     CsvEscreveBarrasComp(&saida);\par
77     CsvEscreveLInterL1TodL2(&saida);\par
78 \par
79 \par
80     arquivoSaida->flush();\par
81     arquivoSaida->close();\par
82 \}\par
}
}
{\xe \v CsvCompBarrasInterL2InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvCompBarrasInterL2InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvCompBarrasInterL2InterL2 ()}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 64                                              \{\par
65     QFile *arquivoSaida = criaArquivo();\par
66     QTextStream saida(arquivoSaida);\par
67     CsvEscreveBarrasComp(&saida);\par
68     CsvEscreveLInterL1InterL2(&saida);\par
69     {\cf20 //Linhas}\par
70     arquivoSaida->flush();\par
71     arquivoSaida->close();\par
72 \}\par
}
}
{\xe \v CsvCompBarrasTodL1InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvCompBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvCompBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 83                                            \{\par
84     QFile *arquivoSaida = criaArquivo();\par
85     QTextStream saida(arquivoSaida);\par
86     CsvEscreveBarrasComp(&saida);\par
87     CsvEscreveLTodL1InterL2(&saida);\par
88 \par
89 \par
90     arquivoSaida->flush();\par
91     arquivoSaida->close();\par
92 \par
93 \}\par
}
}
{\xe \v CsvEscreveBarrasComp\:ExportarCsv}
{\xe \v ExportarCsv\:CsvEscreveBarrasComp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvEscreveBarrasComp (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 219                                                         \{\par
220     *saida << {\cf22 "Barra"};\par
221     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
222         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
223             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
224                 *saida << {\cf22 ","}+QString::number(i+1);\par
225                 {\cf19 break};\par
226             \}\par
227         \}\par
228     \}\par
229     *saida << Qt::endl;\par
230 \par
231     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
232         *saida << {\cf22 "Tensao na Barra[pu]"} ;\par
233         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
234             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
235                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
236                     *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
237                     {\cf19 break};\par
238                 \}\par
239             \}\par
240         \}\par
241         *saida << Qt::endl;\par
242     \}\par
243     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
244         *saida << {\cf22 "Tensao Nominal[kV]"} ;\par
245         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
246             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
247                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
248                     *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
249                     {\cf19 break};\par
250                 \}\par
251             \}\par
252         \}\par
253         *saida << Qt::endl;\par
254     \}\par
255     {\cf19 if}(FiltrosBarra::thdv)\{\par
256         *saida << {\cf22 "THDV[%]"} ;\par
257         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
258             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
259                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
260                     *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
261                     {\cf19 break};\par
262                 \}\par
263             \}\par
264         \}\par
265         *saida << Qt::endl;\par
266     \}\par
267     {\cf19 if}(FiltrosBarra::dit)\{\par
268         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
269             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[pu]"} ;\par
270             {\cf19 for}({\cf18 int} k = 0 ; k < FrameTensoes::numeroDeBarras ; k++)\{\par
271                 {\cf19 for}({\cf18 int} p = 0 ; p < FiltrosBarra::indiceBarrasEscolhidas.size() ; p++)\{\par
272                     {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(p).toInt()-1) == k )\{\par
273                         *saida << {\cf22 ","}+QString::number(FrameBarras::barras[k].getDti().find(j)->second.first.first,{\cf23 'f'},5);\par
274                         {\cf19 break};\par
275                     \}\par
276                 \}\par
277             \}\par
278             *saida << Qt::endl;\par
279         \}\par
280     \}\par
281 \par
282     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
283         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
284             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"} ;\par
285             {\cf19 for}({\cf18 int} k = 0 ; k < FrameTensoes::numeroDeBarras ; k++)\{\par
286                 {\cf19 for}({\cf18 int} p = 0 ; p < FiltrosBarra::indiceBarrasEscolhidas.size() ; p++)\{\par
287                     {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(p).toInt()-1) == k )\{\par
288                         *saida << {\cf22 ","}+QString::number(FrameBarras::barras[k].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
289                         {\cf19 break};\par
290                     \}\par
291                 \}\par
292             \}\par
293             *saida << Qt::endl;\par
294         \}\par
295     \}\par
296 \par
297     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
298         *saida << {\cf22 "Tensao Eficaz[pu]"} ;\par
299         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
300             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
301                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
302                     *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
303                     {\cf19 break};\par
304                 \}\par
305             \}\par
306         \}\par
307         *saida << Qt::endl;\par
308     \}\par
309 \par
310 \par
311 \}\par
}
}
{\xe \v CsvEscreveBarrasInfec\:ExportarCsv}
{\xe \v ExportarCsv\:CsvEscreveBarrasInfec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvEscreveBarrasInfec (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 313                                                          \{\par
314     *saida << {\cf22 "Barra"};\par
315     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
316         {\cf18 bool} infectada = {\cf17 false};\par
317         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
318             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
319                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
320                     infectada = {\cf17 true};\par
321                     {\cf19 break};\par
322                 \}\par
323             \}\par
324         \}{\cf19 else}\{\par
325             infectada = {\cf17 true};\par
326         \}\par
327         {\cf19 if}(infectada)\{\par
328             *saida << {\cf22 ","}+QString::number(i+1);\par
329         \}\par
330     \}\par
331     *saida << Qt::endl;\par
332     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
333         *saida << {\cf22 "Tensao na Barra[pu]"} ;\par
334         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
335             {\cf18 bool} infectada = {\cf17 false};\par
336             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
337                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
338                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
339                         infectada = {\cf17 true};\par
340                         {\cf19 break};\par
341                     \}\par
342                 \}\par
343             \}{\cf19 else}\{\par
344                 infectada = {\cf17 true};\par
345             \}\par
346             {\cf19 if}(infectada)\{\par
347                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
348             \}\par
349         \}\par
350         *saida << Qt::endl;\par
351     \}\par
352     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
353         *saida << {\cf22 "Tensao Nominal[kV]"} ;\par
354         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
355             {\cf18 bool} infectada = {\cf17 false};\par
356             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
357                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
358                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
359                         infectada = {\cf17 true};\par
360                         {\cf19 break};\par
361                     \}\par
362                 \}\par
363             \}{\cf19 else}\{\par
364                 infectada = {\cf17 true};\par
365             \}\par
366             {\cf19 if}(infectada)\{\par
367                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
368             \}\par
369         \}\par
370         *saida << Qt::endl;\par
371     \}\par
372     {\cf19 if}(FiltrosBarra::thdv)\{\par
373         *saida << {\cf22 "THDV[%]"} ;\par
374         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
375             {\cf18 bool} infectada = {\cf17 false};\par
376             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
377                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
378                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
379                         infectada = {\cf17 true};\par
380                         {\cf19 break};\par
381                     \}\par
382                 \}\par
383             \}{\cf19 else}\{\par
384                 infectada = {\cf17 true};\par
385             \}\par
386             {\cf19 if}(infectada)\{\par
387                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
388             \}\par
389         \}\par
390         *saida << Qt::endl;\par
391     \}\par
392     {\cf19 if}(FiltrosBarra::dit)\{\par
393         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
394             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[pu]"} ;\par
395             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
396                 {\cf18 bool} infectada = {\cf17 false};\par
397                 {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
398                     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
399                         {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
400                             infectada = {\cf17 true};\par
401                             {\cf19 break};\par
402                         \}\par
403                     \}\par
404                 \}{\cf19 else}\{\par
405                     infectada = {\cf17 true};\par
406                 \}\par
407                 {\cf19 if}(infectada)\{\par
408                     *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'f'},5);\par
409                 \}\par
410             \}\par
411             *saida << Qt::endl;\par
412         \}\par
413     \}\par
414     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
415         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
416             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"} ;\par
417             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
418                 {\cf18 bool} infectada = {\cf17 false};\par
419                 {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
420                     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
421                         {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
422                             infectada = {\cf17 true};\par
423                             {\cf19 break};\par
424                         \}\par
425                     \}\par
426                 \}{\cf19 else}\{\par
427                     infectada = {\cf17 true};\par
428                 \}\par
429                 {\cf19 if}(infectada)\{\par
430                     *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
431                 \}\par
432             \}\par
433             *saida << Qt::endl;\par
434         \}\par
435     \}\par
436     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
437         *saida << {\cf22 "THDV[%]"} ;\par
438         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
439             {\cf18 bool} infectada = {\cf17 false};\par
440             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
441                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
442                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
443                         infectada = {\cf17 true};\par
444                         {\cf19 break};\par
445                     \}\par
446                 \}\par
447             \}{\cf19 else}\{\par
448                 infectada = {\cf17 true};\par
449             \}\par
450             {\cf19 if}(infectada)\{\par
451                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
452             \}\par
453         \}\par
454         *saida << Qt::endl;\par
455     \}\par
456 \}\par
}
}
{\xe \v CsvEscreveBarrasIntervalo\:ExportarCsv}
{\xe \v ExportarCsv\:CsvEscreveBarrasIntervalo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvEscreveBarrasIntervalo (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 165                                                              \{\par
166     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
167     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
168     {\cf20 //Barras}\par
169     *saida << {\cf22 "Barra"} ;\par
170     {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
171         *saida << {\cf22 ","}+QString::number(i+1);\par
172     \} *saida << Qt::endl;\par
173     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
174         *saida << {\cf22 "Tensao na Barra[pu]"} ;\par
175         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
176             *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
177         \} *saida << Qt::endl;\par
178     \}\par
179     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
180         *saida << {\cf22 "Tensao Nominal[kV]"} ;\par
181         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
182             *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
183         \} *saida << Qt::endl;\par
184     \}\par
185     {\cf19 if}(FiltrosBarra::thdv)\{\par
186         *saida << {\cf22 "THDV[%]"} ;\par
187         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
188             *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
189         \} *saida << Qt::endl;\par
190     \}\par
191     {\cf19 if}(FiltrosBarra::dit)\{\par
192         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
193             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[pu]"} ;\par
194             {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
195                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'f'},5);\par
196             \} *saida << Qt::endl;\par
197         \}\par
198     \}\par
199     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
200         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
201             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"} ;\par
202             {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
203                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
204             \} *saida << Qt::endl;\par
205         \}\par
206     \}\par
207     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
208         *saida << {\cf22 "Tensao Eficaz[pu]"} ;\par
209         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
210             *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
211         \} *saida << Qt::endl;\par
212     \}\par
213 \par
214     {\cf19 for}({\cf18 int} i = 0 ; i < 4 ; i++)\{\par
215         *saida << Qt::endl;\par
216     \}\par
217 \}\par
}
}
{\xe \v CsvEscreveLInterL1InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvEscreveLInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvEscreveLInterL1InterL2 (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 458                                                              \{\par
459     *saida << {\cf22 "Linha"} ;\par
460     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
461         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
462         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
463         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
464             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
465                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
466                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
467                         *saida << {\cf22 ","}+QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino);\par
468                     \}\par
469                 \}\par
470             \}\par
471         \}\par
472     \}\par
473     *saida << Qt::endl;\par
474     {\cf19 if}(FiltroLinha::correntePu)\{\par
475         *saida << {\cf22 "Corrente[pu]"};\par
476         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
477             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
478             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
479             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
480                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
481                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
482                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
483                             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
484                         \}\par
485                     \}\par
486                 \}\par
487             \}\par
488         \}\par
489     \}\par
490     *saida << Qt::endl;\par
491     {\cf19 if}(FiltroLinha::dht)\{\par
492         *saida << {\cf22 "DHT[%]"};\par
493         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
494             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
495             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
496             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
497                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
498                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
499                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
500                             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
501                         \}\par
502                     \}\par
503                 \}\par
504             \}\par
505         \}\par
506     \}\par
507     *saida <<Qt::endl;\par
508     {\cf19 if}(FiltroLinha::dit)\{\par
509         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
510             *saida << {\cf22 "DHT"}+QString::number(p);\par
511             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
512                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
513                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
514                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
515                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
516                         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
517                             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
518                                 *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5);\par
519                             \}\par
520                         \}\par
521                     \}\par
522                 \}\par
523             \}\par
524             *saida <<Qt::endl;\par
525         \}\par
526     \}\par
527     {\cf19 if}(FiltroLinha::ditPercent)\{\par
528         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
529             *saida << {\cf22 "DHT"}+QString::number(p)+{\cf22 "[%]"};\par
530             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
531                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
532                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
533                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
534                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
535                         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
536                             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
537                                 *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5);\par
538                             \}\par
539                         \}\par
540                     \}\par
541                 \}\par
542             \}\par
543             *saida <<Qt::endl;\par
544         \}\par
545     \}\par
546     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
547         *saida << {\cf22 "Corrente Eficaz[pu]"};\par
548         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
549             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
550             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
551             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
552                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
553                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
554                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
555                             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
556                         \}\par
557                     \}\par
558                 \}\par
559             \}\par
560         \}\par
561     \}\par
562     *saida << Qt::endl;\par
563     {\cf19 if}(FiltroLinha::resistencia)\{\par
564         *saida << {\cf22 "Resistencia[ohm]"};\par
565         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
566             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
567             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
568             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
569                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
570                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
571                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
572                             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
573                         \}\par
574                     \}\par
575                 \}\par
576             \}\par
577         \}\par
578     \}\par
579     *saida << Qt::endl;\par
580 \par
581     {\cf19 if}(FiltroLinha::perdas)\{\par
582         *saida << {\cf22 "Perdas[pu]"};\par
583         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
584             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
585             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
586             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
587                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
588                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
589                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
590                             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
591                         \}\par
592                     \}\par
593                 \}\par
594             \}\par
595         \}\par
596     \}\par
597     *saida << Qt::endl;\par
598 \par
599     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
600         *saida << {\cf22 "Perdas[pu]"};\par
601         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
602             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
603             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
604             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
605                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
606                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
607                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
608                             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
609                         \}\par
610                     \}\par
611                 \}\par
612             \}\par
613         \}\par
614     \}\par
615     *saida << Qt::endl;\par
616 \par
617 \}\par
}
}
{\xe \v CsvEscreveLInterL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvEscreveLInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvEscreveLInterL1TodL2 (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 619                                                            \{\par
620     *saida << {\cf22 "Linha"} ;\par
621     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
622         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
623         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
624         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
625             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
626                 *saida << {\cf22 ","}+QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino,{\cf23 'f'},5);\par
627             \}\par
628         \}\par
629     \}\par
630     *saida << Qt::endl;\par
631     {\cf19 if}(FiltroLinha::correntePu)\{\par
632         *saida << {\cf22 "Corrente[pu]"};\par
633         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
634             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
635             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
636                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
637                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
638                 \}\par
639             \}\par
640         \}\par
641     \}\par
642     *saida << Qt::endl;\par
643     {\cf19 if}(FiltroLinha::dht)\{\par
644         *saida << {\cf22 "DHT[%]"};\par
645         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
646             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
647             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
648                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
649                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
650                 \}\par
651             \}\par
652         \}\par
653     \}\par
654     *saida <<Qt::endl;\par
655     {\cf19 if}(FiltroLinha::dit)\{\par
656         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
657             *saida << {\cf22 "DHT"}+QString::number(p);\par
658             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
659                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
660                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
661                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
662                         *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5);\par
663                     \}\par
664                 \}\par
665             \}\par
666             *saida <<Qt::endl;\par
667         \}\par
668     \}\par
669     {\cf19 if}(FiltroLinha::ditPercent)\{\par
670         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
671             *saida << {\cf22 "DHT"}+QString::number(p)+{\cf22 "[%]"};\par
672             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
673                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
674                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
675                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
676                         *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5);\par
677                     \}\par
678                 \}\par
679             \}\par
680             *saida <<Qt::endl;\par
681         \}\par
682     \}\par
683     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
684         *saida << {\cf22 "Corrente Eficaz[pu]"};\par
685         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
686             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
687             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
688                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
689                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
690                 \}\par
691             \}\par
692         \}\par
693     \}\par
694     *saida << Qt::endl;\par
695     {\cf19 if}(FiltroLinha::resistencia)\{\par
696         *saida << {\cf22 "Resistencia[ohm]"};\par
697         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
698             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
699             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
700                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
701                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
702                 \}\par
703             \}\par
704         \}\par
705     \}\par
706     *saida << Qt::endl;\par
707 \par
708     {\cf19 if}(FiltroLinha::perdas)\{\par
709         *saida << {\cf22 "Perdas[pu]"};\par
710         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
711             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
712             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
713                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
714                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
715                 \}\par
716             \}\par
717         \}\par
718     \}\par
719     *saida << Qt::endl;\par
720 \par
721     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
722         *saida << {\cf22 "Perdas[pu]"};\par
723         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
724             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
725             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
726                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
727                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
728                 \}\par
729             \}\par
730         \}\par
731     \}\par
732     *saida << Qt::endl;\par
733 \par
734 \}\par
}
}
{\xe \v CsvEscreveLTodL1InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvEscreveLTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvEscreveLTodL1InterL2 (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 736                                                            \{\par
737     *saida << {\cf22 "Linha"} ;\par
738     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
739         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
740         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
741         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
742             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
743                 *saida << {\cf22 ","}+QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino);\par
744             \}\par
745         \}\par
746     \}\par
747     *saida << Qt::endl;\par
748     {\cf19 if}(FiltroLinha::correntePu)\{\par
749         *saida << {\cf22 "Corrente[pu]"};\par
750         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
751             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
752             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
753                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
754                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
755                 \}\par
756             \}\par
757         \}\par
758     \}\par
759     *saida << Qt::endl;\par
760     {\cf19 if}(FiltroLinha::dht)\{\par
761         *saida << {\cf22 "DHT[%]"};\par
762         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
763             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
764             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
765                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
766                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
767                 \}\par
768             \}\par
769         \}\par
770     \}\par
771     *saida <<Qt::endl;\par
772     {\cf19 if}(FiltroLinha::dit)\{\par
773         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
774             *saida << {\cf22 "DHT"}+QString::number(p);\par
775             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
776                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
777                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
778                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
779                         *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5);\par
780                     \}\par
781                 \}\par
782             \}\par
783             *saida <<Qt::endl;\par
784         \}\par
785     \}\par
786     {\cf19 if}(FiltroLinha::ditPercent)\{\par
787         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
788             *saida << {\cf22 "DHT"}+QString::number(p)+{\cf22 "[%]"};\par
789             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
790                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
791                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
792                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
793                         *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5);\par
794                     \}\par
795                 \}\par
796             \}\par
797             *saida <<Qt::endl;\par
798         \}\par
799     \}\par
800     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
801         *saida << {\cf22 "Corrente Eficaz[pu]"};\par
802         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
803             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
804             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
805                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
806                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
807                 \}\par
808             \}\par
809         \}\par
810     \}\par
811     *saida << Qt::endl;\par
812     {\cf19 if}(FiltroLinha::resistencia)\{\par
813         *saida << {\cf22 "Resistencia[ohm]"};\par
814         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
815             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
816             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
817                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
818                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
819                 \}\par
820             \}\par
821         \}\par
822     \}\par
823     *saida << Qt::endl;\par
824 \par
825     {\cf19 if}(FiltroLinha::perdas)\{\par
826         *saida << {\cf22 "Perdas[pu]"};\par
827         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
828             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
829             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
830                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
831                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
832                 \}\par
833             \}\par
834         \}\par
835     \}\par
836     *saida << Qt::endl;\par
837 \par
838     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
839         *saida << {\cf22 "Perdas[pu]"};\par
840         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
841             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
842             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
843                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
844                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
845                 \}\par
846             \}\par
847         \}\par
848     \}\par
849     *saida << Qt::endl;\par
850 \}\par
}
}
{\xe \v CsvEscreveLTodL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvEscreveLTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvEscreveLTodL1TodL2 (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 852                                                          \{\par
853     *saida << {\cf22 "Linha"} ;\par
854     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
855         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
856         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
857         *saida << {\cf22 ","}+QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino);\par
858     \}\par
859     *saida << Qt::endl;\par
860     {\cf19 if}(FiltroLinha::correntePu)\{\par
861         *saida << {\cf22 "Corrente[pu]"};\par
862         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
863             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
864         \}\par
865     \}\par
866     *saida << Qt::endl;\par
867     {\cf19 if}(FiltroLinha::dht)\{\par
868         *saida << {\cf22 "DHT[%]"};\par
869         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
870             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
871         \}\par
872     \}\par
873     *saida <<Qt::endl;\par
874     {\cf19 if}(FiltroLinha::dit)\{\par
875         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
876             *saida << {\cf22 "DHT"}+QString::number(p);\par
877             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
878                 *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5);\par
879             \}\par
880             *saida <<Qt::endl;\par
881         \}\par
882     \}\par
883     {\cf19 if}(FiltroLinha::ditPercent)\{\par
884         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
885             *saida << {\cf22 "DHT"}+QString::number(p)+{\cf22 "[%]"};\par
886             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
887                 *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5);\par
888             \}\par
889             *saida <<Qt::endl;\par
890         \}\par
891     \}\par
892     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
893         *saida << {\cf22 "Corrente Eficaz[pu]"};\par
894         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
895             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
896         \}\par
897     \}\par
898     *saida << Qt::endl;\par
899     {\cf19 if}(FiltroLinha::resistencia)\{\par
900         *saida << {\cf22 "Resistencia[ohm]"};\par
901         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
902             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
903         \}\par
904     \}\par
905     *saida << Qt::endl;\par
906 \par
907     {\cf19 if}(FiltroLinha::perdas)\{\par
908         *saida << {\cf22 "Perdas[pu]"};\par
909         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
910             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
911         \}\par
912     \}\par
913     *saida << Qt::endl;\par
914 \par
915     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
916         *saida << {\cf22 "Perdas[pu]"};\par
917         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
918             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
919         \}\par
920     \}\par
921     *saida << Qt::endl;\par
922 \}\par
}
}
{\xe \v CsvInfecBarrasInterL1InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInfecBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInfecBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 105                                               \{\par
106     QFile *arquivoSaida = criaArquivo();\par
107     QTextStream saida(arquivoSaida);\par
108     CsvEscreveBarrasInfec(&saida);\par
109     CsvEscreveLInterL1InterL2(&saida);\par
110 \par
111 \par
112     arquivoSaida->flush();\par
113     arquivoSaida->close();\par
114 \}\par
}
}
{\xe \v CsvInfecBarrasInterL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInfecBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInfecBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 115                                             \{\par
116     QFile *arquivoSaida = criaArquivo();\par
117     QTextStream saida(arquivoSaida);\par
118     CsvEscreveBarrasInfec(&saida);\par
119     CsvEscreveLInterL1TodL2(&saida);\par
120 \par
121 \par
122     arquivoSaida->flush();\par
123     arquivoSaida->close();\par
124 \}\par
}
}
{\xe \v CsvInfecBarrasTodL1InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInfecBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInfecBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 125                                             \{\par
126     QFile *arquivoSaida = criaArquivo();\par
127     QTextStream saida(arquivoSaida);\par
128     CsvEscreveBarrasInfec(&saida);\par
129     CsvEscreveLTodL1InterL2(&saida);\par
130 \par
131 \par
132     arquivoSaida->flush();\par
133     arquivoSaida->close();\par
134 \}\par
}
}
{\xe \v CsvInfecBarrasTodL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInfecBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInfecBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 135                                           \{\par
136     QFile *arquivoSaida = criaArquivo();\par
137     QTextStream saida(arquivoSaida);\par
138     CsvEscreveBarrasInfec(&saida);\par
139     CsvEscreveLTodL1TodL2(&saida);\par
140 \par
141 \par
142     arquivoSaida->flush();\par
143     arquivoSaida->close();\par
144 \}\par
}
}
{\xe \v CsvInterBarrasInterL1InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInterBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInterBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                               \{\par
20 \par
21     QFile *arquivoSaida = criaArquivo();\par
22     QTextStream saida(arquivoSaida);\par
23     CsvEscreveBarrasIntervalo(&saida);\par
24     CsvEscreveLInterL1InterL2(&saida);\par
25     {\cf20 //Linhas}\par
26     arquivoSaida->flush();\par
27     arquivoSaida->close();\par
28 \}\par
}
}
{\xe \v CsvInterBarrasInterL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInterBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInterBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 29                                             \{\par
30     QFile *arquivoSaida = criaArquivo();\par
31     QTextStream saida(arquivoSaida);\par
32     CsvEscreveBarrasIntervalo(&saida);\par
33     CsvEscreveLInterL1TodL2(&saida);\par
34 \par
35 \par
36     arquivoSaida->flush();\par
37     arquivoSaida->close();\par
38 \}\par
}
}
{\xe \v CsvInterBarrasTodL1InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInterBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInterBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39                                             \{\par
40     QFile *arquivoSaida = criaArquivo();\par
41     QTextStream saida(arquivoSaida);\par
42     CsvEscreveBarrasIntervalo(&saida);\par
43     CsvEscreveLTodL1InterL2(&saida);\par
44 \par
45 \par
46     arquivoSaida->flush();\par
47     arquivoSaida->close();\par
48 \par
49 \par
50 \}\par
}
}
{\xe \v CsvInterBarrasTodL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInterBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInterBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 51                                           \{\par
52 \par
53     QFile *arquivoSaida = criaArquivo();\par
54     QTextStream saida(arquivoSaida);\par
55     CsvEscreveBarrasIntervalo(&saida);\par
56     CsvEscreveLTodL1TodL2(&saida);\par
57 \par
58 \par
59     arquivoSaida->flush();\par
60     arquivoSaida->close();\par
61 \par
62 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b exportarcsv.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b exportarcsv.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExportarExcel Class Reference\par \pard\plain 
{\tc\tcl2 \v ExportarExcel}
{\xe \v ExportarExcel}
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\par
{
{\f2 #include <exportarexcel.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExportarExcel} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInterBInterL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInterBInterL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInterBarrasTodL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInterBarrasTodL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelCompBarrasInterL2InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelCompBarrasInterL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelCompBarrasTodL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelCompBarrasaTodL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInfecBarrasInterL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInfecBarrasInterL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInfecBarrasTodL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInfecBarrasTodL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b numeroParaLetra} (int numero)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QXlsx::Document * {\b criaPlanilha} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelPulaLinha} (int *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b salvaPlanilha} (QXlsx::Document *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveBarrasIntervalo} (QXlsx::Document *, int *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveBarrasComp} (QXlsx::Document *, int *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveBarrasInfec} (QXlsx::Document *, int *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveLInterL1InterL2} (QXlsx::Document *, int *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveLInterL1TodL2} (QXlsx::Document *, int *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveLTodL1InterL2} (QXlsx::Document *, int *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveLTodL1TodL2} (QXlsx::Document *, int *)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ExportarExcel\:ExportarExcel}
{\xe \v ExportarExcel\:ExportarExcel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ExportarExcel::ExportarExcel (QWidget *  {\i parent} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14 \{\par
15     parentExportarExcel = parent;\par
16 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v criaPlanilha\:ExportarExcel}
{\xe \v ExportarExcel\:criaPlanilha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QXlsx::Document * ExportarExcel::criaPlanilha ()}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 144                                           \{\par
145     QXlsx::Document* planilha = {\cf17 new} QXlsx::Document;\par
146     {\cf19 return} planilha;\par
147 \}\par
}
}
{\xe \v ExcelCompBarrasaTodL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelCompBarrasaTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelCompBarrasaTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 91                                               \{\par
92     QXlsx::Document* planilha = criaPlanilha();\par
93     {\cf18 int}* linha = {\cf17 new} int;\par
94     ExcelEscreveBarrasComp(planilha, linha);\par
95     ExcelPulaLinha(linha);\par
96     ExcelEscreveLTodL1TodL2(planilha, linha);\par
97     salvaPlanilha(planilha);\par
98     {\cf17 delete} planilha;\par
99     {\cf17 delete} linha;\par
100 \}\par
}
}
{\xe \v ExcelCompBarrasInterL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelCompBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelCompBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 71                                                \{\par
72     QXlsx::Document* planilha = criaPlanilha();\par
73     {\cf18 int}* linha = {\cf17 new} int;\par
74     ExcelEscreveBarrasComp(planilha, linha);\par
75     ExcelPulaLinha(linha);\par
76     ExcelEscreveLInterL1TodL2(planilha, linha);\par
77     salvaPlanilha(planilha);\par
78     {\cf17 delete} planilha;\par
79     {\cf17 delete} linha;\par
80 \}\par
}
}
{\xe \v ExcelCompBarrasInterL2InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelCompBarrasInterL2InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelCompBarrasInterL2InterL2 ()}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 61                                                  \{\par
62     QXlsx::Document* planilha = criaPlanilha();\par
63     {\cf18 int}* linha = {\cf17 new} int;\par
64     ExcelEscreveBarrasComp(planilha, linha);\par
65     ExcelPulaLinha(linha);\par
66     ExcelEscreveLInterL1InterL2(planilha, linha);\par
67     salvaPlanilha(planilha);\par
68     {\cf17 delete} planilha;\par
69     {\cf17 delete} linha;\par
70 \}\par
}
}
{\xe \v ExcelCompBarrasTodL1InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelCompBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelCompBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 81                                                \{\par
82     QXlsx::Document* planilha = criaPlanilha();\par
83     {\cf18 int}* linha = {\cf17 new} int;\par
84     ExcelEscreveBarrasComp(planilha, linha);\par
85     ExcelPulaLinha(linha);\par
86     ExcelEscreveLTodL1InterL2(planilha, linha);\par
87     salvaPlanilha(planilha);\par
88     {\cf17 delete} planilha;\par
89     {\cf17 delete} linha;\par
90 \}\par
}
}
{\xe \v ExcelEscreveBarrasComp\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelEscreveBarrasComp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelEscreveBarrasComp (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 231                                                                           \{\par
232 \par
233     saida->write({\cf22 "A1"},{\cf22 "Barra"});\par
234     {\cf18 int} pos = 1;\par
235     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
236         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
237             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
238                 saida->write(QString(numeroParaLetra(pos+1))+{\cf22 "1"},QString::number(i+1));\par
239                 pos++;\par
240                 {\cf19 break};\par
241             \}\par
242         \}\par
243     \}\par
244     *linha = 2;\par
245     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
246         pos = 1 ;\par
247         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o na Barra[pu]"});\par
248             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
249             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
250                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
251                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5));\par
252                     pos++;\par
253                     {\cf19 break};\par
254                 \}\par
255             \}\par
256         \}\par
257         (*linha)++;\par
258     \}\par
259     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
260         pos = 1 ;\par
261         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o Nominal[kV]"});\par
262             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
263             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
264                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
265                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5));\par
266                     pos++;\par
267                     {\cf19 break};\par
268                 \}\par
269             \}\par
270         \}\par
271         (*linha)++;\par
272     \}\par
273     {\cf19 if}(FiltrosBarra::thdv)\{\par
274         pos = 1 ;\par
275         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "THDV[%]"});\par
276         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
277             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
278                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
279                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5));\par
280                     pos++;\par
281                     {\cf19 break};\par
282                 \}\par
283             \}\par
284         \}\par
285         (*linha)++;\par
286     \}\par
287     {\cf19 if}(FiltrosBarra::dit)\{\par
288         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
289             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j));\par
290             pos = 1;\par
291             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
292                 {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
293                     {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
294                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'f'},5));\par
295                         pos++;\par
296                         {\cf19 break};\par
297                     \}\par
298                 \}\par
299             \}\par
300             (*linha)++;\par
301         \}\par
302     \}\par
303     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
304         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
305             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"});\par
306             pos = 1;\par
307             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
308                 {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
309                     {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
310                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5));\par
311                         pos++;\par
312                         {\cf19 break};\par
313                     \}\par
314                 \}\par
315             \}\par
316             (*linha)++;\par
317         \}\par
318     \}\par
319     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
320         pos = 1 ;\par
321         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tensao Eficaz[pu]"});\par
322         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
323             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
324                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
325                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5));\par
326                     pos++;\par
327                     {\cf19 break};\par
328                 \}\par
329             \}\par
330         \}\par
331         (*linha)++;\par
332     \}\par
333 \par
334 \}\par
}
}
{\xe \v ExcelEscreveBarrasInfec\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelEscreveBarrasInfec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelEscreveBarrasInfec (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 336                                                                            \{\par
337     saida->write({\cf22 "A1"},{\cf22 "Barra"});\par
338     {\cf18 int} pos = 1 ;\par
339     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
340         {\cf18 bool} infectada = {\cf17 false};\par
341         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
342             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
343                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
344                     infectada = {\cf17 true};\par
345                     {\cf19 break};\par
346                 \}\par
347             \}\par
348         \}{\cf19 else}\{\par
349             infectada = {\cf17 true};\par
350         \}\par
351         {\cf19 if}(infectada)\{\par
352             saida->write(QString(numeroParaLetra(pos+1))+{\cf22 "1"},QString::number(i+1));\par
353             pos++;\par
354         \}\par
355     \}\par
356     *linha = 2;\par
357     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
358         pos = 1 ;\par
359         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o na Barra[pu]"});\par
360             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
361             {\cf18 bool} infectada = {\cf17 false};\par
362             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
363                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
364                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
365                         infectada = {\cf17 true};\par
366                         {\cf19 break};\par
367                     \}\par
368                 \}\par
369             \}{\cf19 else}\{\par
370                 infectada = {\cf17 true};\par
371             \}\par
372             {\cf19 if}(infectada)\{\par
373                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5));\par
374                 pos++;\par
375             \}\par
376         \}\par
377         (*linha)++;\par
378     \}\par
379     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
380         pos = 1 ;\par
381         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o Nominal[kV]"});\par
382             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
383             {\cf18 bool} infectada = {\cf17 false};\par
384             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
385                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
386                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
387                         infectada = {\cf17 true};\par
388                         {\cf19 break};\par
389                     \}\par
390                 \}\par
391             \}{\cf19 else}\{\par
392                 infectada = {\cf17 true};\par
393             \}\par
394             {\cf19 if}(infectada)\{\par
395                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5));\par
396                 pos++;\par
397             \}\par
398         \}\par
399         (*linha)++;\par
400     \}\par
401     {\cf19 if}(FiltrosBarra::thdv)\{\par
402         pos = 1 ;\par
403         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "THDV[%]"});\par
404         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
405             {\cf18 bool} infectada = {\cf17 false};\par
406             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
407                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
408                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
409                         infectada = {\cf17 true};\par
410                         {\cf19 break};\par
411                     \}\par
412                 \}\par
413             \}{\cf19 else}\{\par
414                 infectada = {\cf17 true};\par
415             \}\par
416             {\cf19 if}(infectada)\{\par
417                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5));\par
418                 pos++;\par
419             \}\par
420         \}\par
421         (*linha)++;\par
422     \}\par
423     {\cf19 if}(FiltrosBarra::dit)\{\par
424         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
425             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j));\par
426             pos = 1;\par
427             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
428                 {\cf18 bool} infectada = {\cf17 false};\par
429                 {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
430                     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
431                         {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
432                             infectada = {\cf17 true};\par
433                             {\cf19 break};\par
434                         \}\par
435                     \}\par
436                 \}{\cf19 else}\{\par
437                     infectada = {\cf17 true};\par
438                 \}\par
439                 {\cf19 if}(infectada)\{\par
440                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'f'},5));\par
441                     pos++;\par
442                 \}\par
443             \}\par
444             (*linha)++;\par
445         \}\par
446     \}\par
447     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
448         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
449             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"});\par
450             pos = 1;\par
451             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
452                 {\cf18 bool} infectada = {\cf17 false};\par
453                 {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
454                     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
455                         {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
456                             infectada = {\cf17 true};\par
457                             {\cf19 break};\par
458                         \}\par
459                     \}\par
460                 \}{\cf19 else}\{\par
461                     infectada = {\cf17 true};\par
462                 \}\par
463                 {\cf19 if}(infectada)\{\par
464                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5));\par
465                     pos++;\par
466                 \}\par
467             \}\par
468             (*linha)++;\par
469         \}\par
470     \}\par
471     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
472         pos = 1 ;\par
473         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tensao Eficaz[pu]"});\par
474         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
475             {\cf18 bool} infectada = {\cf17 false};\par
476             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
477                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
478                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
479                         infectada = {\cf17 true};\par
480                         {\cf19 break};\par
481                     \}\par
482                 \}\par
483             \}{\cf19 else}\{\par
484                 infectada = {\cf17 true};\par
485             \}\par
486             {\cf19 if}(infectada)\{\par
487                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5));\par
488                 pos++;\par
489             \}\par
490         \}\par
491         (*linha)++;\par
492     \}\par
493 \}\par
}
}
{\xe \v ExcelEscreveBarrasIntervalo\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelEscreveBarrasIntervalo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelEscreveBarrasIntervalo (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 161                                                                                 \{\par
162     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
163     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
164     {\cf20 //Barras}\par
165     saida->write({\cf22 "A1"},{\cf22 "Barra"});\par
166     {\cf19 for}({\cf18 int} i= inicio , pos = 1 ; i <= fim ; i++, pos++)\{\par
167         saida->write(QString(numeroParaLetra(pos+1))+{\cf22 "1"},QString::number(i+1));\par
168     \}\par
169     *linha = 2;\par
170     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
171         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o na Barra[pu]"});\par
172             {\cf18 int} pos =1 ;\par
173         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
174             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5));\par
175             pos++;\par
176         \}\par
177         (*linha)++;\par
178     \}\par
179     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
180         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o Nominal[kV]"});\par
181             {\cf18 int} pos =1 ;\par
182         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
183             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5));\par
184             pos++;\par
185         \}\par
186         (*linha)++;\par
187     \}\par
188     {\cf19 if}(FiltrosBarra::thdv)\{\par
189         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "THDV[%]"});\par
190         {\cf18 int} pos =1 ;\par
191         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
192             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5));\par
193             pos++;\par
194         \}\par
195         (*linha)++;\par
196     \}\par
197     {\cf19 if}(FiltrosBarra::dit)\{\par
198         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
199             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j));\par
200             {\cf18 int} pos =1 ;\par
201             {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
202                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'f'},5));\par
203                 pos++;\par
204             \}\par
205             (*linha)++;\par
206         \}\par
207     \}\par
208     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
209         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
210             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"});\par
211             {\cf18 int} pos =1 ;\par
212             {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
213                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5));\par
214                 pos++;\par
215             \}\par
216             (*linha)++;\par
217         \}\par
218     \}\par
219     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
220         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tensao Eficaz[pu]"});\par
221         {\cf18 int} pos =1 ;\par
222         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
223             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5));\par
224             pos++;\par
225         \}\par
226         (*linha)++;\par
227     \}\par
228 \par
229 \}\par
}
}
{\xe \v ExcelEscreveLInterL1InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelEscreveLInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelEscreveLInterL1InterL2 (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 495                                                                                \{\par
496     saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Linha"});\par
497     {\cf18 int} pos =1;\par
498     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
499         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
500         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
501         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
502             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
503                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
504                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
505                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino));\par
506                         pos++;\par
507                     \}\par
508                 \}\par
509             \}\par
510         \}\par
511     \}\par
512     (*linha)++;\par
513     {\cf19 if}(FiltroLinha::correntePu)\{\par
514         pos =1 ;\par
515         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente[pu]"});\par
516         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
517             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
518             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
519             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
520                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
521                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
522                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
523                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrente()));\par
524                             pos++;\par
525                         \}\par
526                     \}\par
527                 \}\par
528             \}\par
529         \}\par
530         (*linha)++;\par
531     \}\par
532     {\cf19 if}(FiltroLinha::dht)\{\par
533         pos =1 ;\par
534         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "DHT[%]"});\par
535         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
536             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
537             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
538             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
539                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
540                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
541                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
542                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDhtPercent()));\par
543                             pos++;\par
544                         \}\par
545                     \}\par
546                 \}\par
547             \}\par
548         \}\par
549         (*linha)++;\par
550     \}\par
551     {\cf19 if}(FiltroLinha::dit)\{\par
552         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
553             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p));\par
554             pos =1 ;\par
555             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
556                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
557                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
558                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
559                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
560                         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
561                             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
562                                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5));\par
563                                 pos++;\par
564                             \}\par
565                         \}\par
566                     \}\par
567                 \}\par
568             \}\par
569             (*linha)++;\par
570         \}\par
571     \}\par
572     {\cf19 if}(FiltroLinha::ditPercent)\{\par
573         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
574             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p)+{\cf22 "[%]"});\par
575             pos =1 ;\par
576             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
577                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
578                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
579                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
580                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
581                         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
582                             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
583                                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5));\par
584                                 pos++;\par
585                             \}\par
586                         \}\par
587                     \}\par
588                 \}\par
589             \}\par
590             (*linha)++;\par
591         \}\par
592     \}\par
593     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
594         pos =1 ;\par
595         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente Eficaz[pu]"});\par
596         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
597             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
598             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
599             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
600                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
601                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
602                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
603                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrenteEficaz()));\par
604                             pos++;\par
605                         \}\par
606                     \}\par
607                 \}\par
608             \}\par
609         \}\par
610         (*linha)++;\par
611     \}\par
612     {\cf19 if}(FiltroLinha::resistencia)\{\par
613         pos =1 ;\par
614         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Resistencia[ohm]"});\par
615         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
616             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
617             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
618             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
619                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
620                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
621                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
622                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getResistencia()));\par
623                             pos++;\par
624                         \}\par
625                     \}\par
626                 \}\par
627             \}\par
628         \}\par
629         (*linha)++;\par
630     \}\par
631     {\cf19 if}(FiltroLinha::perdas)\{\par
632         pos =1 ;\par
633         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas[pu]"});\par
634         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
635             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
636             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
637             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
638                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
639                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
640                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
641                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdas()));\par
642                             pos++;\par
643                         \}\par
644                     \}\par
645                 \}\par
646             \}\par
647         \}\par
648         (*linha)++;\par
649     \}\par
650     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
651         pos =1 ;\par
652         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas Eficaz[pu]"});\par
653         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
654             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
655             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
656             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
657                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
658                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
659                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
660                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdasEficaz()));\par
661                             pos++;\par
662                         \}\par
663                     \}\par
664                 \}\par
665             \}\par
666         \}\par
667         (*linha)++;\par
668     \}\par
669 \par
670 \}\par
}
}
{\xe \v ExcelEscreveLInterL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelEscreveLInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelEscreveLInterL1TodL2 (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 672                                                                              \{\par
673     saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Linha"});\par
674     {\cf18 int} pos = 1;\par
675     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
676         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
677         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
678         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
679             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
680                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino));\par
681                 pos++;\par
682             \}\par
683         \}\par
684     \}\par
685     (*linha)++;\par
686     {\cf19 if}(FiltroLinha::correntePu)\{\par
687         pos = 1;\par
688         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente[pu]"});\par
689         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
690             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
691             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
692                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
693                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrente()));\par
694                     pos++;\par
695                 \}\par
696             \}\par
697         \}\par
698         (*linha)++;\par
699     \}\par
700     {\cf19 if}(FiltroLinha::dht)\{\par
701         pos = 1;\par
702         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "DHT[%]"});\par
703         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
704             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
705             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
706                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
707                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDhtPercent()));\par
708                     pos++;\par
709                 \}\par
710             \}\par
711         \}\par
712         (*linha)++;\par
713     \}\par
714     {\cf19 if}(FiltroLinha::dit)\{\par
715         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
716             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p));\par
717             pos =1 ;\par
718             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
719                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
720                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
721                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
722                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5));\par
723                         pos++;\par
724                     \}\par
725                 \}\par
726             \}\par
727             (*linha)++;\par
728         \}\par
729     \}\par
730     {\cf19 if}(FiltroLinha::ditPercent)\{\par
731         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
732             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p)+{\cf22 "[%]"});\par
733             pos =1 ;\par
734             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
735                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
736                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
737                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
738                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5));\par
739                         pos++;\par
740                     \}\par
741                 \}\par
742             \}\par
743             (*linha)++;\par
744         \}\par
745     \}\par
746     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
747         pos = 1;\par
748         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente Eficaz[pu]"});\par
749         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
750             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
751             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
752                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
753                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrenteEficaz()));\par
754                     pos++;\par
755                 \}\par
756             \}\par
757         \}\par
758         (*linha)++;\par
759     \}\par
760     {\cf19 if}(FiltroLinha::resistencia)\{\par
761         pos = 1;\par
762         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Resistencia[ohm]"});\par
763         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
764             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
765             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
766                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
767                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getResistencia()));\par
768                     pos++;\par
769                 \}\par
770             \}\par
771         \}\par
772         (*linha)++;\par
773     \}\par
774     {\cf19 if}(FiltroLinha::perdas)\{\par
775         pos = 1;\par
776         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas[pu]"});\par
777         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
778             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
779             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
780                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
781                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdas()));\par
782                     pos++;\par
783                 \}\par
784             \}\par
785         \}\par
786         (*linha)++;\par
787     \}\par
788     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
789         pos = 1;\par
790         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas Eficaz[pu]"});\par
791         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
792             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
793             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
794                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
795                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdasEficaz()));\par
796                     pos++;\par
797                 \}\par
798             \}\par
799         \}\par
800         (*linha)++;\par
801     \}\par
802 \}\par
}
}
{\xe \v ExcelEscreveLTodL1InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelEscreveLTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelEscreveLTodL1InterL2 (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 804                                                                              \{\par
805     saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Linha"});\par
806     {\cf18 int} pos = 1;\par
807     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
808         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
809         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
810         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
811             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
812                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino));\par
813                 pos++;\par
814             \}\par
815         \}\par
816     \}\par
817     (*linha)++;\par
818     {\cf19 if}(FiltroLinha::correntePu)\{\par
819         pos = 1 ;\par
820         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente[pu]"});\par
821         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
822             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
823             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
824                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
825                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrente()));\par
826                     pos++;\par
827                 \}\par
828             \}\par
829         \}\par
830         (*linha)++;\par
831     \}\par
832     {\cf19 if}(FiltroLinha::dht)\{\par
833         pos =1 ;\par
834         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "DHT[%]"});\par
835         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
836             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
837             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
838                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
839                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDhtPercent()));\par
840                     pos++;\par
841                 \}\par
842             \}\par
843         \}\par
844         (*linha)++;\par
845     \}\par
846     {\cf19 if}(FiltroLinha::dit)\{\par
847         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
848             pos =1 ;\par
849             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p));\par
850             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
851                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
852                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
853                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
854                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5));\par
855                         pos++;                    \}\par
856                 \}\par
857             \}\par
858             (*linha)++;\par
859         \}\par
860     \}\par
861     {\cf19 if}(FiltroLinha::ditPercent)\{\par
862         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
863             pos =1 ;\par
864             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p)+{\cf22 "[%]"});\par
865             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
866                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
867                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
868                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
869                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5));\par
870                         pos++;\par
871                     \}\par
872                 \}\par
873             \}\par
874             (*linha)++;\par
875         \}\par
876     \}\par
877     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
878         pos = 1;\par
879         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente Eficaz[pu]"});\par
880         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
881             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
882             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
883                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
884                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrenteEficaz()));\par
885                     pos++;\par
886                 \}\par
887             \}\par
888         \}\par
889         (*linha)++;\par
890     \}\par
891     {\cf19 if}(FiltroLinha::resistencia)\{\par
892         pos = 1;\par
893         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Resistencia[ohm]"});\par
894         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
895             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
896             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
897                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
898                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getResistencia()));\par
899                     pos++;\par
900                 \}\par
901             \}\par
902         \}\par
903         (*linha)++;\par
904     \}\par
905     {\cf19 if}(FiltroLinha::perdas)\{\par
906         pos = 1;\par
907         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas[pu]"});\par
908         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
909             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
910             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
911                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
912                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdas()));\par
913                     pos++;\par
914                 \}\par
915             \}\par
916         \}\par
917         (*linha)++;\par
918     \}\par
919     {\cf19 if}(FiltroLinha::perdas)\{\par
920         pos = 1;\par
921         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas Eficaz[pu]"});\par
922         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
923             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
924             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
925                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
926                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdasEficaz()));\par
927                     pos++;\par
928                 \}\par
929             \}\par
930         \}\par
931         (*linha)++;\par
932     \}\par
933 \}\par
}
}
{\xe \v ExcelEscreveLTodL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelEscreveLTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelEscreveLTodL1TodL2 (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 935                                                                            \{\par
936     saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Linha"});\par
937     {\cf18 int} pos = 1;\par
938     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
939         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
940         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
941         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino));\par
942         pos++;\par
943     \}\par
944     (*linha)++;\par
945     {\cf19 if}(FiltroLinha::correntePu)\{\par
946         pos = 1;\par
947         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente[pu]"});\par
948         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
949             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrente()));\par
950             pos++;\par
951         \}\par
952         (*linha)++;\par
953     \}\par
954     {\cf19 if}(FiltroLinha::dht)\{\par
955         pos = 1;\par
956         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "DHT[%]"});\par
957         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
958             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDhtPercent()));\par
959             pos++;\par
960         \}\par
961         (*linha)++;\par
962     \}\par
963     {\cf19 if}(FiltroLinha::dit)\{\par
964         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
965             pos = 1 ;\par
966             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p));\par
967             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
968                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first));\par
969                 pos++;\par
970             \}\par
971             (*linha)++;\par
972         \}\par
973     \}\par
974     {\cf19 if}(FiltroLinha::ditPercent)\{\par
975         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
976             pos = 1 ;\par
977             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p)+{\cf22 "[%]"});\par
978             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
979                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second));\par
980                 pos++;\par
981             \}\par
982             (*linha)++;\par
983         \}\par
984     \}\par
985     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
986         pos = 1;\par
987         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente Eficaz[pu]"});\par
988         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
989             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrenteEficaz()));\par
990             pos++;\par
991         \}\par
992         (*linha)++;\par
993     \}\par
994     {\cf19 if}(FiltroLinha::resistencia)\{\par
995         pos = 1;\par
996         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Resistencia[ohm]"});\par
997         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
998             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getResistencia()));\par
999             pos++;\par
1000         \}\par
1001         (*linha)++;\par
1002     \}\par
1003     {\cf19 if}(FiltroLinha::perdas)\{\par
1004         pos = 1;\par
1005         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas[pu]"});\par
1006         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1007             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdas()));\par
1008             pos++;\par
1009         \}\par
1010         (*linha)++;\par
1011     \}\par
1012     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
1013         pos = 1;\par
1014         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas Eficaz[pu]"});\par
1015         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1016             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdasEficaz()));\par
1017             pos++;\par
1018         \}\par
1019         (*linha)++;\par
1020     \}\par
1021 \}\par
}
}
{\xe \v ExcelInfecBarrasInterL1InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInfecBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInfecBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 102                                                   \{\par
103     QXlsx::Document* planilha = criaPlanilha();\par
104     {\cf18 int}* linha = {\cf17 new} int;\par
105     ExcelEscreveBarrasInfec(planilha, linha);\par
106     ExcelPulaLinha(linha);\par
107     ExcelEscreveLInterL1InterL2(planilha, linha);\par
108     salvaPlanilha(planilha);\par
109     {\cf17 delete} planilha;\par
110     {\cf17 delete} linha;\par
111 \}\par
}
}
{\xe \v ExcelInfecBarrasInterL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInfecBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInfecBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 112                                                 \{\par
113     QXlsx::Document* planilha = criaPlanilha();\par
114     {\cf18 int}* linha = {\cf17 new} int;\par
115     ExcelEscreveBarrasInfec(planilha, linha);\par
116     ExcelPulaLinha(linha);\par
117     ExcelEscreveLInterL1TodL2(planilha, linha);\par
118     salvaPlanilha(planilha);\par
119     {\cf17 delete} planilha;\par
120     {\cf17 delete} linha;\par
121 \}\par
}
}
{\xe \v ExcelInfecBarrasTodL1InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInfecBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInfecBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 122                                                 \{\par
123     QXlsx::Document* planilha = criaPlanilha();\par
124     {\cf18 int}* linha = {\cf17 new} int;\par
125     ExcelEscreveBarrasInfec(planilha, linha);\par
126     ExcelPulaLinha(linha);\par
127     ExcelEscreveLTodL1InterL2(planilha, linha);\par
128     salvaPlanilha(planilha);\par
129     {\cf17 delete} planilha;\par
130     {\cf17 delete} linha;\par
131 \}\par
}
}
{\xe \v ExcelInfecBarrasTodL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInfecBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInfecBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 132                                               \{\par
133     QXlsx::Document* planilha = criaPlanilha();\par
134     {\cf18 int}* linha = {\cf17 new} int;\par
135     ExcelEscreveBarrasInfec(planilha, linha);\par
136     ExcelPulaLinha(linha);\par
137     ExcelEscreveLTodL1TodL2(planilha, linha);\par
138     salvaPlanilha(planilha);\par
139     {\cf17 delete} planilha;\par
140     {\cf17 delete} linha;\par
141 \}\par
}
}
{\xe \v ExcelInterBarrasTodL1InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInterBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInterBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 40                                                 \{\par
41     QXlsx::Document* planilha = criaPlanilha();\par
42     {\cf18 int}* linha = {\cf17 new} int;\par
43     ExcelEscreveBarrasIntervalo(planilha ,linha);\par
44     ExcelPulaLinha(linha);\par
45     ExcelEscreveLTodL1InterL2(planilha , linha);\par
46     salvaPlanilha(planilha);\par
47     {\cf17 delete} planilha;\par
48     {\cf17 delete} linha;\par
49 \}\par
}
}
{\xe \v ExcelInterBarrasTodL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInterBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInterBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50                                               \{\par
51     QXlsx::Document* planilha = criaPlanilha();\par
52     {\cf18 int}* linha = {\cf17 new} int;\par
53     ExcelEscreveBarrasIntervalo(planilha, linha);\par
54     ExcelPulaLinha(linha);\par
55     ExcelEscreveLTodL1TodL2(planilha, linha);\par
56     salvaPlanilha(planilha);\par
57     {\cf17 delete} planilha;\par
58     {\cf17 delete} linha;\par
59 \}\par
}
}
{\xe \v ExcelInterBInterL1InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInterBInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInterBInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                                              \{\par
21     QXlsx::Document* planilha = criaPlanilha();\par
22     {\cf18 int}* linha = {\cf17 new} int;\par
23     ExcelEscreveBarrasIntervalo(planilha , linha);\par
24     ExcelPulaLinha(linha);\par
25     ExcelEscreveLInterL1InterL2(planilha , linha);\par
26     salvaPlanilha(planilha);\par
27     {\cf17 delete} planilha;\par
28     {\cf17 delete} linha;\par
29 \}\par
}
}
{\xe \v ExcelInterBInterL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInterBInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInterBInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30                                            \{\par
31     QXlsx::Document* planilha = criaPlanilha();\par
32     {\cf18 int}* linha = {\cf17 new} int;\par
33     ExcelEscreveBarrasIntervalo(planilha , linha);\par
34     ExcelPulaLinha(linha);\par
35     ExcelEscreveLInterL1TodL2(planilha , linha);\par
36     salvaPlanilha(planilha);\par
37     {\cf17 delete} planilha;\par
38     {\cf17 delete} linha;\par
39 \}\par
}
}
{\xe \v ExcelPulaLinha\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelPulaLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelPulaLinha (int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 149                                             \{\par
150     {\cf19 for}({\cf18 int} i = 0 ; i < 4 ; i++)\{\par
151         (*linha)++;\par
152     \}\par
153 \}\par
}
}
{\xe \v numeroParaLetra\:ExportarExcel}
{\xe \v ExportarExcel\:numeroParaLetra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString ExportarExcel::numeroParaLetra (int  {\i numero})}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1024                                                  \{\par
1025 \par
1026     QString coluna = {\cf22 ""};\par
1027     {\cf18 int} resto;\par
1028 \par
1029     {\cf19 while} (numero > 0) \{\par
1030         resto = (numero - 1) % 26;\par
1031         coluna.prepend(QChar(resto + {\cf23 'A'}));\par
1032         numero = (numero - resto - 1) / 26;\par
1033     \}\par
1034 \par
1035     {\cf19 return} coluna;\par
1036 \}\par
}
}
{\xe \v salvaPlanilha\:ExportarExcel}
{\xe \v ExportarExcel\:salvaPlanilha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::salvaPlanilha (QXlsx::Document *  {\i saida})}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 155                                                      \{\par
156     QString filtro={\cf22 "Arquivo de planilha Excel. (*.xlsx)"};\par
157     QString localSalvamento =QFileDialog::getSaveFileName(parentExportarExcel,{\cf22 "Salvar Arquivo"},QDir::homePath(),filtro);\par
158     saida->saveAs(localSalvamento);\par
159 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b exportarexcel.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b exportarexcel.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExportarPdf Class Reference\par \pard\plain 
{\tc\tcl2 \v ExportarPdf}
{\xe \v ExportarPdf}
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para pdf Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos. }}\par
{
{\f2 #include <exportarpdf.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::ExportarPdf\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b ExportarPdf}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExportarPdf} (QWidget *parent=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInterBInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Um intervalo de barras,com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInterBInterL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInterBInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Um intervalo de barras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInterBInterL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInterBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Um intervalo de barras, com escolha individual de linhas apenas nos destinos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInterBarrasTodL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInterBarrasTodL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Um intervalo de barras, com todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInterBarrasTodL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfCompBarrasInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Escolha individual das barras,com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfCompBarrasInterL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfCompBarrasInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Escolha individual das barras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfCompBarrasInterL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfCompBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Escolha individual das barras, com escolha individual de linhas apenas nos destinos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfCompBarrasTodL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfCompBarrasaTodL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Escolha individual das barras, com todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfCompBarrasaTodL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInfecBarrasInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : As barras poluidoras, com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInfecBarrasInterL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInfecBarrasInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : As barras poluidoras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInfecBarrasInterL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInfecBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : As barras poluidoras, com escolha individual de linhas apenas nos destinos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInfecBarrasTodL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInfecBarrasTodL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : As barras poluidoras, com todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInfecBarrasTodL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContInterBInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Um intervalo de barras,com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInterBInterL1InterL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContInterBInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Um intervalo de barras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInterBInterL1TodL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContInterBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Um intervalo de barras, com escolha individual de linhas apenas nos destinos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInterBarrasTodL1InterL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContInterBarrasTodL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Um intervalo de barras, com todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInterBarrasTodL1TodL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContCompBarrasInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Escolha individual das barras,com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContCompBarrasInterL1InterL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContCompBarrasInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Escolha individual das barras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContCompBarrasInterL1TodL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContCompBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Escolha individual das barras, com escolha individual de linhas apenas nos destinos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContCompBarrasTodL1InterL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContCompBarrasaTodL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Escolha individual das barras, com todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContCompBarrasaTodL1TodL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContInfecBarrasInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : As barras poluidoras, com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInfecBarrasInterL1InterL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContInfecBarrasInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : As barras poluidoras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInfecBarrasInterL1TodL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContInfecBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : As barras poluidoras, com todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInfecBarrasTodL1InterL2} (QPrinter *)\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInfecBarrasTodL1TodL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::QtdLinhasInfoBarra\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
c\'E1lcula numero de linhas que ser\'E3o escritas no pdf para elencar os atributos escolhidos para uma barra apartir do filtro.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
um inteiro que representa o numero de linhas que ser\'E3o escritas no pdf para elencar os atributos escolhidos para uma barra apartir do filtro. \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b QtdLinhasInfoBarra} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::QtdLinhasInfoLinha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
c\'E1lcula numero de linhas que ser\'E3o escritas no pdf para elencar os atributos escolhidos para uma linha apartir do filtro.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
um inteiro que representa o numero de linhas que ser\'E3o escritas no pdf para elencar os atributos escolhidos para uma linha apartir do filtro. \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b QtdLinhasInfoLinha} ()\par
}
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para pdf Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ExportarPdf\:ExportarPdf}
{\xe \v ExportarPdf\:ExportarPdf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ExportarPdf::ExportarPdf (QWidget *  {\i parent} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32 \{\par
33     parenteExportarPdf = parent;\par
34 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ContCompBarrasaTodL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContCompBarrasaTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContCompBarrasaTodL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 2321                                                             \{\par
2322     QPainter painter(printer);\par
2323     painter.begin(printer);\par
2324     {\cf18 int} w = painter.device()->width();\par
2325     {\cf18 int} h = painter.device()->height();\par
2326 \par
2327     {\cf20 // Carrega a imagem do arquivo}\par
2328     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
2329 \par
2330     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2331     QRectF logoRect(20, 20, 300, 56);\par
2332 \par
2333     {\cf20 // Desenha a imagem na p\'E1gina}\par
2334     painter.drawImage(logoRect, logo);\par
2335 \par
2336     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
2337     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
2338 \par
2339     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
2340     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
2341 \par
2342     QFontMetrics fmPrincipal(fontePrincipal);\par
2343     QFontMetrics fmSubtexto(fonteSubtexto);\par
2344 \par
2345     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
2346     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
2347 \par
2348     painter.setFont(fontePrincipal);\par
2349     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
2350 \par
2351     painter.setFont(fonteSubtexto);\par
2352     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
2353 \par
2354     printer->newPage();\par
2355 \par
2356     {\cf20 // Desenha a imagem na p\'E1gina}\par
2357     painter.drawImage(logoRect, logo);\par
2358 \par
2359     QString TituloBarras = {\cf22 "Barras"};\par
2360 \par
2361 \par
2362     painter.setFont(fontePrincipal);\par
2363     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
2364 \par
2365     printer->newPage();\par
2366 \par
2367 \par
2368 \par
2369     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2370     QRectF logoMenorRect(20, 20, 100, 19);\par
2371 \par
2372     {\cf20 // Desenha a imagem na p\'E1gina}\par
2373     painter.drawImage(logoMenorRect, logo);\par
2374 \par
2375     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
2376     gradient.setColorAt(0, QColor(180, 235, 249));\par
2377     gradient.setColorAt(1, QColor(30, 56, 91));\par
2378     painter.setBrush(QBrush(gradient));\par
2379     {\cf20 //estilo da fonte do header}\par
2380     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
2381 \par
2382     {\cf20 // Define o estilo da fonte}\par
2383     QFont fontConteudo({\cf22 "Roboto"},12);\par
2384 \par
2385     {\cf18 int} inicioItem = 100;\par
2386 \par
2387 \par
2388     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
2389         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
2390             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
2391                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
2392                     printer->newPage();\par
2393                     inicioItem = 100;\par
2394                     painter.drawImage(logoMenorRect, logo);\par
2395                 \}\par
2396                 QLabel* labelHeader = {\cf17 new} QLabel();\par
2397                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2398                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2399                 labelHeader->setFont(fontHeader);\par
2400                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2401                 labelHeader->setTextFormat(Qt::RichText);\par
2402 \par
2403                 {\cf20 // Cria a QString atributos com a tag <html>}\par
2404                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2405 \par
2406                 {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
2407                     atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
2408                         QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
2409                     atributos = atributos.arg(tensao);\par
2410                 \}\par
2411 \par
2412                 {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
2413                     atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
2414                         QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
2415                     atributos = atributos.arg(tensaoNominal);\par
2416                 \}\par
2417 \par
2418                 {\cf19 if} (FiltrosBarra::thdv) \{\par
2419                     (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
2420                     QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
2421                     atributos = atributos.arg(thdv);\par
2422                 \}\par
2423 \par
2424                 {\cf19 if}(FiltrosBarra::dit)\{\par
2425                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2426                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
2427                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
2428                         atributos = atributos.arg(j);\par
2429                         atributos = atributos.arg(tdi);\par
2430                     \}\par
2431                 \}\par
2432 \par
2433                 {\cf19 if}(FiltrosBarra::ditPercent)\{\par
2434                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2435                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
2436                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
2437                         atributos = atributos.arg(j);\par
2438                         atributos = atributos.arg(tdi);\par
2439                     \}\par
2440                 \}\par
2441 \par
2442                 {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
2443                     atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
2444                     QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
2445                     atributos = atributos.arg(tensaoEficaz);\par
2446                 \}\par
2447 \par
2448                 {\cf20 // Fecha a tag </div> e </html>}\par
2449                 atributos += {\cf22 "</div></html>"};\par
2450 \par
2451                 {\cf20 // Cria a QLabel com os atributos}\par
2452                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
2453                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
2454                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2455                 labelAtributos->setFont(fontConteudo);\par
2456                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2457                 labelAtributos->setTextFormat(Qt::RichText);\par
2458                 labelAtributos->setText(atributos);\par
2459 \par
2460                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
2461                 QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
2462                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2463                 painter.setFont(fontHeader);\par
2464                 painter.setPen(QPen(Qt::white));\par
2465                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2466 \par
2467                 {\cf20 // Desenha a QLabel na imagem}\par
2468                 QPixmap pixmap = labelAtributos->grab();\par
2469                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
2470 \par
2471                 inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
2472             \}\par
2473         \}\par
2474     \}\par
2475 \par
2476     printer->newPage();\par
2477 \par
2478     {\cf20 // Desenha a imagem na p\'E1gina}\par
2479     painter.drawImage(logoRect, logo);\par
2480 \par
2481     QString TituloLinhas = {\cf22 "Linhas"};\par
2482 \par
2483     painter.setPen(QPen());\par
2484     painter.setFont(fontePrincipal);\par
2485     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
2486 \par
2487 \par
2488     printer->newPage();\par
2489 \par
2490     {\cf20 // Desenha a imagem na p\'E1gina}\par
2491     painter.drawImage(logoMenorRect, logo);\par
2492 \par
2493     inicioItem = 100;\par
2494 \par
2495     {\cf19 for}({\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
2496 \par
2497         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
2498             printer->newPage();\par
2499             inicioItem = 100;\par
2500             painter.drawImage(logoMenorRect, logo);\par
2501 \par
2502         \}\par
2503 \par
2504         QLabel* labelHeader = {\cf17 new} QLabel();\par
2505         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2506         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2507         labelHeader->setFont(fontHeader);\par
2508         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2509         labelHeader->setTextFormat(Qt::RichText);\par
2510 \par
2511 \par
2512         {\cf20 // Cria a QString atributos com a tag <html>}\par
2513         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2514 \par
2515         {\cf19 if}(FiltroLinha::correntePu)\{\par
2516             atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
2517             QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
2518             atributos = atributos.arg(corrente);\par
2519         \}\par
2520         {\cf19 if}(FiltroLinha::dht)\{\par
2521             atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
2522             QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
2523             atributos = atributos.arg(dht);\par
2524         \}\par
2525         {\cf19 if}(FiltroLinha::dit)\{\par
2526             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2527                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
2528                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
2529                 atributos = atributos.arg(j);\par
2530                 atributos = atributos.arg(tdi);\par
2531             \}\par
2532         \}\par
2533         {\cf19 if}(FiltroLinha::ditPercent)\{\par
2534             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2535                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
2536                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
2537                 atributos = atributos.arg(j);\par
2538                 atributos = atributos.arg(tdiPercent);\par
2539             \}\par
2540         \}\par
2541         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
2542             atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
2543             QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
2544             atributos = atributos.arg(correnteEficaz);\par
2545         \}\par
2546         {\cf19 if}(FiltroLinha::resistencia)\{\par
2547             atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
2548             QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
2549             atributos = atributos.arg(resistencia);\par
2550         \}\par
2551         {\cf19 if}(FiltroLinha::perdas)\{\par
2552             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2553             QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
2554             atributos = atributos.arg(perdas);\par
2555         \}\par
2556         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
2557             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2558             QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
2559             atributos = atributos.arg(perdasEficaz);\par
2560         \}\par
2561 \par
2562         {\cf20 // Fecha a tag </div> e </html>}\par
2563         atributos += {\cf22 "</div></html>"};\par
2564 \par
2565         {\cf20 // Cria a QLabel com os atributos}\par
2566         QLabel* labelAtributos = {\cf17 new} QLabel();\par
2567         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
2568         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2569         labelAtributos->setFont(fontConteudo);\par
2570         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2571         labelAtributos->setTextFormat(Qt::RichText);\par
2572         labelAtributos->setText(atributos);\par
2573 \par
2574         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
2575         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
2576         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
2577         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
2578 \par
2579 \par
2580         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2581         painter.setFont(fontHeader);\par
2582         painter.setPen(QPen(Qt::white));\par
2583         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2584 \par
2585         {\cf20 // Desenha a QLabel na imagem}\par
2586         QPixmap pixmap = labelAtributos->grab();\par
2587         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
2588 \par
2589         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
2590 \par
2591     \}\par
2592 \par
2593     painter.end();\par
2594 \}\par
}
}
{\xe \v ContCompBarrasInterL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContCompBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContCompBarrasInterL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1467                                                                \{\par
1468     QPainter painter(printer);\par
1469     painter.begin(printer);\par
1470     {\cf18 int} w = painter.device()->width();\par
1471     {\cf18 int} h = painter.device()->height();\par
1472 \par
1473     {\cf20 // Carrega a imagem do arquivo}\par
1474     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
1475 \par
1476     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1477     QRectF logoRect(20, 20, 300, 56);\par
1478 \par
1479     {\cf20 // Desenha a imagem na p\'E1gina}\par
1480     painter.drawImage(logoRect, logo);\par
1481 \par
1482     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
1483     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
1484 \par
1485     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
1486     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
1487 \par
1488     QFontMetrics fmPrincipal(fontePrincipal);\par
1489     QFontMetrics fmSubtexto(fonteSubtexto);\par
1490 \par
1491     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
1492     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
1493 \par
1494     painter.setFont(fontePrincipal);\par
1495     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
1496 \par
1497     painter.setFont(fonteSubtexto);\par
1498     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
1499 \par
1500     printer->newPage();\par
1501 \par
1502     {\cf20 // Desenha a imagem na p\'E1gina}\par
1503     painter.drawImage(logoRect, logo);\par
1504 \par
1505     QString TituloBarras = {\cf22 "Barras"};\par
1506 \par
1507 \par
1508     painter.setFont(fontePrincipal);\par
1509     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
1510 \par
1511     printer->newPage();\par
1512 \par
1513 \par
1514 \par
1515     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1516     QRectF logoMenorRect(20, 20, 100, 19);\par
1517 \par
1518     {\cf20 // Desenha a imagem na p\'E1gina}\par
1519     painter.drawImage(logoMenorRect, logo);\par
1520 \par
1521     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
1522     gradient.setColorAt(0, QColor(180, 235, 249));\par
1523     gradient.setColorAt(1, QColor(30, 56, 91));\par
1524     painter.setBrush(QBrush(gradient));\par
1525     {\cf20 //estilo da fonte do header}\par
1526     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
1527 \par
1528     {\cf20 // Define o estilo da fonte}\par
1529     QFont fontConteudo({\cf22 "Roboto"},12);\par
1530 \par
1531     {\cf18 int} inicioItem = 100;\par
1532 \par
1533 \par
1534     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
1535         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
1536             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
1537                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
1538                     printer->newPage();\par
1539                     inicioItem = 100;\par
1540                     painter.drawImage(logoMenorRect, logo);\par
1541                 \}\par
1542                 QLabel* labelHeader = {\cf17 new} QLabel();\par
1543                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1544                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1545                 labelHeader->setFont(fontHeader);\par
1546                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1547                 labelHeader->setTextFormat(Qt::RichText);\par
1548 \par
1549                 {\cf20 // Cria a QString atributos com a tag <html>}\par
1550                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1551 \par
1552                 {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
1553                     atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
1554                         QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
1555                     atributos = atributos.arg(tensao);\par
1556                 \}\par
1557 \par
1558                 {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
1559                     atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
1560                         QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
1561                     atributos = atributos.arg(tensaoNominal);\par
1562                 \}\par
1563 \par
1564                 {\cf19 if} (FiltrosBarra::thdv) \{\par
1565                     (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
1566                     QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
1567                     atributos = atributos.arg(thdv);\par
1568                 \}\par
1569 \par
1570                 {\cf19 if}(FiltrosBarra::dit)\{\par
1571                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1572                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
1573                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
1574                         atributos = atributos.arg(j);\par
1575                         atributos = atributos.arg(tdi);\par
1576                     \}\par
1577                 \}\par
1578 \par
1579                 {\cf19 if}(FiltrosBarra::ditPercent)\{\par
1580                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1581                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
1582                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
1583                         atributos = atributos.arg(j);\par
1584                         atributos = atributos.arg(tdi);\par
1585                     \}\par
1586                 \}\par
1587 \par
1588                 {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
1589                     atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
1590                     QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
1591                     atributos = atributos.arg(tensaoEficaz);\par
1592                 \}\par
1593 \par
1594                 {\cf20 // Fecha a tag </div> e </html>}\par
1595                 atributos += {\cf22 "</div></html>"};\par
1596 \par
1597                 {\cf20 // Cria a QLabel com os atributos}\par
1598                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
1599                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
1600                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1601                 labelAtributos->setFont(fontConteudo);\par
1602                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1603                 labelAtributos->setTextFormat(Qt::RichText);\par
1604                 labelAtributos->setText(atributos);\par
1605 \par
1606                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
1607                 QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
1608                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1609                 painter.setFont(fontHeader);\par
1610                 painter.setPen(QPen(Qt::white));\par
1611                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1612 \par
1613                 {\cf20 // Desenha a QLabel na imagem}\par
1614                 QPixmap pixmap = labelAtributos->grab();\par
1615                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
1616 \par
1617                 inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
1618             \}\par
1619         \}\par
1620     \}\par
1621 \par
1622     printer->newPage();\par
1623 \par
1624     {\cf20 // Desenha a imagem na p\'E1gina}\par
1625     painter.drawImage(logoRect, logo);\par
1626 \par
1627     QString TituloLinhas = {\cf22 "Linhas"};\par
1628 \par
1629     painter.setPen(QPen());\par
1630     painter.setFont(fontePrincipal);\par
1631     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
1632 \par
1633 \par
1634     printer->newPage();\par
1635 \par
1636     {\cf20 // Desenha a imagem na p\'E1gina}\par
1637     painter.drawImage(logoMenorRect, logo);\par
1638 \par
1639     inicioItem = 100;\par
1640 \par
1641     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1642         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
1643         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
1644         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
1645             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
1646                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
1647                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
1648                         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
1649                             printer->newPage();\par
1650                             inicioItem = 100;\par
1651                             painter.drawImage(logoMenorRect, logo);\par
1652                         \}\par
1653 \par
1654                         QLabel* labelHeader = {\cf17 new} QLabel();\par
1655                         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1656                         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1657                         labelHeader->setFont(fontHeader);\par
1658                         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1659                         labelHeader->setTextFormat(Qt::RichText);\par
1660 \par
1661 \par
1662                         {\cf20 // Cria a QString atributos com a tag <html>}\par
1663                         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1664 \par
1665                         {\cf19 if}(FiltroLinha::correntePu)\{\par
1666                             atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
1667                             QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
1668                             atributos = atributos.arg(corrente);\par
1669                         \}\par
1670                         {\cf19 if}(FiltroLinha::dht)\{\par
1671                             atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
1672                             QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
1673                             atributos = atributos.arg(dht);\par
1674                         \}\par
1675                         {\cf19 if}(FiltroLinha::dit)\{\par
1676                             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1677                                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
1678                                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
1679                                 atributos = atributos.arg(j);\par
1680                                 atributos = atributos.arg(tdi);\par
1681                             \}\par
1682                         \}\par
1683                         {\cf19 if}(FiltroLinha::ditPercent)\{\par
1684                             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1685                                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
1686                                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
1687                                 atributos = atributos.arg(j);\par
1688                                 atributos = atributos.arg(tdiPercent);\par
1689                             \}\par
1690                         \}\par
1691                         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
1692                             atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
1693                             QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
1694                             atributos = atributos.arg(correnteEficaz);\par
1695                         \}\par
1696                         {\cf19 if}(FiltroLinha::resistencia)\{\par
1697                             atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
1698                             QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
1699                             atributos = atributos.arg(resistencia);\par
1700                         \}\par
1701                         {\cf19 if}(FiltroLinha::perdas)\{\par
1702                             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1703                             QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
1704                             atributos = atributos.arg(perdas);\par
1705                         \}\par
1706                         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
1707                             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1708                             QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
1709                             atributos = atributos.arg(perdasEficaz);\par
1710                         \}\par
1711 \par
1712                         {\cf20 // Fecha a tag </div> e </html>}\par
1713                         atributos += {\cf22 "</div></html>"};\par
1714 \par
1715                         {\cf20 // Cria a QLabel com os atributos}\par
1716                         QLabel* labelAtributos = {\cf17 new} QLabel();\par
1717                         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
1718                         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1719                         labelAtributos->setFont(fontConteudo);\par
1720                         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1721                         labelAtributos->setTextFormat(Qt::RichText);\par
1722                         labelAtributos->setText(atributos);\par
1723 \par
1724                         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
1725                         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
1726                         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
1727                         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
1728 \par
1729 \par
1730                         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1731                         painter.setFont(fontHeader);\par
1732                         painter.setPen(QPen(Qt::white));\par
1733                         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1734 \par
1735                         {\cf20 // Desenha a QLabel na imagem}\par
1736                         QPixmap pixmap = labelAtributos->grab();\par
1737                         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
1738 \par
1739                         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
1740                     \}\par
1741                 \}\par
1742             \}\par
1743         \}\par
1744     \}\par
1745 \par
1746     painter.end();\par
1747 \}\par
}
}
{\xe \v ContCompBarrasInterL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContCompBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContCompBarrasInterL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1755                                                              \{\par
1756     QPainter painter(printer);\par
1757     painter.begin(printer);\par
1758     {\cf18 int} w = painter.device()->width();\par
1759     {\cf18 int} h = painter.device()->height();\par
1760 \par
1761     {\cf20 // Carrega a imagem do arquivo}\par
1762     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
1763 \par
1764     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1765     QRectF logoRect(20, 20, 300, 56);\par
1766 \par
1767     {\cf20 // Desenha a imagem na p\'E1gina}\par
1768     painter.drawImage(logoRect, logo);\par
1769 \par
1770     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
1771     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
1772 \par
1773     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
1774     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
1775 \par
1776     QFontMetrics fmPrincipal(fontePrincipal);\par
1777     QFontMetrics fmSubtexto(fonteSubtexto);\par
1778 \par
1779     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
1780     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
1781 \par
1782     painter.setFont(fontePrincipal);\par
1783     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
1784 \par
1785     painter.setFont(fonteSubtexto);\par
1786     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
1787 \par
1788     printer->newPage();\par
1789 \par
1790     {\cf20 // Desenha a imagem na p\'E1gina}\par
1791     painter.drawImage(logoRect, logo);\par
1792 \par
1793     QString TituloBarras = {\cf22 "Barras"};\par
1794 \par
1795 \par
1796     painter.setFont(fontePrincipal);\par
1797     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
1798 \par
1799     printer->newPage();\par
1800 \par
1801 \par
1802 \par
1803     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1804     QRectF logoMenorRect(20, 20, 100, 19);\par
1805 \par
1806     {\cf20 // Desenha a imagem na p\'E1gina}\par
1807     painter.drawImage(logoMenorRect, logo);\par
1808 \par
1809     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
1810     gradient.setColorAt(0, QColor(180, 235, 249));\par
1811     gradient.setColorAt(1, QColor(30, 56, 91));\par
1812     painter.setBrush(QBrush(gradient));\par
1813     {\cf20 //estilo da fonte do header}\par
1814     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
1815 \par
1816     {\cf20 // Define o estilo da fonte}\par
1817     QFont fontConteudo({\cf22 "Roboto"},12);\par
1818 \par
1819     {\cf18 int} inicioItem = 100;\par
1820 \par
1821 \par
1822     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
1823         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
1824             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
1825                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
1826                     printer->newPage();\par
1827                     inicioItem = 100;\par
1828                     painter.drawImage(logoMenorRect, logo);\par
1829                 \}\par
1830                 QLabel* labelHeader = {\cf17 new} QLabel();\par
1831                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1832                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1833                 labelHeader->setFont(fontHeader);\par
1834                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1835                 labelHeader->setTextFormat(Qt::RichText);\par
1836 \par
1837                 {\cf20 // Cria a QString atributos com a tag <html>}\par
1838                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1839 \par
1840                 {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
1841                     atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
1842                         QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
1843                     atributos = atributos.arg(tensao);\par
1844                 \}\par
1845 \par
1846                 {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
1847                     atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
1848                         QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
1849                     atributos = atributos.arg(tensaoNominal);\par
1850                 \}\par
1851 \par
1852                 {\cf19 if} (FiltrosBarra::thdv) \{\par
1853                     (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
1854                     QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
1855                     atributos = atributos.arg(thdv);\par
1856                 \}\par
1857 \par
1858                 {\cf19 if}(FiltrosBarra::dit)\{\par
1859                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1860                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
1861                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
1862                         atributos = atributos.arg(j);\par
1863                         atributos = atributos.arg(tdi);\par
1864                     \}\par
1865                 \}\par
1866 \par
1867                 {\cf19 if}(FiltrosBarra::ditPercent)\{\par
1868                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1869                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
1870                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
1871                         atributos = atributos.arg(j);\par
1872                         atributos = atributos.arg(tdi);\par
1873                     \}\par
1874                 \}\par
1875 \par
1876                 {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
1877                     atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
1878                     QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
1879                     atributos = atributos.arg(tensaoEficaz);\par
1880                 \}\par
1881 \par
1882                 {\cf20 // Fecha a tag </div> e </html>}\par
1883                 atributos += {\cf22 "</div></html>"};\par
1884 \par
1885                 {\cf20 // Cria a QLabel com os atributos}\par
1886                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
1887                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
1888                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1889                 labelAtributos->setFont(fontConteudo);\par
1890                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1891                 labelAtributos->setTextFormat(Qt::RichText);\par
1892                 labelAtributos->setText(atributos);\par
1893 \par
1894                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
1895                 QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
1896                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1897                 painter.setFont(fontHeader);\par
1898                 painter.setPen(QPen(Qt::white));\par
1899                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1900 \par
1901                 {\cf20 // Desenha a QLabel na imagem}\par
1902                 QPixmap pixmap = labelAtributos->grab();\par
1903                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
1904 \par
1905                 inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
1906             \}\par
1907         \}\par
1908     \}\par
1909 \par
1910     printer->newPage();\par
1911 \par
1912     {\cf20 // Desenha a imagem na p\'E1gina}\par
1913     painter.drawImage(logoRect, logo);\par
1914 \par
1915     QString TituloLinhas = {\cf22 "Linhas"};\par
1916 \par
1917     painter.setPen(QPen());\par
1918     painter.setFont(fontePrincipal);\par
1919     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
1920 \par
1921 \par
1922     printer->newPage();\par
1923 \par
1924     {\cf20 // Desenha a imagem na p\'E1gina}\par
1925     painter.drawImage(logoMenorRect, logo);\par
1926 \par
1927     inicioItem = 100;\par
1928     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1929         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
1930         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
1931             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
1932                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
1933                     printer->newPage();\par
1934                     inicioItem = 100;\par
1935                     painter.drawImage(logoMenorRect, logo);\par
1936                 \}\par
1937 \par
1938                 QLabel* labelHeader = {\cf17 new} QLabel();\par
1939                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1940                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1941                 labelHeader->setFont(fontHeader);\par
1942                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1943                 labelHeader->setTextFormat(Qt::RichText);\par
1944 \par
1945 \par
1946                 {\cf20 // Cria a QString atributos com a tag <html>}\par
1947                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1948 \par
1949                 {\cf19 if}(FiltroLinha::correntePu)\{\par
1950                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
1951                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
1952                     atributos = atributos.arg(corrente);\par
1953                 \}\par
1954                 {\cf19 if}(FiltroLinha::dht)\{\par
1955                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
1956                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
1957                     atributos = atributos.arg(dht);\par
1958                 \}\par
1959                 {\cf19 if}(FiltroLinha::dit)\{\par
1960                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1961                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
1962                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
1963                         atributos = atributos.arg(j);\par
1964                         atributos = atributos.arg(tdi);\par
1965                     \}\par
1966                 \}\par
1967                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
1968                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1969                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
1970                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
1971                         atributos = atributos.arg(j);\par
1972                         atributos = atributos.arg(tdiPercent);\par
1973                     \}\par
1974                 \}\par
1975                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
1976                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
1977                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
1978                     atributos = atributos.arg(correnteEficaz);\par
1979                 \}\par
1980                 {\cf19 if}(FiltroLinha::resistencia)\{\par
1981                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
1982                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
1983                     atributos = atributos.arg(resistencia);\par
1984                 \}\par
1985                 {\cf19 if}(FiltroLinha::perdas)\{\par
1986                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1987                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
1988                     atributos = atributos.arg(perdas);\par
1989                 \}\par
1990                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
1991                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1992                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
1993                     atributos = atributos.arg(perdasEficaz);\par
1994                 \}\par
1995 \par
1996                 {\cf20 // Fecha a tag </div> e </html>}\par
1997                 atributos += {\cf22 "</div></html>"};\par
1998 \par
1999                 {\cf20 // Cria a QLabel com os atributos}\par
2000                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
2001                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
2002                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2003                 labelAtributos->setFont(fontConteudo);\par
2004                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2005                 labelAtributos->setTextFormat(Qt::RichText);\par
2006                 labelAtributos->setText(atributos);\par
2007 \par
2008                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
2009                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
2010                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
2011                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
2012 \par
2013 \par
2014                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2015                 painter.setFont(fontHeader);\par
2016                 painter.setPen(QPen(Qt::white));\par
2017                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2018 \par
2019                 {\cf20 // Desenha a QLabel na imagem}\par
2020                 QPixmap pixmap = labelAtributos->grab();\par
2021                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
2022 \par
2023                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
2024             \}\par
2025         \}\par
2026     \}\par
2027 \par
2028     painter.end();\par
2029 \}\par
}
}
{\xe \v ContCompBarrasTodL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContCompBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContCompBarrasTodL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 2037                                                               \{\par
2038     QPainter painter(printer);\par
2039     painter.begin(printer);\par
2040     {\cf18 int} w = painter.device()->width();\par
2041     {\cf18 int} h = painter.device()->height();\par
2042 \par
2043     {\cf20 // Carrega a imagem do arquivo}\par
2044     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
2045 \par
2046     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2047     QRectF logoRect(20, 20, 300, 56);\par
2048 \par
2049     {\cf20 // Desenha a imagem na p\'E1gina}\par
2050     painter.drawImage(logoRect, logo);\par
2051 \par
2052     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
2053     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
2054 \par
2055     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
2056     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
2057 \par
2058     QFontMetrics fmPrincipal(fontePrincipal);\par
2059     QFontMetrics fmSubtexto(fonteSubtexto);\par
2060 \par
2061     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
2062     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
2063 \par
2064     painter.setFont(fontePrincipal);\par
2065     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
2066 \par
2067     painter.setFont(fonteSubtexto);\par
2068     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
2069 \par
2070     printer->newPage();\par
2071 \par
2072     {\cf20 // Desenha a imagem na p\'E1gina}\par
2073     painter.drawImage(logoRect, logo);\par
2074 \par
2075     QString TituloBarras = {\cf22 "Barras"};\par
2076 \par
2077 \par
2078     painter.setFont(fontePrincipal);\par
2079     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
2080 \par
2081     printer->newPage();\par
2082 \par
2083 \par
2084 \par
2085     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2086     QRectF logoMenorRect(20, 20, 100, 19);\par
2087 \par
2088     {\cf20 // Desenha a imagem na p\'E1gina}\par
2089     painter.drawImage(logoMenorRect, logo);\par
2090 \par
2091     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
2092     gradient.setColorAt(0, QColor(180, 235, 249));\par
2093     gradient.setColorAt(1, QColor(30, 56, 91));\par
2094     painter.setBrush(QBrush(gradient));\par
2095     {\cf20 //estilo da fonte do header}\par
2096     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
2097 \par
2098     {\cf20 // Define o estilo da fonte}\par
2099     QFont fontConteudo({\cf22 "Roboto"},12);\par
2100 \par
2101     {\cf18 int} inicioItem = 100;\par
2102 \par
2103 \par
2104     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
2105         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
2106             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
2107                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
2108                     printer->newPage();\par
2109                     inicioItem = 100;\par
2110                     painter.drawImage(logoMenorRect, logo);\par
2111                 \}\par
2112                 QLabel* labelHeader = {\cf17 new} QLabel();\par
2113                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2114                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2115                 labelHeader->setFont(fontHeader);\par
2116                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2117                 labelHeader->setTextFormat(Qt::RichText);\par
2118 \par
2119                 {\cf20 // Cria a QString atributos com a tag <html>}\par
2120                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2121 \par
2122                 {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
2123                     atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
2124                         QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
2125                     atributos = atributos.arg(tensao);\par
2126                 \}\par
2127 \par
2128                 {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
2129                     atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
2130                         QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
2131                     atributos = atributos.arg(tensaoNominal);\par
2132                 \}\par
2133 \par
2134                 {\cf19 if} (FiltrosBarra::thdv) \{\par
2135                     (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
2136                     QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
2137                     atributos = atributos.arg(thdv);\par
2138                 \}\par
2139 \par
2140                 {\cf19 if}(FiltrosBarra::dit)\{\par
2141                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2142                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
2143                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
2144                         atributos = atributos.arg(j);\par
2145                         atributos = atributos.arg(tdi);\par
2146                     \}\par
2147                 \}\par
2148 \par
2149                 {\cf19 if}(FiltrosBarra::ditPercent)\{\par
2150                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2151                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
2152                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
2153                         atributos = atributos.arg(j);\par
2154                         atributos = atributos.arg(tdi);\par
2155                     \}\par
2156                 \}\par
2157 \par
2158                 {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
2159                     atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
2160                     QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
2161                     atributos = atributos.arg(tensaoEficaz);\par
2162                 \}\par
2163 \par
2164                 {\cf20 // Fecha a tag </div> e </html>}\par
2165                 atributos += {\cf22 "</div></html>"};\par
2166 \par
2167                 {\cf20 // Cria a QLabel com os atributos}\par
2168                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
2169                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
2170                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2171                 labelAtributos->setFont(fontConteudo);\par
2172                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2173                 labelAtributos->setTextFormat(Qt::RichText);\par
2174                 labelAtributos->setText(atributos);\par
2175 \par
2176                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
2177                 QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
2178                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2179                 painter.setFont(fontHeader);\par
2180                 painter.setPen(QPen(Qt::white));\par
2181                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2182 \par
2183                 {\cf20 // Desenha a QLabel na imagem}\par
2184                 QPixmap pixmap = labelAtributos->grab();\par
2185                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
2186 \par
2187                 inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
2188             \}\par
2189         \}\par
2190     \}\par
2191 \par
2192     printer->newPage();\par
2193 \par
2194     {\cf20 // Desenha a imagem na p\'E1gina}\par
2195     painter.drawImage(logoRect, logo);\par
2196 \par
2197     QString TituloLinhas = {\cf22 "Linhas"};\par
2198 \par
2199     painter.setPen(QPen());\par
2200     painter.setFont(fontePrincipal);\par
2201     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
2202 \par
2203 \par
2204     printer->newPage();\par
2205 \par
2206     {\cf20 // Desenha a imagem na p\'E1gina}\par
2207     painter.drawImage(logoMenorRect, logo);\par
2208 \par
2209     inicioItem = 100;\par
2210 \par
2211     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
2212         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
2213         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
2214             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
2215                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
2216                     printer->newPage();\par
2217                     inicioItem = 100;\par
2218                     painter.drawImage(logoMenorRect, logo);\par
2219 \par
2220                 \}\par
2221 \par
2222                 QLabel* labelHeader = {\cf17 new} QLabel();\par
2223                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2224                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2225                 labelHeader->setFont(fontHeader);\par
2226                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2227                 labelHeader->setTextFormat(Qt::RichText);\par
2228 \par
2229 \par
2230                 {\cf20 // Cria a QString atributos com a tag <html>}\par
2231                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2232 \par
2233                 {\cf19 if}(FiltroLinha::correntePu)\{\par
2234                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
2235                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
2236                     atributos = atributos.arg(corrente);\par
2237                 \}\par
2238                 {\cf19 if}(FiltroLinha::dht)\{\par
2239                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
2240                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
2241                     atributos = atributos.arg(dht);\par
2242                 \}\par
2243                 {\cf19 if}(FiltroLinha::dit)\{\par
2244                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2245                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
2246                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
2247                         atributos = atributos.arg(j);\par
2248                         atributos = atributos.arg(tdi);\par
2249                     \}\par
2250                 \}\par
2251                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
2252                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2253                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
2254                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
2255                         atributos = atributos.arg(j);\par
2256                         atributos = atributos.arg(tdiPercent);\par
2257                     \}\par
2258                 \}\par
2259                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
2260                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
2261                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
2262                     atributos = atributos.arg(correnteEficaz);\par
2263                 \}\par
2264                 {\cf19 if}(FiltroLinha::resistencia)\{\par
2265                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
2266                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
2267                     atributos = atributos.arg(resistencia);\par
2268                 \}\par
2269                 {\cf19 if}(FiltroLinha::perdas)\{\par
2270                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2271                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
2272                     atributos = atributos.arg(perdas);\par
2273                 \}\par
2274                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
2275                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2276                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
2277                     atributos = atributos.arg(perdasEficaz);\par
2278                 \}\par
2279 \par
2280                 {\cf20 // Fecha a tag </div> e </html>}\par
2281                 atributos += {\cf22 "</div></html>"};\par
2282 \par
2283                 {\cf20 // Cria a QLabel com os atributos}\par
2284                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
2285                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
2286                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2287                 labelAtributos->setFont(fontConteudo);\par
2288                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2289                 labelAtributos->setTextFormat(Qt::RichText);\par
2290                 labelAtributos->setText(atributos);\par
2291 \par
2292                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
2293                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
2294                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
2295                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
2296 \par
2297 \par
2298                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2299                 painter.setFont(fontHeader);\par
2300                 painter.setPen(QPen(Qt::white));\par
2301                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2302 \par
2303                 {\cf20 // Desenha a QLabel na imagem}\par
2304                 QPixmap pixmap = labelAtributos->grab();\par
2305                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
2306 \par
2307                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
2308             \}\par
2309         \}\par
2310     \}\par
2311 \par
2312     painter.end();\par
2313 \}\par
}
}
{\xe \v ContInfecBarrasInterL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInfecBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInfecBarrasInterL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 2602                                                                 \{\par
2603     QPainter painter(printer);\par
2604     painter.begin(printer);\par
2605     {\cf18 int} w = painter.device()->width();\par
2606     {\cf18 int} h = painter.device()->height();\par
2607 \par
2608     {\cf20 // Carrega a imagem do arquivo}\par
2609     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
2610 \par
2611     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2612     QRectF logoRect(20, 20, 300, 56);\par
2613 \par
2614     {\cf20 // Desenha a imagem na p\'E1gina}\par
2615     painter.drawImage(logoRect, logo);\par
2616 \par
2617     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
2618     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
2619 \par
2620     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
2621     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
2622 \par
2623     QFontMetrics fmPrincipal(fontePrincipal);\par
2624     QFontMetrics fmSubtexto(fonteSubtexto);\par
2625 \par
2626     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
2627     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
2628 \par
2629     painter.setFont(fontePrincipal);\par
2630     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
2631 \par
2632     painter.setFont(fonteSubtexto);\par
2633     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
2634 \par
2635     printer->newPage();\par
2636 \par
2637     {\cf20 // Desenha a imagem na p\'E1gina}\par
2638     painter.drawImage(logoRect, logo);\par
2639 \par
2640     QString TituloBarras = {\cf22 "Barras"};\par
2641 \par
2642 \par
2643     painter.setFont(fontePrincipal);\par
2644     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
2645 \par
2646     printer->newPage();\par
2647 \par
2648 \par
2649 \par
2650     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2651     QRectF logoMenorRect(20, 20, 100, 19);\par
2652 \par
2653     {\cf20 // Desenha a imagem na p\'E1gina}\par
2654     painter.drawImage(logoMenorRect, logo);\par
2655 \par
2656     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
2657     gradient.setColorAt(0, QColor(180, 235, 249));\par
2658     gradient.setColorAt(1, QColor(30, 56, 91));\par
2659     painter.setBrush(QBrush(gradient));\par
2660     {\cf20 //estilo da fonte do header}\par
2661     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
2662 \par
2663     {\cf20 // Define o estilo da fonte}\par
2664     QFont fontConteudo({\cf22 "Roboto"},12);\par
2665 \par
2666     {\cf18 int} inicioItem = 100;\par
2667 \par
2668 \par
2669     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
2670         {\cf18 bool} infectada = {\cf17 false};\par
2671         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
2672             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
2673                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
2674                     infectada = {\cf17 true};\par
2675                     {\cf19 break};\par
2676                 \}\par
2677             \}\par
2678         \}{\cf19 else}\{\par
2679             infectada = {\cf17 true};\par
2680         \}\par
2681         {\cf19 if}(infectada)\{\par
2682             {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
2683                 printer->newPage();\par
2684                 inicioItem = 100;\par
2685                 painter.drawImage(logoMenorRect, logo);\par
2686             \}\par
2687             QLabel* labelHeader = {\cf17 new} QLabel();\par
2688             labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2689             labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2690             labelHeader->setFont(fontHeader);\par
2691             labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2692             labelHeader->setTextFormat(Qt::RichText);\par
2693 \par
2694             {\cf20 // Cria a QString atributos com a tag <html>}\par
2695             QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2696 \par
2697             {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
2698                 atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
2699                     QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
2700                 atributos = atributos.arg(tensao);\par
2701             \}\par
2702 \par
2703             {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
2704                 atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
2705                     QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
2706                 atributos = atributos.arg(tensaoNominal);\par
2707             \}\par
2708 \par
2709             {\cf19 if} (FiltrosBarra::thdv) \{\par
2710                 (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
2711                 QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
2712                 atributos = atributos.arg(thdv);\par
2713             \}\par
2714 \par
2715             {\cf19 if}(FiltrosBarra::dit)\{\par
2716                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2717                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
2718                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
2719                     atributos = atributos.arg(j);\par
2720                     atributos = atributos.arg(tdi);\par
2721                 \}\par
2722             \}\par
2723 \par
2724             {\cf19 if}(FiltrosBarra::ditPercent)\{\par
2725                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2726                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
2727                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
2728                     atributos = atributos.arg(j);\par
2729                     atributos = atributos.arg(tdi);\par
2730                 \}\par
2731             \}\par
2732 \par
2733             {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
2734                 atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
2735                 QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
2736                 atributos = atributos.arg(tensaoEficaz);\par
2737             \}\par
2738 \par
2739             {\cf20 // Fecha a tag </div> e </html>}\par
2740             atributos += {\cf22 "</div></html>"};\par
2741 \par
2742             {\cf20 // Cria a QLabel com os atributos}\par
2743             QLabel* labelAtributos = {\cf17 new} QLabel();\par
2744             labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
2745             labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2746             labelAtributos->setFont(fontConteudo);\par
2747             labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2748             labelAtributos->setTextFormat(Qt::RichText);\par
2749             labelAtributos->setText(atributos);\par
2750 \par
2751             {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
2752             QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
2753             painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2754             painter.setFont(fontHeader);\par
2755             painter.setPen(QPen(Qt::white));\par
2756             painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2757 \par
2758             {\cf20 // Desenha a QLabel na imagem}\par
2759             QPixmap pixmap = labelAtributos->grab();\par
2760             painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
2761 \par
2762             inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
2763         \}\par
2764     \}\par
2765 \par
2766     printer->newPage();\par
2767 \par
2768     {\cf20 // Desenha a imagem na p\'E1gina}\par
2769     painter.drawImage(logoRect, logo);\par
2770 \par
2771     QString TituloLinhas = {\cf22 "Linhas"};\par
2772 \par
2773     painter.setPen(QPen());\par
2774     painter.setFont(fontePrincipal);\par
2775     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
2776 \par
2777 \par
2778     printer->newPage();\par
2779 \par
2780     {\cf20 // Desenha a imagem na p\'E1gina}\par
2781     painter.drawImage(logoMenorRect, logo);\par
2782 \par
2783     inicioItem = 100;\par
2784 \par
2785     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
2786         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
2787         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
2788         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
2789             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
2790                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
2791                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
2792                         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
2793                             printer->newPage();\par
2794                             inicioItem = 100;\par
2795                             painter.drawImage(logoMenorRect, logo);\par
2796                         \}\par
2797 \par
2798                         QLabel* labelHeader = {\cf17 new} QLabel();\par
2799                         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2800                         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2801                         labelHeader->setFont(fontHeader);\par
2802                         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2803                         labelHeader->setTextFormat(Qt::RichText);\par
2804 \par
2805 \par
2806                         {\cf20 // Cria a QString atributos com a tag <html>}\par
2807                         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2808 \par
2809                         {\cf19 if}(FiltroLinha::correntePu)\{\par
2810                             atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
2811                             QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
2812                             atributos = atributos.arg(corrente);\par
2813                         \}\par
2814                         {\cf19 if}(FiltroLinha::dht)\{\par
2815                             atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
2816                             QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
2817                             atributos = atributos.arg(dht);\par
2818                         \}\par
2819                         {\cf19 if}(FiltroLinha::dit)\{\par
2820                             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2821                                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
2822                                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
2823                                 atributos = atributos.arg(j);\par
2824                                 atributos = atributos.arg(tdi);\par
2825                             \}\par
2826                         \}\par
2827                         {\cf19 if}(FiltroLinha::ditPercent)\{\par
2828                             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2829                                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
2830                                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
2831                                 atributos = atributos.arg(j);\par
2832                                 atributos = atributos.arg(tdiPercent);\par
2833                             \}\par
2834                         \}\par
2835                         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
2836                             atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
2837                             QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
2838                             atributos = atributos.arg(correnteEficaz);\par
2839                         \}\par
2840                         {\cf19 if}(FiltroLinha::resistencia)\{\par
2841                             atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
2842                             QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
2843                             atributos = atributos.arg(resistencia);\par
2844                         \}\par
2845                         {\cf19 if}(FiltroLinha::perdas)\{\par
2846                             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2847                             QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
2848                             atributos = atributos.arg(perdas);\par
2849                         \}\par
2850                         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
2851                             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2852                             QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
2853                             atributos = atributos.arg(perdasEficaz);\par
2854                         \}\par
2855 \par
2856                         {\cf20 // Fecha a tag </div> e </html>}\par
2857                         atributos += {\cf22 "</div></html>"};\par
2858 \par
2859                         {\cf20 // Cria a QLabel com os atributos}\par
2860                         QLabel* labelAtributos = {\cf17 new} QLabel();\par
2861                         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
2862                         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2863                         labelAtributos->setFont(fontConteudo);\par
2864                         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2865                         labelAtributos->setTextFormat(Qt::RichText);\par
2866                         labelAtributos->setText(atributos);\par
2867 \par
2868                         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
2869                         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
2870                         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
2871                         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
2872 \par
2873 \par
2874                         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2875                         painter.setFont(fontHeader);\par
2876                         painter.setPen(QPen(Qt::white));\par
2877                         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2878 \par
2879                         {\cf20 // Desenha a QLabel na imagem}\par
2880                         QPixmap pixmap = labelAtributos->grab();\par
2881                         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
2882 \par
2883                         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
2884                     \}\par
2885                 \}\par
2886             \}\par
2887         \}\par
2888     \}\par
2889 \par
2890     painter.end();\par
2891 \}\par
}
}
{\xe \v ContInfecBarrasInterL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInfecBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInfecBarrasInterL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 2899                                                               \{\par
2900     QPainter painter(printer);\par
2901     painter.begin(printer);\par
2902     {\cf18 int} w = painter.device()->width();\par
2903     {\cf18 int} h = painter.device()->height();\par
2904 \par
2905     {\cf20 // Carrega a imagem do arquivo}\par
2906     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
2907 \par
2908     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2909     QRectF logoRect(20, 20, 300, 56);\par
2910 \par
2911     {\cf20 // Desenha a imagem na p\'E1gina}\par
2912     painter.drawImage(logoRect, logo);\par
2913 \par
2914     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
2915     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
2916 \par
2917     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
2918     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
2919 \par
2920     QFontMetrics fmPrincipal(fontePrincipal);\par
2921     QFontMetrics fmSubtexto(fonteSubtexto);\par
2922 \par
2923     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
2924     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
2925 \par
2926     painter.setFont(fontePrincipal);\par
2927     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
2928 \par
2929     painter.setFont(fonteSubtexto);\par
2930     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
2931 \par
2932     printer->newPage();\par
2933 \par
2934     {\cf20 // Desenha a imagem na p\'E1gina}\par
2935     painter.drawImage(logoRect, logo);\par
2936 \par
2937     QString TituloBarras = {\cf22 "Barras"};\par
2938 \par
2939 \par
2940     painter.setFont(fontePrincipal);\par
2941     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
2942 \par
2943     printer->newPage();\par
2944 \par
2945 \par
2946 \par
2947     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2948     QRectF logoMenorRect(20, 20, 100, 19);\par
2949 \par
2950     {\cf20 // Desenha a imagem na p\'E1gina}\par
2951     painter.drawImage(logoMenorRect, logo);\par
2952 \par
2953     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
2954     gradient.setColorAt(0, QColor(180, 235, 249));\par
2955     gradient.setColorAt(1, QColor(30, 56, 91));\par
2956     painter.setBrush(QBrush(gradient));\par
2957     {\cf20 //estilo da fonte do header}\par
2958     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
2959 \par
2960     {\cf20 // Define o estilo da fonte}\par
2961     QFont fontConteudo({\cf22 "Roboto"},12);\par
2962 \par
2963     {\cf18 int} inicioItem = 100;\par
2964 \par
2965 \par
2966     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
2967         {\cf18 bool} infectada = {\cf17 false};\par
2968         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
2969             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
2970                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
2971                     infectada = {\cf17 true};\par
2972                     {\cf19 break};\par
2973                 \}\par
2974             \}\par
2975         \}{\cf19 else}\{\par
2976             infectada = {\cf17 true};\par
2977         \}\par
2978         {\cf19 if}(infectada)\{\par
2979             {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
2980                 printer->newPage();\par
2981                 inicioItem = 100;\par
2982                 painter.drawImage(logoMenorRect, logo);\par
2983             \}\par
2984             QLabel* labelHeader = {\cf17 new} QLabel();\par
2985             labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2986             labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2987             labelHeader->setFont(fontHeader);\par
2988             labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2989             labelHeader->setTextFormat(Qt::RichText);\par
2990 \par
2991             {\cf20 // Cria a QString atributos com a tag <html>}\par
2992             QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2993 \par
2994             {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
2995                 atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
2996                     QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
2997                 atributos = atributos.arg(tensao);\par
2998             \}\par
2999 \par
3000             {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
3001                 atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
3002                     QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
3003                 atributos = atributos.arg(tensaoNominal);\par
3004             \}\par
3005 \par
3006             {\cf19 if} (FiltrosBarra::thdv) \{\par
3007                 (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
3008                 QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
3009                 atributos = atributos.arg(thdv);\par
3010             \}\par
3011 \par
3012             {\cf19 if}(FiltrosBarra::dit)\{\par
3013                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3014                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
3015                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
3016                     atributos = atributos.arg(j);\par
3017                     atributos = atributos.arg(tdi);\par
3018                 \}\par
3019             \}\par
3020 \par
3021             {\cf19 if}(FiltrosBarra::ditPercent)\{\par
3022                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3023                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
3024                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
3025                     atributos = atributos.arg(j);\par
3026                     atributos = atributos.arg(tdi);\par
3027                 \}\par
3028             \}\par
3029 \par
3030             {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
3031                 atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
3032                 QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
3033                 atributos = atributos.arg(tensaoEficaz);\par
3034             \}\par
3035 \par
3036             {\cf20 // Fecha a tag </div> e </html>}\par
3037             atributos += {\cf22 "</div></html>"};\par
3038 \par
3039             {\cf20 // Cria a QLabel com os atributos}\par
3040             QLabel* labelAtributos = {\cf17 new} QLabel();\par
3041             labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
3042             labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3043             labelAtributos->setFont(fontConteudo);\par
3044             labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3045             labelAtributos->setTextFormat(Qt::RichText);\par
3046             labelAtributos->setText(atributos);\par
3047 \par
3048             {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
3049             QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
3050             painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3051             painter.setFont(fontHeader);\par
3052             painter.setPen(QPen(Qt::white));\par
3053             painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3054 \par
3055             {\cf20 // Desenha a QLabel na imagem}\par
3056             QPixmap pixmap = labelAtributos->grab();\par
3057             painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
3058 \par
3059             inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
3060         \}\par
3061     \}\par
3062 \par
3063     printer->newPage();\par
3064 \par
3065     {\cf20 // Desenha a imagem na p\'E1gina}\par
3066     painter.drawImage(logoRect, logo);\par
3067 \par
3068     QString TituloLinhas = {\cf22 "Linhas"};\par
3069 \par
3070     painter.setPen(QPen());\par
3071     painter.setFont(fontePrincipal);\par
3072     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
3073 \par
3074 \par
3075     printer->newPage();\par
3076 \par
3077     {\cf20 // Desenha a imagem na p\'E1gina}\par
3078     painter.drawImage(logoMenorRect, logo);\par
3079 \par
3080     inicioItem = 100;\par
3081     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
3082         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
3083         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
3084             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
3085                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
3086                     printer->newPage();\par
3087                     inicioItem = 100;\par
3088                     painter.drawImage(logoMenorRect, logo);\par
3089                 \}\par
3090 \par
3091                 QLabel* labelHeader = {\cf17 new} QLabel();\par
3092                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3093                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3094                 labelHeader->setFont(fontHeader);\par
3095                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3096                 labelHeader->setTextFormat(Qt::RichText);\par
3097 \par
3098 \par
3099                 {\cf20 // Cria a QString atributos com a tag <html>}\par
3100                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3101 \par
3102                 {\cf19 if}(FiltroLinha::correntePu)\{\par
3103                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
3104                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
3105                     atributos = atributos.arg(corrente);\par
3106                 \}\par
3107                 {\cf19 if}(FiltroLinha::dht)\{\par
3108                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
3109                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
3110                     atributos = atributos.arg(dht);\par
3111                 \}\par
3112                 {\cf19 if}(FiltroLinha::dit)\{\par
3113                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3114                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
3115                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
3116                         atributos = atributos.arg(j);\par
3117                         atributos = atributos.arg(tdi);\par
3118                     \}\par
3119                 \}\par
3120                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
3121                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3122                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
3123                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
3124                         atributos = atributos.arg(j);\par
3125                         atributos = atributos.arg(tdiPercent);\par
3126                     \}\par
3127                 \}\par
3128                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
3129                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
3130                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
3131                     atributos = atributos.arg(correnteEficaz);\par
3132                 \}\par
3133                 {\cf19 if}(FiltroLinha::resistencia)\{\par
3134                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
3135                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
3136                     atributos = atributos.arg(resistencia);\par
3137                 \}\par
3138                 {\cf19 if}(FiltroLinha::perdas)\{\par
3139                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3140                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
3141                     atributos = atributos.arg(perdas);\par
3142                 \}\par
3143                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
3144                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3145                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
3146                     atributos = atributos.arg(perdasEficaz);\par
3147                 \}\par
3148 \par
3149                 {\cf20 // Fecha a tag </div> e </html>}\par
3150                 atributos += {\cf22 "</div></html>"};\par
3151 \par
3152                 {\cf20 // Cria a QLabel com os atributos}\par
3153                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
3154                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
3155                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3156                 labelAtributos->setFont(fontConteudo);\par
3157                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3158                 labelAtributos->setTextFormat(Qt::RichText);\par
3159                 labelAtributos->setText(atributos);\par
3160 \par
3161                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
3162                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
3163                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
3164                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
3165 \par
3166 \par
3167                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3168                 painter.setFont(fontHeader);\par
3169                 painter.setPen(QPen(Qt::white));\par
3170                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3171 \par
3172                 {\cf20 // Desenha a QLabel na imagem}\par
3173                 QPixmap pixmap = labelAtributos->grab();\par
3174                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
3175 \par
3176                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
3177             \}\par
3178         \}\par
3179     \}\par
3180 \par
3181     painter.end();\par
3182 \}\par
}
}
{\xe \v ContInfecBarrasTodL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInfecBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInfecBarrasTodL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3190                                                                \{\par
3191     QPainter painter(printer);\par
3192     painter.begin(printer);\par
3193     {\cf18 int} w = painter.device()->width();\par
3194     {\cf18 int} h = painter.device()->height();\par
3195 \par
3196     {\cf20 // Carrega a imagem do arquivo}\par
3197     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
3198 \par
3199     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
3200     QRectF logoRect(20, 20, 300, 56);\par
3201 \par
3202     {\cf20 // Desenha a imagem na p\'E1gina}\par
3203     painter.drawImage(logoRect, logo);\par
3204 \par
3205     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
3206     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
3207 \par
3208     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
3209     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
3210 \par
3211     QFontMetrics fmPrincipal(fontePrincipal);\par
3212     QFontMetrics fmSubtexto(fonteSubtexto);\par
3213 \par
3214     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
3215     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
3216 \par
3217     painter.setFont(fontePrincipal);\par
3218     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
3219 \par
3220     painter.setFont(fonteSubtexto);\par
3221     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
3222 \par
3223     printer->newPage();\par
3224 \par
3225     {\cf20 // Desenha a imagem na p\'E1gina}\par
3226     painter.drawImage(logoRect, logo);\par
3227 \par
3228     QString TituloBarras = {\cf22 "Barras"};\par
3229 \par
3230 \par
3231     painter.setFont(fontePrincipal);\par
3232     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
3233 \par
3234     printer->newPage();\par
3235 \par
3236 \par
3237 \par
3238     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
3239     QRectF logoMenorRect(20, 20, 100, 19);\par
3240 \par
3241     {\cf20 // Desenha a imagem na p\'E1gina}\par
3242     painter.drawImage(logoMenorRect, logo);\par
3243 \par
3244     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
3245     gradient.setColorAt(0, QColor(180, 235, 249));\par
3246     gradient.setColorAt(1, QColor(30, 56, 91));\par
3247     painter.setBrush(QBrush(gradient));\par
3248     {\cf20 //estilo da fonte do header}\par
3249     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
3250 \par
3251     {\cf20 // Define o estilo da fonte}\par
3252     QFont fontConteudo({\cf22 "Roboto"},12);\par
3253 \par
3254     {\cf18 int} inicioItem = 100;\par
3255 \par
3256 \par
3257     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
3258         {\cf18 bool} infectada = {\cf17 false};\par
3259         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
3260             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
3261                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
3262                     infectada = {\cf17 true};\par
3263                     {\cf19 break};\par
3264                 \}\par
3265             \}\par
3266         \}{\cf19 else}\{\par
3267             infectada = {\cf17 true};\par
3268         \}\par
3269         {\cf19 if}(infectada)\{\par
3270             {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
3271                 printer->newPage();\par
3272                 inicioItem = 100;\par
3273                 painter.drawImage(logoMenorRect, logo);\par
3274             \}\par
3275             QLabel* labelHeader = {\cf17 new} QLabel();\par
3276             labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3277             labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3278             labelHeader->setFont(fontHeader);\par
3279             labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3280             labelHeader->setTextFormat(Qt::RichText);\par
3281 \par
3282             {\cf20 // Cria a QString atributos com a tag <html>}\par
3283             QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3284 \par
3285             {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
3286                 atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
3287                     QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
3288                 atributos = atributos.arg(tensao);\par
3289             \}\par
3290 \par
3291             {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
3292                 atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
3293                     QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
3294                 atributos = atributos.arg(tensaoNominal);\par
3295             \}\par
3296 \par
3297             {\cf19 if} (FiltrosBarra::thdv) \{\par
3298                 (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
3299                 QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
3300                 atributos = atributos.arg(thdv);\par
3301             \}\par
3302 \par
3303             {\cf19 if}(FiltrosBarra::dit)\{\par
3304                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3305                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
3306                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
3307                     atributos = atributos.arg(j);\par
3308                     atributos = atributos.arg(tdi);\par
3309                 \}\par
3310             \}\par
3311 \par
3312             {\cf19 if}(FiltrosBarra::ditPercent)\{\par
3313                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3314                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
3315                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
3316                     atributos = atributos.arg(j);\par
3317                     atributos = atributos.arg(tdi);\par
3318                 \}\par
3319             \}\par
3320 \par
3321             {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
3322                 atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
3323                 QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
3324                 atributos = atributos.arg(tensaoEficaz);\par
3325             \}\par
3326 \par
3327             {\cf20 // Fecha a tag </div> e </html>}\par
3328             atributos += {\cf22 "</div></html>"};\par
3329 \par
3330             {\cf20 // Cria a QLabel com os atributos}\par
3331             QLabel* labelAtributos = {\cf17 new} QLabel();\par
3332             labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
3333             labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3334             labelAtributos->setFont(fontConteudo);\par
3335             labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3336             labelAtributos->setTextFormat(Qt::RichText);\par
3337             labelAtributos->setText(atributos);\par
3338 \par
3339             {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
3340             QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
3341             painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3342             painter.setFont(fontHeader);\par
3343             painter.setPen(QPen(Qt::white));\par
3344             painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3345 \par
3346             {\cf20 // Desenha a QLabel na imagem}\par
3347             QPixmap pixmap = labelAtributos->grab();\par
3348             painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
3349 \par
3350             inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
3351         \}\par
3352     \}\par
3353 \par
3354     printer->newPage();\par
3355 \par
3356     {\cf20 // Desenha a imagem na p\'E1gina}\par
3357     painter.drawImage(logoRect, logo);\par
3358 \par
3359     QString TituloLinhas = {\cf22 "Linhas"};\par
3360 \par
3361     painter.setPen(QPen());\par
3362     painter.setFont(fontePrincipal);\par
3363     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
3364 \par
3365 \par
3366     printer->newPage();\par
3367 \par
3368     {\cf20 // Desenha a imagem na p\'E1gina}\par
3369     painter.drawImage(logoMenorRect, logo);\par
3370 \par
3371     inicioItem = 100;\par
3372 \par
3373     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
3374         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
3375         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
3376             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
3377                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
3378                     printer->newPage();\par
3379                     inicioItem = 100;\par
3380                     painter.drawImage(logoMenorRect, logo);\par
3381 \par
3382                 \}\par
3383 \par
3384                 QLabel* labelHeader = {\cf17 new} QLabel();\par
3385                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3386                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3387                 labelHeader->setFont(fontHeader);\par
3388                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3389                 labelHeader->setTextFormat(Qt::RichText);\par
3390 \par
3391 \par
3392                 {\cf20 // Cria a QString atributos com a tag <html>}\par
3393                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3394 \par
3395                 {\cf19 if}(FiltroLinha::correntePu)\{\par
3396                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
3397                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
3398                     atributos = atributos.arg(corrente);\par
3399                 \}\par
3400                 {\cf19 if}(FiltroLinha::dht)\{\par
3401                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
3402                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
3403                     atributos = atributos.arg(dht);\par
3404                 \}\par
3405                 {\cf19 if}(FiltroLinha::dit)\{\par
3406                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3407                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
3408                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
3409                         atributos = atributos.arg(j);\par
3410                         atributos = atributos.arg(tdi);\par
3411                     \}\par
3412                 \}\par
3413                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
3414                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3415                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
3416                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
3417                         atributos = atributos.arg(j);\par
3418                         atributos = atributos.arg(tdiPercent);\par
3419                     \}\par
3420                 \}\par
3421                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
3422                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
3423                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
3424                     atributos = atributos.arg(correnteEficaz);\par
3425                 \}\par
3426                 {\cf19 if}(FiltroLinha::resistencia)\{\par
3427                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
3428                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
3429                     atributos = atributos.arg(resistencia);\par
3430                 \}\par
3431                 {\cf19 if}(FiltroLinha::perdas)\{\par
3432                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3433                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
3434                     atributos = atributos.arg(perdas);\par
3435                 \}\par
3436                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
3437                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3438                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
3439                     atributos = atributos.arg(perdasEficaz);\par
3440                 \}\par
3441 \par
3442                 {\cf20 // Fecha a tag </div> e </html>}\par
3443                 atributos += {\cf22 "</div></html>"};\par
3444 \par
3445                 {\cf20 // Cria a QLabel com os atributos}\par
3446                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
3447                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
3448                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3449                 labelAtributos->setFont(fontConteudo);\par
3450                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3451                 labelAtributos->setTextFormat(Qt::RichText);\par
3452                 labelAtributos->setText(atributos);\par
3453 \par
3454                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
3455                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
3456                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
3457                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
3458 \par
3459 \par
3460                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3461                 painter.setFont(fontHeader);\par
3462                 painter.setPen(QPen(Qt::white));\par
3463                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3464 \par
3465                 {\cf20 // Desenha a QLabel na imagem}\par
3466                 QPixmap pixmap = labelAtributos->grab();\par
3467                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
3468 \par
3469                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
3470             \}\par
3471         \}\par
3472     \}\par
3473 \par
3474     painter.end();\par
3475 \}\par
}
}
{\xe \v ContInfecBarrasTodL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInfecBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInfecBarrasTodL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3483                                                             \{\par
3484     QPainter painter(printer);\par
3485     painter.begin(printer);\par
3486     {\cf18 int} w = painter.device()->width();\par
3487     {\cf18 int} h = painter.device()->height();\par
3488 \par
3489     {\cf20 // Carrega a imagem do arquivo}\par
3490     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
3491 \par
3492     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
3493     QRectF logoRect(20, 20, 300, 56);\par
3494 \par
3495     {\cf20 // Desenha a imagem na p\'E1gina}\par
3496     painter.drawImage(logoRect, logo);\par
3497 \par
3498     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
3499     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
3500 \par
3501     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
3502     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
3503 \par
3504     QFontMetrics fmPrincipal(fontePrincipal);\par
3505     QFontMetrics fmSubtexto(fonteSubtexto);\par
3506 \par
3507     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
3508     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
3509 \par
3510     painter.setFont(fontePrincipal);\par
3511     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
3512 \par
3513     painter.setFont(fonteSubtexto);\par
3514     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
3515 \par
3516     printer->newPage();\par
3517 \par
3518     {\cf20 // Desenha a imagem na p\'E1gina}\par
3519     painter.drawImage(logoRect, logo);\par
3520 \par
3521     QString TituloBarras = {\cf22 "Barras"};\par
3522 \par
3523 \par
3524     painter.setFont(fontePrincipal);\par
3525     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
3526 \par
3527     printer->newPage();\par
3528 \par
3529 \par
3530 \par
3531     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
3532     QRectF logoMenorRect(20, 20, 100, 19);\par
3533 \par
3534     {\cf20 // Desenha a imagem na p\'E1gina}\par
3535     painter.drawImage(logoMenorRect, logo);\par
3536 \par
3537     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
3538     gradient.setColorAt(0, QColor(180, 235, 249));\par
3539     gradient.setColorAt(1, QColor(30, 56, 91));\par
3540     painter.setBrush(QBrush(gradient));\par
3541     {\cf20 //estilo da fonte do header}\par
3542     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
3543 \par
3544     {\cf20 // Define o estilo da fonte}\par
3545     QFont fontConteudo({\cf22 "Roboto"},12);\par
3546 \par
3547     {\cf18 int} inicioItem = 100;\par
3548 \par
3549 \par
3550     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
3551         {\cf18 bool} infectada = {\cf17 false};\par
3552         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
3553             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
3554                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
3555                     infectada = {\cf17 true};\par
3556                     {\cf19 break};\par
3557                 \}\par
3558             \}\par
3559         \}{\cf19 else}\{\par
3560             infectada = {\cf17 true};\par
3561         \}\par
3562         {\cf19 if}(infectada)\{\par
3563             {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
3564                 printer->newPage();\par
3565                 inicioItem = 100;\par
3566                 painter.drawImage(logoMenorRect, logo);\par
3567             \}\par
3568             QLabel* labelHeader = {\cf17 new} QLabel();\par
3569             labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3570             labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3571             labelHeader->setFont(fontHeader);\par
3572             labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3573             labelHeader->setTextFormat(Qt::RichText);\par
3574 \par
3575             {\cf20 // Cria a QString atributos com a tag <html>}\par
3576             QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3577 \par
3578             {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
3579                 atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
3580                     QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
3581                 atributos = atributos.arg(tensao);\par
3582             \}\par
3583 \par
3584             {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
3585                 atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
3586                     QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
3587                 atributos = atributos.arg(tensaoNominal);\par
3588             \}\par
3589 \par
3590             {\cf19 if} (FiltrosBarra::thdv) \{\par
3591                 (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
3592                 QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
3593                 atributos = atributos.arg(thdv);\par
3594             \}\par
3595 \par
3596             {\cf19 if}(FiltrosBarra::dit)\{\par
3597                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3598                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
3599                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
3600                     atributos = atributos.arg(j);\par
3601                     atributos = atributos.arg(tdi);\par
3602                 \}\par
3603             \}\par
3604 \par
3605             {\cf19 if}(FiltrosBarra::ditPercent)\{\par
3606                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3607                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
3608                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
3609                     atributos = atributos.arg(j);\par
3610                     atributos = atributos.arg(tdi);\par
3611                 \}\par
3612             \}\par
3613 \par
3614             {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
3615                 atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
3616                 QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
3617                 atributos = atributos.arg(tensaoEficaz);\par
3618             \}\par
3619 \par
3620             {\cf20 // Fecha a tag </div> e </html>}\par
3621             atributos += {\cf22 "</div></html>"};\par
3622 \par
3623             {\cf20 // Cria a QLabel com os atributos}\par
3624             QLabel* labelAtributos = {\cf17 new} QLabel();\par
3625             labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
3626             labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3627             labelAtributos->setFont(fontConteudo);\par
3628             labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3629             labelAtributos->setTextFormat(Qt::RichText);\par
3630             labelAtributos->setText(atributos);\par
3631 \par
3632             {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
3633             QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
3634             painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3635             painter.setFont(fontHeader);\par
3636             painter.setPen(QPen(Qt::white));\par
3637             painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3638 \par
3639             {\cf20 // Desenha a QLabel na imagem}\par
3640             QPixmap pixmap = labelAtributos->grab();\par
3641             painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
3642 \par
3643             inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
3644         \}\par
3645     \}\par
3646 \par
3647     printer->newPage();\par
3648 \par
3649     {\cf20 // Desenha a imagem na p\'E1gina}\par
3650     painter.drawImage(logoRect, logo);\par
3651 \par
3652     QString TituloLinhas = {\cf22 "Linhas"};\par
3653 \par
3654     painter.setPen(QPen());\par
3655     painter.setFont(fontePrincipal);\par
3656     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
3657 \par
3658 \par
3659     printer->newPage();\par
3660 \par
3661     {\cf20 // Desenha a imagem na p\'E1gina}\par
3662     painter.drawImage(logoMenorRect, logo);\par
3663 \par
3664     inicioItem = 100;\par
3665 \par
3666     {\cf19 for}({\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
3667 \par
3668         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
3669             printer->newPage();\par
3670             inicioItem = 100;\par
3671             painter.drawImage(logoMenorRect, logo);\par
3672 \par
3673         \}\par
3674 \par
3675         QLabel* labelHeader = {\cf17 new} QLabel();\par
3676         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3677         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3678         labelHeader->setFont(fontHeader);\par
3679         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3680         labelHeader->setTextFormat(Qt::RichText);\par
3681 \par
3682 \par
3683         {\cf20 // Cria a QString atributos com a tag <html>}\par
3684         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3685 \par
3686         {\cf19 if}(FiltroLinha::correntePu)\{\par
3687             atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
3688             QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
3689             atributos = atributos.arg(corrente);\par
3690         \}\par
3691         {\cf19 if}(FiltroLinha::dht)\{\par
3692             atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
3693             QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
3694             atributos = atributos.arg(dht);\par
3695         \}\par
3696         {\cf19 if}(FiltroLinha::dit)\{\par
3697             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3698                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
3699                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
3700                 atributos = atributos.arg(j);\par
3701                 atributos = atributos.arg(tdi);\par
3702             \}\par
3703         \}\par
3704         {\cf19 if}(FiltroLinha::ditPercent)\{\par
3705             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3706                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
3707                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
3708                 atributos = atributos.arg(j);\par
3709                 atributos = atributos.arg(tdiPercent);\par
3710             \}\par
3711         \}\par
3712         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
3713             atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
3714             QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
3715             atributos = atributos.arg(correnteEficaz);\par
3716         \}\par
3717         {\cf19 if}(FiltroLinha::resistencia)\{\par
3718             atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
3719             QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
3720             atributos = atributos.arg(resistencia);\par
3721         \}\par
3722         {\cf19 if}(FiltroLinha::perdas)\{\par
3723             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3724             QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
3725             atributos = atributos.arg(perdas);\par
3726         \}\par
3727         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
3728             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3729             QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
3730             atributos = atributos.arg(perdasEficaz);\par
3731         \}\par
3732 \par
3733         {\cf20 // Fecha a tag </div> e </html>}\par
3734         atributos += {\cf22 "</div></html>"};\par
3735 \par
3736         {\cf20 // Cria a QLabel com os atributos}\par
3737         QLabel* labelAtributos = {\cf17 new} QLabel();\par
3738         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
3739         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3740         labelAtributos->setFont(fontConteudo);\par
3741         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3742         labelAtributos->setTextFormat(Qt::RichText);\par
3743         labelAtributos->setText(atributos);\par
3744 \par
3745         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
3746         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
3747         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
3748         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
3749 \par
3750 \par
3751         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3752         painter.setFont(fontHeader);\par
3753         painter.setPen(QPen(Qt::white));\par
3754         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3755 \par
3756         {\cf20 // Desenha a QLabel na imagem}\par
3757         QPixmap pixmap = labelAtributos->grab();\par
3758         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
3759 \par
3760         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
3761 \par
3762     \}\par
3763 \par
3764     painter.end();\par
3765 \}\par
}
}
{\xe \v ContInterBarrasTodL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInterBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInterBarrasTodL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 896                                                               \{\par
897     QPainter painter(printer);\par
898     painter.begin(printer);\par
899     {\cf18 int} w = painter.device()->width();\par
900     {\cf18 int} h = painter.device()->height();\par
901 \par
902     {\cf20 // Carrega a imagem do arquivo}\par
903     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
904 \par
905     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
906     QRectF logoRect(20, 20, 300, 56);\par
907 \par
908     {\cf20 // Desenha a imagem na p\'E1gina}\par
909     painter.drawImage(logoRect, logo);\par
910 \par
911     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
912     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
913 \par
914     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
915     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
916 \par
917     QFontMetrics fmPrincipal(fontePrincipal);\par
918     QFontMetrics fmSubtexto(fonteSubtexto);\par
919 \par
920     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
921     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
922 \par
923     painter.setFont(fontePrincipal);\par
924     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
925 \par
926     painter.setFont(fonteSubtexto);\par
927     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
928 \par
929     printer->newPage();\par
930 \par
931     {\cf20 // Desenha a imagem na p\'E1gina}\par
932     painter.drawImage(logoRect, logo);\par
933 \par
934     QString TituloBarras = {\cf22 "Barras"};\par
935 \par
936 \par
937     painter.setFont(fontePrincipal);\par
938     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
939 \par
940     printer->newPage();\par
941 \par
942 \par
943 \par
944     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
945     QRectF logoMenorRect(20, 20, 100, 19);\par
946 \par
947     {\cf20 // Desenha a imagem na p\'E1gina}\par
948     painter.drawImage(logoMenorRect, logo);\par
949 \par
950     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
951     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
952 \par
953     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
954     gradient.setColorAt(0, QColor(180, 235, 249));\par
955     gradient.setColorAt(1, QColor(30, 56, 91));\par
956     painter.setBrush(QBrush(gradient));\par
957     {\cf20 //estilo da fonte do header}\par
958     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
959 \par
960     {\cf20 // Define o estilo da fonte}\par
961     QFont fontConteudo({\cf22 "Roboto"},12);\par
962 \par
963     {\cf18 int} inicioItem = 100;\par
964 \par
965 \par
966     {\cf19 for} ({\cf18 int} i = inicio; i <= fim; i++) \{\par
967 \par
968         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
969             printer->newPage();\par
970             inicioItem = 100;\par
971             painter.drawImage(logoMenorRect, logo);\par
972 \par
973         \}\par
974 \par
975         QLabel* labelHeader = {\cf17 new} QLabel();\par
976         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
977         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
978         labelHeader->setFont(fontHeader);\par
979         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
980         labelHeader->setTextFormat(Qt::RichText);\par
981 \par
982         {\cf20 // Cria a QString atributos com a tag <html>}\par
983         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
984 \par
985         {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
986             atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
987                 QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
988             atributos = atributos.arg(tensao);\par
989         \}\par
990 \par
991         {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
992             atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
993                 QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
994             atributos = atributos.arg(tensaoNominal);\par
995         \}\par
996 \par
997         {\cf19 if} (FiltrosBarra::thdv) \{\par
998             (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
999             QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
1000             atributos = atributos.arg(thdv);\par
1001         \}\par
1002 \par
1003         {\cf19 if}(FiltrosBarra::dit)\{\par
1004             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1005                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
1006                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
1007                 atributos = atributos.arg(j);\par
1008                 atributos = atributos.arg(tdi);\par
1009             \}\par
1010         \}\par
1011 \par
1012         {\cf19 if}(FiltrosBarra::ditPercent)\{\par
1013             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1014                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
1015                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
1016                 atributos = atributos.arg(j);\par
1017                 atributos = atributos.arg(tdi);\par
1018             \}\par
1019         \}\par
1020 \par
1021         {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
1022             atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
1023             QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
1024             atributos = atributos.arg(tensaoEficaz);\par
1025         \}\par
1026 \par
1027         {\cf20 // Fecha a tag </div> e </html>}\par
1028         atributos += {\cf22 "</div></html>"};\par
1029 \par
1030         {\cf20 // Cria a QLabel com os atributos}\par
1031         QLabel* labelAtributos = {\cf17 new} QLabel();\par
1032         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
1033         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1034         labelAtributos->setFont(fontConteudo);\par
1035         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1036         labelAtributos->setTextFormat(Qt::RichText);\par
1037         labelAtributos->setText(atributos);\par
1038 \par
1039         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
1040         QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
1041         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1042         painter.setFont(fontHeader);\par
1043         painter.setPen(QPen(Qt::white));\par
1044         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1045 \par
1046         {\cf20 // Desenha a QLabel na imagem}\par
1047         QPixmap pixmap = labelAtributos->grab();\par
1048         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
1049 \par
1050         inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
1051 \par
1052     \}\par
1053 \par
1054     printer->newPage();\par
1055 \par
1056     {\cf20 // Desenha a imagem na p\'E1gina}\par
1057     painter.drawImage(logoRect, logo);\par
1058 \par
1059     QString TituloLinhas = {\cf22 "Linhas"};\par
1060 \par
1061     painter.setPen(QPen());\par
1062     painter.setFont(fontePrincipal);\par
1063     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
1064 \par
1065 \par
1066     printer->newPage();\par
1067 \par
1068     {\cf20 // Desenha a imagem na p\'E1gina}\par
1069     painter.drawImage(logoMenorRect, logo);\par
1070 \par
1071     inicioItem = 100;\par
1072 \par
1073     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1074         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
1075         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
1076             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
1077                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
1078                     printer->newPage();\par
1079                     inicioItem = 100;\par
1080                     painter.drawImage(logoMenorRect, logo);\par
1081 \par
1082                 \}\par
1083 \par
1084                 QLabel* labelHeader = {\cf17 new} QLabel();\par
1085                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1086                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1087                 labelHeader->setFont(fontHeader);\par
1088                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1089                 labelHeader->setTextFormat(Qt::RichText);\par
1090 \par
1091 \par
1092                 {\cf20 // Cria a QString atributos com a tag <html>}\par
1093                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1094 \par
1095                 {\cf19 if}(FiltroLinha::correntePu)\{\par
1096                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
1097                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
1098                     atributos = atributos.arg(corrente);\par
1099                 \}\par
1100                 {\cf19 if}(FiltroLinha::dht)\{\par
1101                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
1102                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
1103                     atributos = atributos.arg(dht);\par
1104                 \}\par
1105                 {\cf19 if}(FiltroLinha::dit)\{\par
1106                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1107                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
1108                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
1109                         atributos = atributos.arg(j);\par
1110                         atributos = atributos.arg(tdi);\par
1111                     \}\par
1112                 \}\par
1113                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
1114                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1115                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
1116                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
1117                         atributos = atributos.arg(j);\par
1118                         atributos = atributos.arg(tdiPercent);\par
1119                     \}\par
1120                 \}\par
1121                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
1122                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
1123                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
1124                     atributos = atributos.arg(correnteEficaz);\par
1125                 \}\par
1126                 {\cf19 if}(FiltroLinha::resistencia)\{\par
1127                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
1128                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
1129                     atributos = atributos.arg(resistencia);\par
1130                 \}\par
1131                 {\cf19 if}(FiltroLinha::perdas)\{\par
1132                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1133                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
1134                     atributos = atributos.arg(perdas);\par
1135                 \}\par
1136                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
1137                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1138                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
1139                     atributos = atributos.arg(perdasEficaz);\par
1140                 \}\par
1141 \par
1142                 {\cf20 // Fecha a tag </div> e </html>}\par
1143                 atributos += {\cf22 "</div></html>"};\par
1144 \par
1145                 {\cf20 // Cria a QLabel com os atributos}\par
1146                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
1147                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
1148                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1149                 labelAtributos->setFont(fontConteudo);\par
1150                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1151                 labelAtributos->setTextFormat(Qt::RichText);\par
1152                 labelAtributos->setText(atributos);\par
1153 \par
1154                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
1155                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
1156                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
1157                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
1158 \par
1159 \par
1160                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1161                 painter.setFont(fontHeader);\par
1162                 painter.setPen(QPen(Qt::white));\par
1163                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1164 \par
1165                 {\cf20 // Desenha a QLabel na imagem}\par
1166                 QPixmap pixmap = labelAtributos->grab();\par
1167                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
1168 \par
1169                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
1170             \}\par
1171         \}\par
1172     \}\par
1173 \par
1174     painter.end();\par
1175 \}\par
}
}
{\xe \v ContInterBarrasTodL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInterBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInterBarrasTodL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1183                                                             \{\par
1184     QPainter painter(printer);\par
1185     painter.begin(printer);\par
1186     {\cf18 int} w = painter.device()->width();\par
1187     {\cf18 int} h = painter.device()->height();\par
1188 \par
1189     {\cf20 // Carrega a imagem do arquivo}\par
1190     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
1191 \par
1192     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1193     QRectF logoRect(20, 20, 300, 56);\par
1194 \par
1195     {\cf20 // Desenha a imagem na p\'E1gina}\par
1196     painter.drawImage(logoRect, logo);\par
1197 \par
1198     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
1199     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
1200 \par
1201     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
1202     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
1203 \par
1204     QFontMetrics fmPrincipal(fontePrincipal);\par
1205     QFontMetrics fmSubtexto(fonteSubtexto);\par
1206 \par
1207     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
1208     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
1209 \par
1210     painter.setFont(fontePrincipal);\par
1211     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
1212 \par
1213     painter.setFont(fonteSubtexto);\par
1214     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
1215 \par
1216     printer->newPage();\par
1217 \par
1218     {\cf20 // Desenha a imagem na p\'E1gina}\par
1219     painter.drawImage(logoRect, logo);\par
1220 \par
1221     QString TituloBarras = {\cf22 "Barras"};\par
1222 \par
1223 \par
1224     painter.setFont(fontePrincipal);\par
1225     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
1226 \par
1227     printer->newPage();\par
1228 \par
1229 \par
1230 \par
1231     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1232     QRectF logoMenorRect(20, 20, 100, 19);\par
1233 \par
1234     {\cf20 // Desenha a imagem na p\'E1gina}\par
1235     painter.drawImage(logoMenorRect, logo);\par
1236 \par
1237     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
1238     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
1239 \par
1240     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
1241     gradient.setColorAt(0, QColor(180, 235, 249));\par
1242     gradient.setColorAt(1, QColor(30, 56, 91));\par
1243     painter.setBrush(QBrush(gradient));\par
1244     {\cf20 //estilo da fonte do header}\par
1245     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
1246 \par
1247     {\cf20 // Define o estilo da fonte}\par
1248     QFont fontConteudo({\cf22 "Roboto"},12);\par
1249 \par
1250     {\cf18 int} inicioItem = 100;\par
1251 \par
1252 \par
1253     {\cf19 for} ({\cf18 int} i = inicio; i <= fim; i++) \{\par
1254 \par
1255         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
1256             printer->newPage();\par
1257             inicioItem = 100;\par
1258             painter.drawImage(logoMenorRect, logo);\par
1259 \par
1260         \}\par
1261 \par
1262         QLabel* labelHeader = {\cf17 new} QLabel();\par
1263         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1264         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1265         labelHeader->setFont(fontHeader);\par
1266         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1267         labelHeader->setTextFormat(Qt::RichText);\par
1268 \par
1269         {\cf20 // Cria a QString atributos com a tag <html>}\par
1270         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1271 \par
1272         {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
1273             atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
1274                 QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
1275             atributos = atributos.arg(tensao);\par
1276         \}\par
1277 \par
1278         {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
1279             atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
1280                 QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
1281             atributos = atributos.arg(tensaoNominal);\par
1282         \}\par
1283 \par
1284         {\cf19 if} (FiltrosBarra::thdv) \{\par
1285             (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
1286             QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
1287             atributos = atributos.arg(thdv);\par
1288         \}\par
1289 \par
1290         {\cf19 if}(FiltrosBarra::dit)\{\par
1291             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1292                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
1293                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
1294                 atributos = atributos.arg(j);\par
1295                 atributos = atributos.arg(tdi);\par
1296             \}\par
1297         \}\par
1298 \par
1299         {\cf19 if}(FiltrosBarra::ditPercent)\{\par
1300             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1301                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
1302                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
1303                 atributos = atributos.arg(j);\par
1304                 atributos = atributos.arg(tdi);\par
1305             \}\par
1306         \}\par
1307 \par
1308         {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
1309             atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
1310             QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
1311             atributos = atributos.arg(tensaoEficaz);\par
1312         \}\par
1313 \par
1314         {\cf20 // Fecha a tag </div> e </html>}\par
1315         atributos += {\cf22 "</div></html>"};\par
1316 \par
1317         {\cf20 // Cria a QLabel com os atributos}\par
1318         QLabel* labelAtributos = {\cf17 new} QLabel();\par
1319         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
1320         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1321         labelAtributos->setFont(fontConteudo);\par
1322         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1323         labelAtributos->setTextFormat(Qt::RichText);\par
1324         labelAtributos->setText(atributos);\par
1325 \par
1326         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
1327         QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
1328         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1329         painter.setFont(fontHeader);\par
1330         painter.setPen(QPen(Qt::white));\par
1331         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1332 \par
1333         {\cf20 // Desenha a QLabel na imagem}\par
1334         QPixmap pixmap = labelAtributos->grab();\par
1335         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
1336 \par
1337         inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
1338 \par
1339     \}\par
1340 \par
1341     printer->newPage();\par
1342 \par
1343     {\cf20 // Desenha a imagem na p\'E1gina}\par
1344     painter.drawImage(logoRect, logo);\par
1345 \par
1346     QString TituloLinhas = {\cf22 "Linhas"};\par
1347 \par
1348     painter.setPen(QPen());\par
1349     painter.setFont(fontePrincipal);\par
1350     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
1351 \par
1352 \par
1353     printer->newPage();\par
1354 \par
1355     {\cf20 // Desenha a imagem na p\'E1gina}\par
1356     painter.drawImage(logoMenorRect, logo);\par
1357 \par
1358     inicioItem = 100;\par
1359 \par
1360     {\cf19 for}({\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1361 \par
1362         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
1363             printer->newPage();\par
1364             inicioItem = 100;\par
1365             painter.drawImage(logoMenorRect, logo);\par
1366 \par
1367         \}\par
1368 \par
1369         QLabel* labelHeader = {\cf17 new} QLabel();\par
1370         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1371         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1372         labelHeader->setFont(fontHeader);\par
1373         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1374         labelHeader->setTextFormat(Qt::RichText);\par
1375 \par
1376 \par
1377         {\cf20 // Cria a QString atributos com a tag <html>}\par
1378         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1379 \par
1380         {\cf19 if}(FiltroLinha::correntePu)\{\par
1381             atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
1382             QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
1383             atributos = atributos.arg(corrente);\par
1384         \}\par
1385         {\cf19 if}(FiltroLinha::dht)\{\par
1386             atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
1387             QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
1388             atributos = atributos.arg(dht);\par
1389         \}\par
1390         {\cf19 if}(FiltroLinha::dit)\{\par
1391             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1392                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
1393                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
1394                 atributos = atributos.arg(j);\par
1395                 atributos = atributos.arg(tdi);\par
1396             \}\par
1397         \}\par
1398         {\cf19 if}(FiltroLinha::ditPercent)\{\par
1399             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1400                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
1401                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
1402                 atributos = atributos.arg(j);\par
1403                 atributos = atributos.arg(tdiPercent);\par
1404             \}\par
1405         \}\par
1406         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
1407             atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
1408             QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
1409             atributos = atributos.arg(correnteEficaz);\par
1410         \}\par
1411         {\cf19 if}(FiltroLinha::resistencia)\{\par
1412             atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
1413             QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
1414             atributos = atributos.arg(resistencia);\par
1415         \}\par
1416         {\cf19 if}(FiltroLinha::perdas)\{\par
1417             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1418             QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
1419             atributos = atributos.arg(perdas);\par
1420         \}\par
1421         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
1422             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1423             QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
1424             atributos = atributos.arg(perdasEficaz);\par
1425         \}\par
1426 \par
1427         {\cf20 // Fecha a tag </div> e </html>}\par
1428         atributos += {\cf22 "</div></html>"};\par
1429 \par
1430         {\cf20 // Cria a QLabel com os atributos}\par
1431         QLabel* labelAtributos = {\cf17 new} QLabel();\par
1432         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
1433         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1434         labelAtributos->setFont(fontConteudo);\par
1435         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1436         labelAtributos->setTextFormat(Qt::RichText);\par
1437         labelAtributos->setText(atributos);\par
1438 \par
1439         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
1440         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
1441         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
1442         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
1443 \par
1444 \par
1445         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1446         painter.setFont(fontHeader);\par
1447         painter.setPen(QPen(Qt::white));\par
1448         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1449 \par
1450         {\cf20 // Desenha a QLabel na imagem}\par
1451         QPixmap pixmap = labelAtributos->grab();\par
1452         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
1453 \par
1454         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
1455 \par
1456     \}\par
1457 \par
1458     painter.end();\par
1459 \}\par
}
}
{\xe \v ContInterBInterL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInterBInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInterBInterL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 319                                                            \{\par
320     QPainter painter(printer);\par
321     painter.begin(printer);\par
322     {\cf18 int} w = painter.device()->width();\par
323     {\cf18 int} h = painter.device()->height();\par
324 \par
325     {\cf20 // Carrega a imagem do arquivo}\par
326     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
327 \par
328     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
329     QRectF logoRect(20, 20, 300, 56);\par
330 \par
331     {\cf20 // Desenha a imagem na p\'E1gina}\par
332     painter.drawImage(logoRect, logo);\par
333 \par
334     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
335     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
336 \par
337     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
338     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
339 \par
340     QFontMetrics fmPrincipal(fontePrincipal);\par
341     QFontMetrics fmSubtexto(fonteSubtexto);\par
342 \par
343     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
344     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
345 \par
346     painter.setFont(fontePrincipal);\par
347     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
348 \par
349     painter.setFont(fonteSubtexto);\par
350     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
351 \par
352     printer->newPage();\par
353 \par
354     {\cf20 // Desenha a imagem na p\'E1gina}\par
355     painter.drawImage(logoRect, logo);\par
356 \par
357     QString TituloBarras = {\cf22 "Barras"};\par
358 \par
359 \par
360     painter.setFont(fontePrincipal);\par
361     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
362 \par
363     printer->newPage();\par
364 \par
365 \par
366 \par
367     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
368     QRectF logoMenorRect(20, 20, 100, 19);\par
369 \par
370     {\cf20 // Desenha a imagem na p\'E1gina}\par
371     painter.drawImage(logoMenorRect, logo);\par
372 \par
373     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
374     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
375 \par
376     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
377     gradient.setColorAt(0, QColor(180, 235, 249));\par
378     gradient.setColorAt(1, QColor(30, 56, 91));\par
379     painter.setBrush(QBrush(gradient));\par
380     {\cf20 //estilo da fonte do header}\par
381     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
382 \par
383     {\cf20 // Define o estilo da fonte}\par
384     QFont fontConteudo({\cf22 "Roboto"},12);\par
385 \par
386     {\cf18 int} inicioItem = 100;\par
387 \par
388 \par
389     {\cf19 for} ({\cf18 int} i = inicio; i <= fim; i++) \{\par
390 \par
391         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
392             printer->newPage();\par
393             inicioItem = 100;\par
394             painter.drawImage(logoMenorRect, logo);\par
395 \par
396         \}\par
397 \par
398         QLabel* labelHeader = {\cf17 new} QLabel();\par
399         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
400         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
401         labelHeader->setFont(fontHeader);\par
402         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
403         labelHeader->setTextFormat(Qt::RichText);\par
404 \par
405         {\cf20 // Cria a QString atributos com a tag <html>}\par
406         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
407 \par
408         {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
409             atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
410                 QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
411             atributos = atributos.arg(tensao);\par
412         \}\par
413 \par
414         {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
415             atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
416                 QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
417             atributos = atributos.arg(tensaoNominal);\par
418         \}\par
419 \par
420         {\cf19 if} (FiltrosBarra::thdv) \{\par
421             (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
422             QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
423             atributos = atributos.arg(thdv);\par
424         \}\par
425 \par
426         {\cf19 if}(FiltrosBarra::dit)\{\par
427             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
428                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
429                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
430                 atributos = atributos.arg(j);\par
431                 atributos = atributos.arg(tdi);\par
432             \}\par
433         \}\par
434 \par
435         {\cf19 if}(FiltrosBarra::ditPercent)\{\par
436             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
437                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
438                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
439                 atributos = atributos.arg(j);\par
440                 atributos = atributos.arg(tdi);\par
441             \}\par
442         \}\par
443 \par
444         {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
445             atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
446             QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
447             atributos = atributos.arg(tensaoEficaz);\par
448         \}\par
449 \par
450         {\cf20 // Fecha a tag </div> e </html>}\par
451         atributos += {\cf22 "</div></html>"};\par
452 \par
453         {\cf20 // Cria a QLabel com os atributos}\par
454         QLabel* labelAtributos = {\cf17 new} QLabel();\par
455         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
456         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
457         labelAtributos->setFont(fontConteudo);\par
458         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
459         labelAtributos->setTextFormat(Qt::RichText);\par
460         labelAtributos->setText(atributos);\par
461 \par
462         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
463         QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
464         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
465         painter.setFont(fontHeader);\par
466         painter.setPen(QPen(Qt::white));\par
467         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
468 \par
469         {\cf20 // Desenha a QLabel na imagem}\par
470         QPixmap pixmap = labelAtributos->grab();\par
471         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
472 \par
473         inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
474 \par
475     \}\par
476 \par
477     printer->newPage();\par
478 \par
479     {\cf20 // Desenha a imagem na p\'E1gina}\par
480     painter.drawImage(logoRect, logo);\par
481 \par
482     QString TituloLinhas = {\cf22 "Linhas"};\par
483 \par
484     painter.setPen(QPen());\par
485     painter.setFont(fontePrincipal);\par
486     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
487 \par
488 \par
489     printer->newPage();\par
490 \par
491     {\cf20 // Desenha a imagem na p\'E1gina}\par
492     painter.drawImage(logoMenorRect, logo);\par
493 \par
494     inicioItem = 100;\par
495 \par
496     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
497         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
498         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
499         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
500             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
501                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
502                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
503                         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
504                             printer->newPage();\par
505                             inicioItem = 100;\par
506                             painter.drawImage(logoMenorRect, logo);\par
507                         \}\par
508 \par
509                         QLabel* labelHeader = {\cf17 new} QLabel();\par
510                         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
511                         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
512                         labelHeader->setFont(fontHeader);\par
513                         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
514                         labelHeader->setTextFormat(Qt::RichText);\par
515 \par
516 \par
517                         {\cf20 // Cria a QString atributos com a tag <html>}\par
518                         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
519 \par
520                         {\cf19 if}(FiltroLinha::correntePu)\{\par
521                             atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
522                             QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
523                             atributos = atributos.arg(corrente);\par
524                         \}\par
525                         {\cf19 if}(FiltroLinha::dht)\{\par
526                             atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
527                             QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
528                             atributos = atributos.arg(dht);\par
529                         \}\par
530                         {\cf19 if}(FiltroLinha::dit)\{\par
531                             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
532                                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
533                                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
534                                 atributos = atributos.arg(j);\par
535                                 atributos = atributos.arg(tdi);\par
536                             \}\par
537                         \}\par
538                         {\cf19 if}(FiltroLinha::ditPercent)\{\par
539                             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
540                                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
541                                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
542                                 atributos = atributos.arg(j);\par
543                                 atributos = atributos.arg(tdiPercent);\par
544                             \}\par
545                         \}\par
546                         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
547                             atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
548                             QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
549                             atributos = atributos.arg(correnteEficaz);\par
550                         \}\par
551                         {\cf19 if}(FiltroLinha::resistencia)\{\par
552                             atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
553                             QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
554                             atributos = atributos.arg(resistencia);\par
555                         \}\par
556                         {\cf19 if}(FiltroLinha::perdas)\{\par
557                             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
558                             QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
559                             atributos = atributos.arg(perdas);\par
560                         \}\par
561                         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
562                             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
563                             QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
564                             atributos = atributos.arg(perdasEficaz);\par
565                         \}\par
566 \par
567                         {\cf20 // Fecha a tag </div> e </html>}\par
568                         atributos += {\cf22 "</div></html>"};\par
569 \par
570                         {\cf20 // Cria a QLabel com os atributos}\par
571                         QLabel* labelAtributos = {\cf17 new} QLabel();\par
572                         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
573                         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
574                         labelAtributos->setFont(fontConteudo);\par
575                         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
576                         labelAtributos->setTextFormat(Qt::RichText);\par
577                         labelAtributos->setText(atributos);\par
578 \par
579                         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
580                         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
581                         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
582                         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
583 \par
584 \par
585                         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
586                         painter.setFont(fontHeader);\par
587                         painter.setPen(QPen(Qt::white));\par
588                         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
589 \par
590                         {\cf20 // Desenha a QLabel na imagem}\par
591                         QPixmap pixmap = labelAtributos->grab();\par
592                         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
593 \par
594                         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
595                     \}\par
596                 \}\par
597             \}\par
598         \}\par
599     \}\par
600 \par
601     painter.end();\par
602 \}\par
}
}
{\xe \v ContInterBInterL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInterBInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInterBInterL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 611                                                          \{\par
612     QPainter painter(printer);\par
613     painter.begin(printer);\par
614     {\cf18 int} w = painter.device()->width();\par
615     {\cf18 int} h = painter.device()->height();\par
616 \par
617     {\cf20 // Carrega a imagem do arquivo}\par
618     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
619 \par
620     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
621     QRectF logoRect(20, 20, 300, 56);\par
622 \par
623     {\cf20 // Desenha a imagem na p\'E1gina}\par
624     painter.drawImage(logoRect, logo);\par
625 \par
626     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
627     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
628 \par
629     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
630     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
631 \par
632     QFontMetrics fmPrincipal(fontePrincipal);\par
633     QFontMetrics fmSubtexto(fonteSubtexto);\par
634 \par
635     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
636     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
637 \par
638     painter.setFont(fontePrincipal);\par
639     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
640 \par
641     painter.setFont(fonteSubtexto);\par
642     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
643 \par
644     printer->newPage();\par
645 \par
646     {\cf20 // Desenha a imagem na p\'E1gina}\par
647     painter.drawImage(logoRect, logo);\par
648 \par
649     QString TituloBarras = {\cf22 "Barras"};\par
650 \par
651 \par
652     painter.setFont(fontePrincipal);\par
653     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
654 \par
655     printer->newPage();\par
656 \par
657 \par
658 \par
659     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
660     QRectF logoMenorRect(20, 20, 100, 19);\par
661 \par
662     {\cf20 // Desenha a imagem na p\'E1gina}\par
663     painter.drawImage(logoMenorRect, logo);\par
664 \par
665     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
666     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
667 \par
668     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
669     gradient.setColorAt(0, QColor(180, 235, 249));\par
670     gradient.setColorAt(1, QColor(30, 56, 91));\par
671     painter.setBrush(QBrush(gradient));\par
672     {\cf20 //estilo da fonte do header}\par
673     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
674 \par
675     {\cf20 // Define o estilo da fonte}\par
676     QFont fontConteudo({\cf22 "Roboto"},12);\par
677 \par
678     {\cf18 int} inicioItem = 100;\par
679 \par
680 \par
681     {\cf19 for} ({\cf18 int} i = inicio; i <= fim; i++) \{\par
682 \par
683         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
684             printer->newPage();\par
685             inicioItem = 100;\par
686             painter.drawImage(logoMenorRect, logo);\par
687 \par
688         \}\par
689 \par
690         QLabel* labelHeader = {\cf17 new} QLabel();\par
691         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
692         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
693         labelHeader->setFont(fontHeader);\par
694         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
695         labelHeader->setTextFormat(Qt::RichText);\par
696 \par
697         {\cf20 // Cria a QString atributos com a tag <html>}\par
698         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
699 \par
700         {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
701             atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
702                 QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
703             atributos = atributos.arg(tensao);\par
704         \}\par
705 \par
706         {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
707             atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
708                 QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
709             atributos = atributos.arg(tensaoNominal);\par
710         \}\par
711 \par
712         {\cf19 if} (FiltrosBarra::thdv) \{\par
713             (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
714             QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
715             atributos = atributos.arg(thdv);\par
716         \}\par
717 \par
718         {\cf19 if}(FiltrosBarra::dit)\{\par
719             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
720                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
721                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
722                 atributos = atributos.arg(j);\par
723                 atributos = atributos.arg(tdi);\par
724             \}\par
725         \}\par
726 \par
727         {\cf19 if}(FiltrosBarra::ditPercent)\{\par
728             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
729                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
730                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
731                 atributos = atributos.arg(j);\par
732                 atributos = atributos.arg(tdi);\par
733             \}\par
734         \}\par
735 \par
736         {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
737             atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
738             QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
739             atributos = atributos.arg(tensaoEficaz);\par
740         \}\par
741 \par
742         {\cf20 // Fecha a tag </div> e </html>}\par
743         atributos += {\cf22 "</div></html>"};\par
744 \par
745         {\cf20 // Cria a QLabel com os atributos}\par
746         QLabel* labelAtributos = {\cf17 new} QLabel();\par
747         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
748         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
749         labelAtributos->setFont(fontConteudo);\par
750         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
751         labelAtributos->setTextFormat(Qt::RichText);\par
752         labelAtributos->setText(atributos);\par
753 \par
754         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
755         QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
756         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
757         painter.setFont(fontHeader);\par
758         painter.setPen(QPen(Qt::white));\par
759         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
760 \par
761         {\cf20 // Desenha a QLabel na imagem}\par
762         QPixmap pixmap = labelAtributos->grab();\par
763         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
764 \par
765         inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
766 \par
767     \}\par
768 \par
769     printer->newPage();\par
770 \par
771     {\cf20 // Desenha a imagem na p\'E1gina}\par
772     painter.drawImage(logoRect, logo);\par
773 \par
774     QString TituloLinhas = {\cf22 "Linhas"};\par
775 \par
776     painter.setPen(QPen());\par
777     painter.setFont(fontePrincipal);\par
778     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
779 \par
780 \par
781     printer->newPage();\par
782 \par
783     {\cf20 // Desenha a imagem na p\'E1gina}\par
784     painter.drawImage(logoMenorRect, logo);\par
785 \par
786     inicioItem = 100;\par
787     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
788         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
789         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
790             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
791                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
792                     printer->newPage();\par
793                     inicioItem = 100;\par
794                     painter.drawImage(logoMenorRect, logo);\par
795                 \}\par
796 \par
797                 QLabel* labelHeader = {\cf17 new} QLabel();\par
798                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
799                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
800                 labelHeader->setFont(fontHeader);\par
801                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
802                 labelHeader->setTextFormat(Qt::RichText);\par
803 \par
804 \par
805                 {\cf20 // Cria a QString atributos com a tag <html>}\par
806                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
807 \par
808                 {\cf19 if}(FiltroLinha::correntePu)\{\par
809                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
810                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
811                     atributos = atributos.arg(corrente);\par
812                 \}\par
813                 {\cf19 if}(FiltroLinha::dht)\{\par
814                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
815                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
816                     atributos = atributos.arg(dht);\par
817                 \}\par
818                 {\cf19 if}(FiltroLinha::dit)\{\par
819                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
820                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
821                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
822                         atributos = atributos.arg(j);\par
823                         atributos = atributos.arg(tdi);\par
824                     \}\par
825                 \}\par
826                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
827                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
828                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
829                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
830                         atributos = atributos.arg(j);\par
831                         atributos = atributos.arg(tdiPercent);\par
832                     \}\par
833                 \}\par
834                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
835                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
836                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
837                     atributos = atributos.arg(correnteEficaz);\par
838                 \}\par
839                 {\cf19 if}(FiltroLinha::resistencia)\{\par
840                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
841                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
842                     atributos = atributos.arg(resistencia);\par
843                 \}\par
844                 {\cf19 if}(FiltroLinha::perdas)\{\par
845                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
846                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
847                     atributos = atributos.arg(perdas);\par
848                 \}\par
849                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
850                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
851                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
852                     atributos = atributos.arg(perdasEficaz);\par
853                 \}\par
854 \par
855                 {\cf20 // Fecha a tag </div> e </html>}\par
856                 atributos += {\cf22 "</div></html>"};\par
857 \par
858                 {\cf20 // Cria a QLabel com os atributos}\par
859                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
860                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
861                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
862                 labelAtributos->setFont(fontConteudo);\par
863                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
864                 labelAtributos->setTextFormat(Qt::RichText);\par
865                 labelAtributos->setText(atributos);\par
866 \par
867                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
868                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
869                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
870                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
871 \par
872 \par
873                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
874                 painter.setFont(fontHeader);\par
875                 painter.setPen(QPen(Qt::white));\par
876                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
877 \par
878                 {\cf20 // Desenha a QLabel na imagem}\par
879                 QPixmap pixmap = labelAtributos->grab();\par
880                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
881 \par
882                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
883             \}\par
884         \}\par
885     \}\par
886 \par
887     painter.end();\par
888 \}\par
}
}
{\xe \v PdfCompBarrasaTodL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfCompBarrasaTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfCompBarrasaTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 203                                           \{\par
204     QPrinter printer;\par
205     printer.setPrinterName({\cf22 "PDF"});\par
206 \par
207     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
208 \par
209     {\cf19 if} (filename.isEmpty()) \{\par
210         {\cf19 return};\par
211     \}\par
212 \par
213     printer.setOutputFormat(QPrinter::PdfFormat);\par
214     printer.setOutputFileName(filename);\par
215 \par
216     ContCompBarrasaTodL1TodL2(&printer);\par
217 \par
218     QDesktopServices::openUrl(QUrl(filename));\par
219 \}\par
}
}
{\xe \v PdfCompBarrasInterL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfCompBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfCompBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 134                                              \{\par
135     QPrinter printer;\par
136     printer.setPrinterName({\cf22 "PDF"});\par
137 \par
138     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
139 \par
140     {\cf19 if} (filename.isEmpty()) \{\par
141         {\cf19 return};\par
142     \}\par
143 \par
144     printer.setOutputFormat(QPrinter::PdfFormat);\par
145     printer.setOutputFileName(filename);\par
146 \par
147     ContCompBarrasInterL1InterL2(&printer);\par
148 \par
149     QDesktopServices::openUrl(QUrl(filename));\par
150 \}\par
}
}
{\xe \v PdfCompBarrasInterL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfCompBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfCompBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 157                                            \{\par
158     QPrinter printer;\par
159     printer.setPrinterName({\cf22 "PDF"});\par
160 \par
161     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
162 \par
163     {\cf19 if} (filename.isEmpty()) \{\par
164         {\cf19 return};\par
165     \}\par
166 \par
167     printer.setOutputFormat(QPrinter::PdfFormat);\par
168     printer.setOutputFileName(filename);\par
169 \par
170     ContCompBarrasInterL1TodL2(&printer);\par
171 \par
172     QDesktopServices::openUrl(QUrl(filename));\par
173 \}\par
}
}
{\xe \v PdfCompBarrasTodL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfCompBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfCompBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 180                                            \{\par
181     QPrinter printer;\par
182     printer.setPrinterName({\cf22 "PDF"});\par
183 \par
184     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
185 \par
186     {\cf19 if} (filename.isEmpty()) \{\par
187         {\cf19 return};\par
188     \}\par
189 \par
190     printer.setOutputFormat(QPrinter::PdfFormat);\par
191     printer.setOutputFileName(filename);\par
192 \par
193     ContCompBarrasTodL1InterL2(&printer);\par
194 \par
195     QDesktopServices::openUrl(QUrl(filename));\par
196 \}\par
}
}
{\xe \v PdfInfecBarrasInterL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInfecBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInfecBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 226                                               \{\par
227     QPrinter printer;\par
228     printer.setPrinterName({\cf22 "PDF"});\par
229 \par
230     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
231 \par
232     {\cf19 if} (filename.isEmpty()) \{\par
233         {\cf19 return};\par
234     \}\par
235 \par
236     printer.setOutputFormat(QPrinter::PdfFormat);\par
237     printer.setOutputFileName(filename);\par
238 \par
239     ContInfecBarrasInterL1InterL2(&printer);\par
240 \par
241     QDesktopServices::openUrl(QUrl(filename));\par
242 \}\par
}
}
{\xe \v PdfInfecBarrasInterL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInfecBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInfecBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 249                                             \{\par
250     QPrinter printer;\par
251     printer.setPrinterName({\cf22 "PDF"});\par
252 \par
253     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
254 \par
255     {\cf19 if} (filename.isEmpty()) \{\par
256         {\cf19 return};\par
257     \}\par
258 \par
259     printer.setOutputFormat(QPrinter::PdfFormat);\par
260     printer.setOutputFileName(filename);\par
261 \par
262     ContInfecBarrasInterL1TodL2(&printer);\par
263 \par
264     QDesktopServices::openUrl(QUrl(filename));\par
265 \}\par
}
}
{\xe \v PdfInfecBarrasTodL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInfecBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInfecBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 272                                             \{\par
273     QPrinter printer;\par
274     printer.setPrinterName({\cf22 "PDF"});\par
275 \par
276     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
277 \par
278     {\cf19 if} (filename.isEmpty()) \{\par
279         {\cf19 return};\par
280     \}\par
281 \par
282     printer.setOutputFormat(QPrinter::PdfFormat);\par
283     printer.setOutputFileName(filename);\par
284 \par
285     ContInfecBarrasTodL1InterL2(&printer);\par
286 \par
287     QDesktopServices::openUrl(QUrl(filename));\par
288 \}\par
}
}
{\xe \v PdfInfecBarrasTodL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInfecBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInfecBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 295                                           \{\par
296     QPrinter printer;\par
297     printer.setPrinterName({\cf22 "PDF"});\par
298 \par
299     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
300 \par
301     {\cf19 if} (filename.isEmpty()) \{\par
302         {\cf19 return};\par
303     \}\par
304 \par
305     printer.setOutputFormat(QPrinter::PdfFormat);\par
306     printer.setOutputFileName(filename);\par
307 \par
308     ContInfecBarrasTodL1TodL2(&printer);\par
309 \par
310     QDesktopServices::openUrl(QUrl(filename));\par
311 \}\par
}
}
{\xe \v PdfInterBarrasTodL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInterBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInterBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 88                                             \{\par
89     QPrinter printer;\par
90     printer.setPrinterName({\cf22 "PDF"});\par
91 \par
92     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
93 \par
94     {\cf19 if} (filename.isEmpty()) \{\par
95         {\cf19 return};\par
96     \}\par
97 \par
98     printer.setOutputFormat(QPrinter::PdfFormat);\par
99     printer.setOutputFileName(filename);\par
100 \par
101     ContInterBarrasTodL1InterL2(&printer);\par
102 \par
103     QDesktopServices::openUrl(QUrl(filename));\par
104 \}\par
}
}
{\xe \v PdfInterBarrasTodL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInterBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInterBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111                                           \{\par
112     QPrinter printer;\par
113     printer.setPrinterName({\cf22 "PDF"});\par
114 \par
115     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
116 \par
117     {\cf19 if} (filename.isEmpty()) \{\par
118         {\cf19 return};\par
119     \}\par
120 \par
121     printer.setOutputFormat(QPrinter::PdfFormat);\par
122     printer.setOutputFileName(filename);\par
123 \par
124     ContInterBarrasTodL1TodL2(&printer);\par
125 \par
126     QDesktopServices::openUrl(QUrl(filename));\par
127 \}\par
}
}
{\xe \v PdfInterBInterL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInterBInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInterBInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                                          \{\par
43     QPrinter printer;\par
44     printer.setPrinterName({\cf22 "PDF"});\par
45 \par
46     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
47 \par
48     {\cf19 if} (filename.isEmpty()) \{\par
49         {\cf19 return};\par
50     \}\par
51 \par
52     printer.setOutputFormat(QPrinter::PdfFormat);\par
53     printer.setOutputFileName(filename);\par
54 \par
55     ContInterBInterL1InterL2(&printer);\par
56 \par
57     QDesktopServices::openUrl(QUrl(filename));\par
58 \}\par
}
}
{\xe \v PdfInterBInterL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInterBInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInterBInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65                                        \{\par
66     QPrinter printer;\par
67     printer.setPrinterName({\cf22 "PDF"});\par
68 \par
69     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
70 \par
71     {\cf19 if} (filename.isEmpty()) \{\par
72         {\cf19 return};\par
73     \}\par
74 \par
75     printer.setOutputFormat(QPrinter::PdfFormat);\par
76     printer.setOutputFileName(filename);\par
77 \par
78     ContInterBInterL1TodL2(&printer);\par
79 \par
80     QDesktopServices::openUrl(QUrl(filename));\par
81 \}\par
}
}
{\xe \v QtdLinhasInfoBarra\:ExportarPdf}
{\xe \v ExportarPdf\:QtdLinhasInfoBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ExportarPdf::QtdLinhasInfoBarra ()}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3773                                    \{\par
3774     {\cf18 int} linhas = 0 ;\par
3775 \par
3776     linhas += (int)FiltrosBarra::tensaoPu;\par
3777     linhas += (int)FiltrosBarra::tensaoNominal;\par
3778     linhas += (int)FiltrosBarra::thdv;\par
3779     linhas += (int)FiltrosBarra::dit * (FrameBarras::quantidadeDeComponentesHarm);\par
3780     linhas += (int)FiltrosBarra::ditPercent * (FrameBarras::quantidadeDeComponentesHarm);\par
3781     linhas += (int)FiltrosBarra::tensaoEficaz;\par
3782 \par
3783     {\cf19 return} linhas;\par
3784 \}\par
}
}
{\xe \v QtdLinhasInfoLinha\:ExportarPdf}
{\xe \v ExportarPdf\:QtdLinhasInfoLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ExportarPdf::QtdLinhasInfoLinha ()}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3791                                    \{\par
3792     {\cf18 int} linhas = 0 ;\par
3793 \par
3794     linhas += (int) FiltroLinha::correntePu;\par
3795     linhas += (int) FiltroLinha::dht;\par
3796     linhas += (int) FiltroLinha::dit * (FrameBarras::quantidadeDeComponentesHarm);\par
3797     linhas += (int) FiltroLinha::ditPercent * (FrameBarras::quantidadeDeComponentesHarm);\par
3798     linhas += (int) FiltroLinha::correnteEficaz;\par
3799     linhas += (int) FiltroLinha::resistencia;\par
3800     linhas += (int) FiltroLinha::perdas;\par
3801     linhas += (int) FiltroLinha::perdasEficaz;\par
3802 \par
3803     {\cf19 return} linhas;\par
3804 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b exportarpdf.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b exportarpdf.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FiltroLinha Class Reference\par \pard\plain 
{\tc\tcl2 \v FiltroLinha}
{\xe \v FiltroLinha}
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableLinhas do {\b FrameBarras}. }}\par
{
{\f2 #include <filtrolinha.h>}}\par
Inheritance diagram for FiltroLinha:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_filtro_linha.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::FiltroLinha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b FiltroLinha}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fb} \cell }{(Par\'E3metro do tipo Ui::FrameBarras para permitir acesso aos componentes da interface do frame {\b FrameBarras}) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FiltroLinha} (QWidget *parent=nullptr, Ui::FrameBarras *fb=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::~FiltroLinha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b FiltroLinha} \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FiltroLinha} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inserindoQssFiltrosLinha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar m\'E9todos que inserem Qss nos componentes do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssFiltrosLinha} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inserindoQssCheckBox\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos Checkbox's do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssCheckBox} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inserindoQssLineEdit\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no LineEdit\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssLineEdit} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inserindoQssBtnAplicar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o Aplicar\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssBtnAplicar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inserindoQssComboBox\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no ComboBox\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssComboBox} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inserindoQssGroupBox\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos GroupBox's\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssGroupBox} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inserindoQssJanela\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir icon e title na janela\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssJanela} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inicializandoFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primeiro m\'E9todo a ser chamada no construtor, respons\'E1vel por chamar os m\'E9todos subsequ\'EAntes que modelam a Interface do frame.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializandoFrame} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::atualizaVariaveis\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por atualizar variaveis est\'E1ticas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b atualizaVariaveis} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::filtrarLinhasTabela\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as linhas da tabela Linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarLinhasTabela} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::filtrarColunasTabela\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar metodos que filtram as colunas \'E0 depender da escolha do us\'FAario\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColunasTabela} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::filtrarColTod1Tod2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as colunas - Aparecer\'E3o todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColTod1Tod2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::filtrarColTod1Ind2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as colunas - Aparecer\'E3o todas que correponderem aos destinos escolhidos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColTod1Ind2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::filtrarColInd1Tod2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as colunas - Aparecer\'E3o todas que correponderem as origens escolhidas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColInd1Tod2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::filtrarColInd1Ind2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as colunas - Aparecer\'E3o todas que correponderem as origens e aos destinos escolhidos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColInd1Ind2} ()\par
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b correntePu} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da corrente na linha dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b dht} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dht dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b dit} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b ditPercent} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit percentual dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b correnteEficaz} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da corrente eficaz dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b resistencia} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da resist\'EAncia dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b perdas} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox das perdas dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b perdasEficaz} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox das perdas eficaz dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexComboBoxOrigem} = 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual checkbox est\'E1 selecionado para a origem das linhas ( 0 para todas as linhas , 1 para selecionar as origens) Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexComboBoxDestino} = 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual checkbox est\'E1 selecionado para a destino das linhas ( 0 para todas as linhas , 1 para selecionar os destinos) Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexComboBoxOrigemEnvio} =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das linhas para a origem foi a ultima a ser selecionada e concluida Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexComboBoxDestinoEnvio} =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das linhas para o destino foi a ultima a ser selecionada e concluida Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QStringList {\b indiceOrigensEscolhidas}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o indice das origens escolhidas em um QStringList. Caso seja escolhido o metodo de selecionar as linhas de forma individual, as origens sao separadas por virgula. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QStringList {\b indiceDestinosEscolhidos}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o indice dos destinos escolhidas em um QStringList. Caso seja escolhido o metodo de selecionar as linhas de forma individual, os destinos sao separados por virgula. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableLinhas do {\b FrameBarras}. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FiltroLinha\:FiltroLinha}
{\xe \v FiltroLinha\:FiltroLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FiltroLinha::FiltroLinha (QWidget *  {\i parent} = {\f2 nullptr}, Ui::FrameBarras *  {\i fb} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 135                                                             :\par
136     QDialog(parent),\par
137     ui({\cf17 new} Ui::FiltroLinha)\par
138 \{\par
139     ui->setupUi({\cf17 this});\par
140     Style style;\par
141     setParent(parent);\par
142     frameBarras2 = fb;\par
143 \par
144     inicializandoFrame();\par
145 \par
146 \}\par
}
}
{\xe \v ~FiltroLinha\:FiltroLinha}
{\xe \v FiltroLinha\:~FiltroLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FiltroLinha::~FiltroLinha ()}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 153 \{\par
154     {\cf17 delete} ui;\par
155 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v atualizaVariaveis\:FiltroLinha}
{\xe \v FiltroLinha\:atualizaVariaveis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::atualizaVariaveis ()}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 328                                    \{\par
329     correntePu = ui->checkBoxCorrente->isChecked();\par
330     dht = ui->checkBoxDht->isChecked();\par
331     dit = ui->checkboxDit->isChecked();\par
332     ditPercent = ui->checkBoxDitPercent->isChecked();\par
333     correnteEficaz = ui->checkBoxCorrenteEficaz->isChecked();\par
334     resistencia = ui->checkBoxResistencia->isChecked();\par
335     perdas = ui->checkBoxPerdas->isChecked();\par
336     perdasEficaz = ui->checkBoxPerdasEficaz->isChecked();\par
337 \}\par
}
}
{\xe \v filtrarColInd1Ind2\:FiltroLinha}
{\xe \v FiltroLinha\:filtrarColInd1Ind2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::filtrarColInd1Ind2 ()}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 525                                     \{\par
526     {\cf19 for} ({\cf18 int} i = 0; i < FrameBarras::numeroDeLinhas; i++) \{\par
527         frameBarras2->tableLinhas->setColumnHidden(i, {\cf17 false});\par
528     \}\par
529 \par
530     QStringList SelecionadasOrigem;\par
531     QStringList SelecionadasDestino;\par
532 \par
533     {\cf19 try} \{\par
534         SelecionadasOrigem = ui->lineEditFLinha->text().split({\cf22 ","});\par
535         {\cf19 if} (SelecionadasOrigem.isEmpty()) \{\par
536             {\cf19 throw} std::runtime_error({\cf22 "A lista de origens selecionadas est\'E1 vazia."});\par
537         \}\par
538     \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
539         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, e.what());\par
540         {\cf19 return};\par
541     \}\par
542 \par
543     {\cf19 try} \{\par
544         SelecionadasDestino = ui->lineEditFLinha2->text().split({\cf22 ","});\par
545         {\cf19 if} (SelecionadasDestino.isEmpty()) \{\par
546             {\cf19 throw} std::runtime_error({\cf22 "A lista de destinos selecionados est\'E1 vazia."});\par
547         \}\par
548     \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
549         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, e.what());\par
550         {\cf19 return};\par
551     \}\par
552 \par
553     {\cf19 for} ({\cf18 int} i = 0; i < FrameBarras::numeroDeLinhas; i++) \{\par
554         {\cf18 int} barraDeDestino = frameBarras2->tableLinhas->horizontalHeaderItem(i)->text().split({\cf22 "->"}).at(1).toInt();\par
555         {\cf18 int} barraDeOrigem = frameBarras2->tableLinhas->horizontalHeaderItem(i)->text().split({\cf22 "->"}).at(0).toInt();\par
556 \par
557         {\cf18 bool} origemEncontrada = {\cf17 false};\par
558         {\cf18 bool} destinoEncontrado = {\cf17 false};\par
559 \par
560         {\cf19 for} ({\cf18 int} j = 0; j < SelecionadasOrigem.size(); j++) \{\par
561             {\cf19 if} (SelecionadasOrigem.at(j).toInt() == barraDeOrigem) \{\par
562                 origemEncontrada = {\cf17 true};\par
563                 {\cf19 break};\par
564             \}\par
565         \}\par
566 \par
567         {\cf19 for} ({\cf18 int} j = 0; j < SelecionadasDestino.size(); j++) \{\par
568             {\cf19 if} (SelecionadasDestino.at(j).toInt() == barraDeDestino) \{\par
569                 destinoEncontrado = {\cf17 true};\par
570                 {\cf19 break};\par
571             \}\par
572         \}\par
573 \par
574         {\cf19 if} (!origemEncontrada || !destinoEncontrado) \{\par
575             frameBarras2->tableLinhas->setColumnHidden(i, {\cf17 true});\par
576         \}\par
577     \}\par
578 \par
579     indiceOrigensEscolhidas = SelecionadasOrigem;\par
580     indiceDestinosEscolhidos = SelecionadasDestino;\par
581     indexComboBoxOrigemEnvio = indexComboBoxOrigem;\par
582     indexComboBoxDestinoEnvio = indexComboBoxDestino;\par
583 \}\par
}
}
{\xe \v filtrarColInd1Tod2\:FiltroLinha}
{\xe \v FiltroLinha\:filtrarColInd1Tod2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::filtrarColInd1Tod2 ()}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 482                                     \{\par
483     {\cf19 for} ({\cf18 int} i = 0; i < FrameBarras::numeroDeLinhas; i++) \{\par
484         frameBarras2->tableLinhas->setColumnHidden(i, {\cf17 false});\par
485     \}\par
486 \par
487     {\cf19 try} \{\par
488         QString Selecionadas = ui->lineEditFLinha->text().trimmed();\par
489 \par
490         {\cf19 if} (Selecionadas.isEmpty()) \{\par
491             {\cf19 throw} std::runtime_error({\cf22 "O campo n\'E3o pode ser vazio."});\par
492         \}\par
493 \par
494         QStringList selecionadas = Selecionadas.split({\cf22 ","});\par
495 \par
496         {\cf19 for} ({\cf18 int} i = 0; i < FrameBarras::numeroDeLinhas; i++) \{\par
497             {\cf18 int} barraDeOrigem = frameBarras2->tableLinhas->horizontalHeaderItem(i)->text().split({\cf22 "->"}).at(0).toInt();\par
498             {\cf18 bool} selecionadaEncontrada = {\cf17 false};\par
499             {\cf19 for} ({\cf17 const} QString& selecionada : selecionadas) \{\par
500                 {\cf19 if} (selecionada.toInt() == barraDeOrigem) \{\par
501                     selecionadaEncontrada = {\cf17 true};\par
502                     {\cf19 break};\par
503                 \}\par
504             \}\par
505             {\cf19 if} (!selecionadaEncontrada) \{\par
506                 frameBarras2->tableLinhas->setColumnHidden(i, {\cf17 true});\par
507             \} {\cf19 else} \{\par
508                 frameBarras2->tableLinhas->setColumnHidden(i, {\cf17 false});\par
509             \}\par
510         \}\par
511 \par
512         indiceOrigensEscolhidas = selecionadas;\par
513         indexComboBoxOrigemEnvio = indexComboBoxOrigem;\par
514     \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
515         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, e.what());\par
516         {\cf19 return};\par
517     \}\par
518 \}\par
}
}
{\xe \v filtrarColTod1Ind2\:FiltroLinha}
{\xe \v FiltroLinha\:filtrarColTod1Ind2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::filtrarColTod1Ind2 ()}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 442                                     \{\par
443     {\cf19 try} \{\par
444         QString Selecionadas = ui->lineEditFLinha2->text().trimmed();\par
445 \par
446         {\cf19 if} (Selecionadas.isEmpty()) \{\par
447             {\cf19 throw} std::runtime_error({\cf22 "O campo n\'E3o pode ser vazio."});\par
448         \}\par
449 \par
450         {\cf19 for} ({\cf18 int} i = 0; i < FrameBarras::numeroDeLinhas; i++) \{\par
451             frameBarras2->tableLinhas->setColumnHidden(i, {\cf17 false});\par
452         \}\par
453 \par
454         QStringList indices = Selecionadas.split({\cf22 ","});\par
455         {\cf19 for} ({\cf18 int} i = 0; i < FrameBarras::numeroDeLinhas; i++) \{\par
456             {\cf18 int} barraDeDestino = frameBarras2->tableLinhas->horizontalHeaderItem(i)->text().split({\cf22 "->"}).at(1).toInt();\par
457             {\cf18 bool} encontrada = {\cf17 false};\par
458             {\cf19 for} ({\cf18 int} j = 0; j < indices.size(); j++) \{\par
459                 {\cf19 if} (indices.at(j).toInt() == barraDeDestino) \{\par
460                     encontrada = {\cf17 true};\par
461                     {\cf19 break};\par
462                 \}\par
463             \}\par
464             {\cf19 if} (!encontrada) \{\par
465                 frameBarras2->tableLinhas->setColumnHidden(i, {\cf17 true});\par
466             \}\par
467         \}\par
468 \par
469         indiceDestinosEscolhidos = indices;\par
470         indexComboBoxDestinoEnvio = indexComboBoxDestino;\par
471     \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
472         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, e.what());\par
473         {\cf19 return};\par
474     \}\par
475 \}\par
}
}
{\xe \v filtrarColTod1Tod2\:FiltroLinha}
{\xe \v FiltroLinha\:filtrarColTod1Tod2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::filtrarColTod1Tod2 ()}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 431                                     \{\par
432     {\cf19 for}({\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
433         frameBarras2->tableLinhas->setColumnHidden(i,{\cf17 false});\par
434     \}\par
435 \}\par
}
}
{\xe \v filtrarColunasTabela\:FiltroLinha}
{\xe \v FiltroLinha\:filtrarColunasTabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::filtrarColunasTabela ()}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 412                                       \{\par
413     {\cf20 //filtra as colunas da tabela}\par
414     {\cf19 if}(indexComboBoxOrigem==0 && indexComboBoxDestino==0)\{\par
415         filtrarColTod1Tod2();\par
416     \}{\cf19 else} {\cf19 if} (indexComboBoxOrigem == 0 && indexComboBoxDestino == 1) \{\par
417         filtrarColTod1Ind2();\par
418     \}\par
419     {\cf19 else} {\cf19 if} (indexComboBoxOrigem == 1 && indexComboBoxDestino == 0) \{\par
420         filtrarColInd1Tod2();\par
421     \}{\cf19 else}\{\par
422         filtrarColInd1Ind2();\par
423     \}\par
424 \}\par
}
}
{\xe \v filtrarLinhasTabela\:FiltroLinha}
{\xe \v FiltroLinha\:filtrarLinhasTabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::filtrarLinhasTabela ()}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 344                                      \{\par
345     {\cf19 if}(!correntePu)\{\par
346         frameBarras2->tableLinhas->setRowHidden(0,{\cf17 true});\par
347     \}{\cf19 else}\{\par
348         frameBarras2->tableLinhas->setRowHidden(0,{\cf17 false});\par
349     \}\par
350     {\cf19 if}(!dht)\{\par
351         frameBarras2->tableLinhas->setRowHidden(1,{\cf17 true});\par
352     \}{\cf19 else}\{\par
353         frameBarras2->tableLinhas->setRowHidden(1,{\cf17 false});\par
354     \}\par
355     {\cf18 int} pos =2;\par
356     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
357         {\cf19 if}(!dit)\{\par
358             frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 true});\par
359             pos++;\par
360         \}{\cf19 else}\{\par
361             frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 false});\par
362             pos++;\par
363         \}\par
364     \}\par
365     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
366         {\cf19 if}(!ditPercent)\{\par
367             frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 true});\par
368             pos++;\par
369         \}{\cf19 else}\{\par
370             frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 false});\par
371             pos++;\par
372         \}\par
373     \}\par
374     {\cf19 if}(!correnteEficaz)\{\par
375         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 true});\par
376         pos++;\par
377     \}{\cf19 else}\{\par
378         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 false});\par
379         pos++;\par
380     \}\par
381 \par
382     {\cf19 if}(!resistencia)\{\par
383         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 true});\par
384         pos++;\par
385     \}{\cf19 else}\{\par
386         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 false});\par
387         pos++;\par
388     \}\par
389 \par
390     {\cf19 if}(!perdas)\{\par
391         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 true});\par
392         pos++;\par
393     \}{\cf19 else}\{\par
394         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 false});\par
395         pos++;\par
396     \}\par
397 \par
398     {\cf19 if}(!perdasEficaz)\{\par
399         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 true});\par
400         pos++;\par
401     \}{\cf19 else}\{\par
402         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 false});\par
403         pos++;\par
404     \}\par
405 \}\par
}
}
{\xe \v inicializandoFrame\:FiltroLinha}
{\xe \v FiltroLinha\:inicializandoFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inicializandoFrame ()}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 162                                     \{\par
163     inserindoQssFiltrosLinha();\par
164 \}\par
}
}
{\xe \v inserindoQssBtnAplicar\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssBtnAplicar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssBtnAplicar ()}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 230                                         \{\par
231     Style style;\par
232     ui->btnAplicar->setStyleSheet(style.cssBtn);\par
233 \par
234 \}\par
}
}
{\xe \v inserindoQssCheckBox\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssCheckBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssCheckBox ()}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 186                                       \{\par
187     Style style;\par
188     ui->checkBoxCorrente->setChecked(correntePu);\par
189     ui->checkBoxDht->setChecked(dht);\par
190     ui->checkboxDit->setChecked(dit);\par
191     ui->checkBoxDitPercent->setChecked(ditPercent);\par
192     ui->checkBoxCorrenteEficaz->setChecked(correnteEficaz);\par
193     ui->checkBoxResistencia->setChecked(resistencia);\par
194     ui->checkBoxPerdas->setChecked(perdas);\par
195     ui->checkBoxPerdasEficaz->setChecked(perdasEficaz);\par
196 \par
197     ui->checkBoxCorrente->setStyleSheet(style.cssCheckbox);\par
198     ui->checkBoxDht->setStyleSheet(style.cssCheckbox);\par
199     ui->checkboxDit->setStyleSheet(style.cssCheckbox);\par
200     ui->checkBoxDitPercent->setStyleSheet(style.cssCheckbox);\par
201     ui->checkBoxCorrenteEficaz->setStyleSheet(style.cssCheckbox);\par
202     ui->checkBoxResistencia->setStyleSheet(style.cssCheckbox);\par
203     ui->checkBoxPerdas->setStyleSheet(style.cssCheckbox);\par
204     ui->checkBoxPerdasEficaz->setStyleSheet(style.cssCheckbox);\par
205 \}\par
}
}
{\xe \v inserindoQssComboBox\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssComboBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssComboBox ()}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 241                                       \{\par
242     Style style;\par
243     ui->comboBoxOrigem->setCurrentIndex(indexComboBoxOrigem);\par
244     ui->comboBoxDestino->setCurrentIndex(indexComboBoxDestino);\par
245 \par
246 \}\par
}
}
{\xe \v inserindoQssFiltrosLinha\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssFiltrosLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssFiltrosLinha ()}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 171                                           \{\par
172     inserindoQssCheckBox();\par
173     inserindoQssLineEdit();\par
174     inserindoQssBtnAplicar();\par
175     inserindoQssComboBox();\par
176     inserindoQssGroupBox();\par
177     inserindoQssJanela();\par
178 \}\par
}
}
{\xe \v inserindoQssGroupBox\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssGroupBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssGroupBox ()}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 253                                       \{\par
254     Style style;\par
255     ui->groupBoxAtributos->setStyleSheet(style.cssGroupBox);\par
256     ui->groupBoxLinhas->setStyleSheet(style.cssGroupBox);\par
257 \}\par
}
}
{\xe \v inserindoQssJanela\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssJanela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssJanela ()}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 264                                     \{\par
265     setWindowTitle({\cf22 "Filtros"});\par
266     setWindowIcon(QIcon({\cf22 ":/icons/imgs/icons/engrenagem.png"}));\par
267 \}\par
}
}
{\xe \v inserindoQssLineEdit\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssLineEdit ()}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 212                                       \{\par
213     Style style;\par
214     ui->lineEditFLinha->setPlaceholderText({\cf22 "Todas"});\par
215     ui->lineEditFLinha2->setPlaceholderText({\cf22 "Todas"});\par
216 \par
217 \par
218     ui->lineEditFLinha->setStyleSheet(style.cssLineEdit);\par
219     ui->lineEditFLinha2->setStyleSheet(style.cssLineEdit);\par
220 \par
221     ui->lineEditFLinha->setEnabled({\cf17 false});\par
222     ui->lineEditFLinha2->setEnabled({\cf17 false});\par
223 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v correnteEficaz\:FiltroLinha}
{\xe \v FiltroLinha\:correnteEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::correnteEficaz = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da corrente eficaz dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::correnteEficaz} \par
}}
{\xe \v correntePu\:FiltroLinha}
{\xe \v FiltroLinha\:correntePu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::correntePu = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da corrente na linha dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::correntePu} \par
}}
{\xe \v dht\:FiltroLinha}
{\xe \v FiltroLinha\:dht}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::dht = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dht dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::dht} \par
}}
{\xe \v dit\:FiltroLinha}
{\xe \v FiltroLinha\:dit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::dit = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::dit} \par
}}
{\xe \v ditPercent\:FiltroLinha}
{\xe \v FiltroLinha\:ditPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::ditPercent = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit percentual dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::ditPercent} \par
}}
{\xe \v indexComboBoxDestino\:FiltroLinha}
{\xe \v FiltroLinha\:indexComboBoxDestino}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FiltroLinha::indexComboBoxDestino = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual checkbox est\'E1 selecionado para a destino das linhas ( 0 para todas as linhas , 1 para selecionar os destinos) Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FiltroLinha::indexComboBoxDestino} \par
}}
{\xe \v indexComboBoxDestinoEnvio\:FiltroLinha}
{\xe \v FiltroLinha\:indexComboBoxDestinoEnvio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FiltroLinha::indexComboBoxDestinoEnvio =0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das linhas para o destino foi a ultima a ser selecionada e concluida Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FiltroLinha::indexComboBoxDestinoEnvio} \par
}}
{\xe \v indexComboBoxOrigem\:FiltroLinha}
{\xe \v FiltroLinha\:indexComboBoxOrigem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FiltroLinha::indexComboBoxOrigem = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual checkbox est\'E1 selecionado para a origem das linhas ( 0 para todas as linhas , 1 para selecionar as origens) Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FiltroLinha::indexComboBoxOrigem} \par
}}
{\xe \v indexComboBoxOrigemEnvio\:FiltroLinha}
{\xe \v FiltroLinha\:indexComboBoxOrigemEnvio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FiltroLinha::indexComboBoxOrigemEnvio =0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das linhas para a origem foi a ultima a ser selecionada e concluida Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FiltroLinha::indexComboBoxOrigemEnvio} \par
}}
{\xe \v indiceDestinosEscolhidos\:FiltroLinha}
{\xe \v FiltroLinha\:indiceDestinosEscolhidos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FiltroLinha::indiceDestinosEscolhidos{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o indice dos destinos escolhidas em um QStringList. Caso seja escolhido o metodo de selecionar as linhas de forma individual, os destinos sao separados por virgula. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable \par
}}
{\xe \v indiceOrigensEscolhidas\:FiltroLinha}
{\xe \v FiltroLinha\:indiceOrigensEscolhidas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FiltroLinha::indiceOrigensEscolhidas{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o indice das origens escolhidas em um QStringList. Caso seja escolhido o metodo de selecionar as linhas de forma individual, as origens sao separadas por virgula. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable \par
}}
{\xe \v perdas\:FiltroLinha}
{\xe \v FiltroLinha\:perdas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::perdas = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox das perdas dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::perdas} \par
}}
{\xe \v perdasEficaz\:FiltroLinha}
{\xe \v FiltroLinha\:perdasEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::perdasEficaz = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox das perdas eficaz dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::perdasEficaz} \par
}}
{\xe \v resistencia\:FiltroLinha}
{\xe \v FiltroLinha\:resistencia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::resistencia = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da resist\'EAncia dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::resistencia} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b filtrolinha.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b filtrolinha.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FiltrosBarra Class Reference\par \pard\plain 
{\tc\tcl2 \v FiltrosBarra}
{\xe \v FiltrosBarra}
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableBarras do {\b FrameBarras}. }}\par
{
{\f2 #include <filtrosbarra.h>}}\par
Inheritance diagram for FiltrosBarra:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_filtros_barra.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::FiltrosBarra * {\b getUi} ()\par
}
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::FiltrosBarra\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b FiltrosBarra}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fb} \cell }{(Par\'E3metro do tipo Ui::FrameBarras para permitir acesso aos componentes da interface do frame {\b FrameBarras}) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FiltrosBarra} (QWidget *parent=nullptr, Ui::FrameBarras *fb=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::~FiltrosBarra\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b FiltrosBarra} \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FiltrosBarra} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inserindoQssFiltrosBarra\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar m\'E9todos que inserem Qss nos componentes do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssFiltrosBarra} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inserindoQssCheckBox\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos Checkbox's do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssCheckBox} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inserindoQssLineEdit\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no LineEdit\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssLineEdit} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inserindoQssBtnAplicar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o Aplicar\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssBtnAplicar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inserindoQssComboBox\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no ComboBox\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssComboBox} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inserindoQssGroupBox\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos GroupBox's\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssGroupBox} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inserindoQssJanela\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir icon e title na janela\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssJanela} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inicializaFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primeiro m\'E9todo a ser chamada no construtor, respons\'E1vel por chamar os m\'E9todos subsequ\'EAntes que modelam a Interface do frame.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializandoFrame} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::atualizaVariaveis\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por atualizar variaveis est\'E1ticas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b atualizaVariaveis} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::filtrarLinhasTabela\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as linhas da tabela Barras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarLinhasTabela} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::filtrarColunasTabela\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar metodos que filtram as colunas \'E0 depender da escolha do us\'FAario\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColunasTabela} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::filtrarColunasPorIndices\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as colunas da tabela barras por indices\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColunasPorIndices} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::filtrarColunasPorFaixa\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as colunas da tabela barras por faixa\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColunasPorFaixa} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::filtrarColunasPorMarcadores\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as colunas da tabela barras por marcadores (apenas as poluidoras)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColunasPorMarcadores} ()\par
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b tensaoPu} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da tens\'E3o na {\b Barra} pu dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b tensaoNominal} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da tens\'E3o nominal dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b thdv} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do thdv dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b dit} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b ditPercent} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit[%] dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b tensaoEficaz} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da tens\'E3o eficaz dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexComboBox} = 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das barras est\'E1 selecionada Seu valor inicial \'E9 0. 0 significa que o metodo de filtragem \'E9 para intervalo de numero de barras , 1 para escolha das barras de forma individual e 2 para escolher s\'F3 as poluidoras Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexComboBoxEnvio} = 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das barras foi a ultima a ser selecionada e concluida Seu valor inicial \'E9 0. 0 significa que o metodo de filtragem \'E9 para intervalo de numero de barras , 1 para escolha das barras de forma individual e 2 para escolher s\'F3 as poluidoras Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QStringList {\b indiceBarrasEscolhidas}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o indice das barras escolhidas em um QStringList. Caso seja escolhido o metodo de intervalo ser\'E3o 2 valores separados por tra\'E7o e caso sejam as individuais, separados por virgula. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableBarras do {\b FrameBarras}. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FiltrosBarra\:FiltrosBarra}
{\xe \v FiltrosBarra\:FiltrosBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FiltrosBarra::FiltrosBarra (QWidget *  {\i parent} = {\f2 nullptr}, Ui::FrameBarras *  {\i fb} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 97                                                                :\par
98     QDialog(parent),\par
99     ui({\cf17 new} Ui::FiltrosBarra)\par
100 \{\par
101     ui->setupUi({\cf17 this});\par
102     setParent(parent);\par
103     frameBarras = fb;\par
104 \par
105     inicializandoFrame();\par
106 \par
107 \}\par
}
}
{\xe \v ~FiltrosBarra\:FiltrosBarra}
{\xe \v FiltrosBarra\:~FiltrosBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FiltrosBarra::~FiltrosBarra ()}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 114 \{\par
115     {\cf17 delete} ui;\par
116 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v atualizaVariaveis\:FiltrosBarra}
{\xe \v FiltrosBarra\:atualizaVariaveis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::atualizaVariaveis ()}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 267                                     \{\par
268     {\cf20 //atualiza as variaveis est\'E1ticas}\par
269     tensaoPu = ui->checkBoxTensaoBarra->isChecked();\par
270     tensaoNominal = ui->checkBoxTensaoNominal->isChecked();\par
271     thdv = ui->checkBoxThdv->isChecked();\par
272     dit = ui->checkBoxDit->isChecked();\par
273     ditPercent = ui->checkBoxDitPercent->isChecked();\par
274     tensaoEficaz = ui->checkBoxTensaoEficaz->isChecked();\par
275 \}\par
}
}
{\xe \v filtrarColunasPorFaixa\:FiltrosBarra}
{\xe \v FiltrosBarra\:filtrarColunasPorFaixa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::filtrarColunasPorFaixa ()}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 391                                          \{\par
392     QStringList indices;\par
393     QString lineEditValue = ui->lineEditFBarra->text().trimmed();\par
394 \par
395     {\cf19 if} (lineEditValue.isEmpty()) \{\par
396         indices.append(QString::number(1));\par
397         indices.append(QString::number(FrameTensoes::numeroDeBarras));\par
398     \} {\cf19 else} \{\par
399         {\cf19 try} \{\par
400             QStringList values = lineEditValue.split({\cf22 "-"});\par
401             {\cf19 if} (values.size() != 2) \{\par
402                 {\cf19 throw} std::runtime_error({\cf22 "Formato inv\'E1lido. Digite dois n\'FAmeros separados por um tra\'E7o."});\par
403             \}\par
404 \par
405             {\cf18 int} inicio = values.at(0).toInt();\par
406             {\cf18 int} fim = values.at(1).toInt();\par
407 \par
408             {\cf19 if} (inicio < 1 || fim > FrameTensoes::numeroDeBarras || inicio >= fim) \{\par
409                 {\cf19 throw} std::runtime_error({\cf22 "Valores inv\'E1lidos. O primeiro n\'FAmero deve ser maior ou igual a 1, o segundo n\'FAmero deve ser menor ou igual a "} + QString::number(FrameTensoes::numeroDeBarras).toStdString() + {\cf22 ", e o primeiro n\'FAmero deve ser menor que o segundo n\'FAmero."});\par
410             \}\par
411 \par
412             indices.append(QString::number(inicio));\par
413             indices.append(QString::number(fim));\par
414         \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
415             QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, e.what());\par
416             {\cf19 return};\par
417         \}\par
418     \}\par
419 \par
420     {\cf19 for} ({\cf18 int} i = 0; i < FrameTensoes::numeroDeBarras; i++) \{\par
421         {\cf19 if} (i >= indices.at(0).toInt() - 1 && i <= indices.at(1).toInt() - 1) \{\par
422             frameBarras->tableBarras->setColumnHidden(i, {\cf17 false});\par
423         \} {\cf19 else} \{\par
424             frameBarras->tableBarras->setColumnHidden(i, {\cf17 true});\par
425         \}\par
426     \}\par
427 \par
428     indiceBarrasEscolhidas = indices;\par
429     indexComboBoxEnvio = indexComboBox;\par
430 \par
431 \}\par
}
}
{\xe \v filtrarColunasPorIndices\:FiltrosBarra}
{\xe \v FiltrosBarra\:filtrarColunasPorIndices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::filtrarColunasPorIndices ()}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 349                                             \{\par
350     QString lineEditValue = ui->lineEditFBarra->text().trimmed();\par
351     {\cf19 if} (lineEditValue.isEmpty()) \{\par
352         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, {\cf22 "O campo n\'E3o pode ser vazio."});\par
353         ui->lineEditFBarra->clear();\par
354         indexComboBox = 0;\par
355         {\cf19 return};\par
356     \}\par
357 \par
358     {\cf19 try} \{\par
359         QStringList indices = lineEditValue.split({\cf22 ","});\par
360         QList<bool> barrasEscolhidas(FrameTensoes::numeroDeBarras, {\cf17 false});\par
361 \par
362         {\cf19 for} ({\cf17 auto} it = indices.begin(); it != indices.end(); it++) \{\par
363             {\cf18 int} index = it->toInt();\par
364             {\cf19 if} (index < 1 || index > FrameTensoes::numeroDeBarras) \{\par
365                 {\cf19 throw} std::runtime_error({\cf22 "Valores inv\'E1lidos. Os n\'FAmeros devem ser maiores ou iguais a 1 e menores ou iguais a "} + QString::number(FrameTensoes::numeroDeBarras).toStdString() + {\cf22 "."});\par
366             \}\par
367             barrasEscolhidas[index - 1] = {\cf17 true};\par
368         \}\par
369 \par
370         {\cf19 for} ({\cf18 int} i = 0; i < FrameTensoes::numeroDeBarras; i++) \{\par
371             frameBarras->tableBarras->setColumnHidden(i, !barrasEscolhidas[i]);\par
372         \}\par
373 \par
374         indiceBarrasEscolhidas = indices;\par
375     \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
376         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, e.what());\par
377         ui->lineEditFBarra->clear();\par
378         indexComboBox = 0;\par
379         {\cf19 return};\par
380     \}\par
381 \par
382     indexComboBoxEnvio = indexComboBox;\par
383 \par
384 \}\par
}
}
{\xe \v filtrarColunasPorMarcadores\:FiltrosBarra}
{\xe \v FiltrosBarra\:filtrarColunasPorMarcadores}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::filtrarColunasPorMarcadores ()}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 438                                               \{\par
439     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
440         {\cf19 if}(frameBarras->tableBarras->item(2,i)->background() == QColor(255, 128, 128) )\{\par
441             frameBarras->tableBarras->setColumnHidden(i,{\cf17 false});\par
442         \}{\cf19 else}\{\par
443             {\cf18 int} pos =3;\par
444             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
445                 {\cf19 if}(frameBarras->tableBarras->item(pos,i)->background() == QColor(255, 128, 128) )\{\par
446                     frameBarras->tableBarras->setColumnHidden(i,{\cf17 false});\par
447                     {\cf19 break};\par
448                 \}{\cf19 else}\{\par
449                     frameBarras->tableBarras->setColumnHidden(i,{\cf17 true});\par
450                 \}\par
451                 pos++;\par
452             \}\par
453         \}\par
454     \}\par
455 \}\par
}
}
{\xe \v filtrarColunasTabela\:FiltrosBarra}
{\xe \v FiltrosBarra\:filtrarColunasTabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::filtrarColunasTabela ()}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 332                                        \{\par
333     {\cf19 if} (indexComboBox == 1) \{\par
334         filtrarColunasPorIndices();\par
335     \}\par
336     {\cf19 else} {\cf19 if} (indexComboBox == 0) \{\par
337         filtrarColunasPorFaixa();\par
338     \}\par
339     {\cf19 else}\{\par
340         filtrarColunasPorMarcadores();\par
341     \}\par
342 \}\par
}
}
{\xe \v filtrarLinhasTabela\:FiltrosBarra}
{\xe \v FiltrosBarra\:filtrarLinhasTabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::filtrarLinhasTabela ()}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 282                                       \{\par
283     {\cf20 //filtra as linhas da tabela}\par
284 \par
285     {\cf19 if}(!tensaoPu)\{\par
286         frameBarras->tableBarras->setRowHidden(0,{\cf17 true});\par
287     \}{\cf19 else}\{\par
288         frameBarras->tableBarras->setRowHidden(0,{\cf17 false});\par
289     \}\par
290     {\cf19 if}(!tensaoNominal)\{\par
291         frameBarras->tableBarras->setRowHidden(1,{\cf17 true});\par
292     \}{\cf19 else}\{\par
293         frameBarras->tableBarras->setRowHidden(1,{\cf17 false});\par
294     \}\par
295     {\cf19 if}(!thdv)\{\par
296         frameBarras->tableBarras->setRowHidden(2,{\cf17 true});\par
297     \}{\cf19 else}\{\par
298         frameBarras->tableBarras->setRowHidden(2,{\cf17 false});\par
299     \}\par
300     {\cf18 int} pos =3;\par
301     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
302         {\cf19 if}(!dit)\{\par
303             frameBarras->tableBarras->setRowHidden(pos,{\cf17 true});\par
304             pos++;\par
305         \}{\cf19 else}\{\par
306             frameBarras->tableBarras->setRowHidden(pos,{\cf17 false});\par
307             pos++;\par
308         \}\par
309     \}\par
310     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
311         {\cf19 if}(!ditPercent)\{\par
312             frameBarras->tableBarras->setRowHidden(pos,{\cf17 true});\par
313             pos++;\par
314         \}{\cf19 else}\{\par
315             frameBarras->tableBarras->setRowHidden(pos,{\cf17 false});\par
316             pos++;\par
317         \}\par
318     \}\par
319     {\cf19 if}(!tensaoEficaz)\{\par
320         frameBarras->tableBarras->setRowHidden(pos,{\cf17 true});\par
321     \}{\cf19 else}\{\par
322         frameBarras->tableBarras->setRowHidden(pos,{\cf17 false});\par
323     \}\par
324 \}\par
}
}
{\xe \v getUi\:FiltrosBarra}
{\xe \v FiltrosBarra\:getUi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::FiltrosBarra * FiltrosBarra::getUi (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                            \{\par
21         {\cf19 return} ui;\par
22     \}\par
}
}
{\xe \v inicializandoFrame\:FiltrosBarra}
{\xe \v FiltrosBarra\:inicializandoFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inicializandoFrame ()}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 123                                      \{\par
124     inserindoQssFiltrosBarra();\par
125 \}\par
}
}
{\xe \v inserindoQssBtnAplicar\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssBtnAplicar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssBtnAplicar ()}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 180                                          \{\par
181     Style style;\par
182     ui->btnAplicar->setStyleSheet(style.cssBtn);\par
183 \}\par
}
}
{\xe \v inserindoQssCheckBox\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssCheckBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssCheckBox ()}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 146                                        \{\par
147     Style style;\par
148     ui->checkBoxTensaoBarra->setChecked(tensaoPu);\par
149     ui->checkBoxTensaoNominal->setChecked(tensaoNominal);\par
150     ui->checkBoxThdv->setChecked(thdv);\par
151     ui->checkBoxDit->setChecked(dit);\par
152     ui->checkBoxDitPercent->setChecked(ditPercent);\par
153     ui->checkBoxTensaoEficaz->setChecked(tensaoEficaz);\par
154 \par
155     ui->checkBoxTensaoBarra->setStyleSheet(style.cssCheckbox);\par
156     ui->checkBoxTensaoNominal->setStyleSheet(style.cssCheckbox);\par
157     ui->checkBoxThdv->setStyleSheet(style.cssCheckbox);\par
158     ui->checkBoxDit->setStyleSheet(style.cssCheckbox);\par
159     ui->checkBoxDitPercent->setStyleSheet(style.cssCheckbox);\par
160     ui->checkBoxTensaoEficaz->setStyleSheet(style.cssCheckbox);\par
161 \}\par
}
}
{\xe \v inserindoQssComboBox\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssComboBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssComboBox ()}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 190                                        \{\par
191     Style style;\par
192     ui->comboBoxFBarra->setCurrentIndex(indexComboBox);\par
193     ui->comboBoxFBarra->setStyleSheet(style.cssComboBox);\par
194 \}\par
}
}
{\xe \v inserindoQssFiltrosBarra\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssFiltrosBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssFiltrosBarra ()}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 132                                            \{\par
133     inserindoQssCheckBox();\par
134     inserindoQssLineEdit();\par
135     inserindoQssBtnAplicar();\par
136     inserindoQssComboBox();\par
137     inserindoQssGroupBox();\par
138     inserindoQssJanela();\par
139 \}\par
}
}
{\xe \v inserindoQssGroupBox\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssGroupBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssGroupBox ()}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 201                                        \{\par
202     Style style;\par
203     ui->groupBoxBarras->setStyleSheet(style.cssGroupBox);\par
204     ui->groupBoxAtributos->setStyleSheet(style.cssGroupBox);\par
205 \}\par
}
}
{\xe \v inserindoQssJanela\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssJanela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssJanela ()}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 212                                      \{\par
213 \par
214     setWindowTitle({\cf22 "Filtros"});\par
215     setWindowIcon(QIcon({\cf22 ":/icons/imgs/icons/engrenagem.png"}));\par
216 \}\par
}
}
{\xe \v inserindoQssLineEdit\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssLineEdit ()}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 168                                        \{\par
169     Style style;\par
170     ui->lineEditFBarra->setStyleSheet(style.cssLineEdit);\par
171     ui->lineEditFBarra->setPlaceholderText({\cf22 "1-"}+QString::number(FrameTensoes::numeroDeBarras));\par
172 \par
173 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dit\:FiltrosBarra}
{\xe \v FiltrosBarra\:dit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::dit = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::dit} \par
}}
{\xe \v ditPercent\:FiltrosBarra}
{\xe \v FiltrosBarra\:ditPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::ditPercent = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit[%] dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::ditPercent} \par
}}
{\xe \v indexComboBox\:FiltrosBarra}
{\xe \v FiltrosBarra\:indexComboBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FiltrosBarra::indexComboBox = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das barras est\'E1 selecionada Seu valor inicial \'E9 0. 0 significa que o metodo de filtragem \'E9 para intervalo de numero de barras , 1 para escolha das barras de forma individual e 2 para escolher s\'F3 as poluidoras Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::indexComboBox} \par
}}
{\xe \v indexComboBoxEnvio\:FiltrosBarra}
{\xe \v FiltrosBarra\:indexComboBoxEnvio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FiltrosBarra::indexComboBoxEnvio = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das barras foi a ultima a ser selecionada e concluida Seu valor inicial \'E9 0. 0 significa que o metodo de filtragem \'E9 para intervalo de numero de barras , 1 para escolha das barras de forma individual e 2 para escolher s\'F3 as poluidoras Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::indexComboBoxEnvio} \par
}}
{\xe \v indiceBarrasEscolhidas\:FiltrosBarra}
{\xe \v FiltrosBarra\:indiceBarrasEscolhidas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FiltrosBarra::indiceBarrasEscolhidas{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o indice das barras escolhidas em um QStringList. Caso seja escolhido o metodo de intervalo ser\'E3o 2 valores separados por tra\'E7o e caso sejam as individuais, separados por virgula. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable \par
}}
{\xe \v tensaoEficaz\:FiltrosBarra}
{\xe \v FiltrosBarra\:tensaoEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::tensaoEficaz = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da tens\'E3o eficaz dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::tensaoEficaz} \par
}}
{\xe \v tensaoNominal\:FiltrosBarra}
{\xe \v FiltrosBarra\:tensaoNominal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::tensaoNominal = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da tens\'E3o nominal dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::tensaoNominal} \par
}}
{\xe \v tensaoPu\:FiltrosBarra}
{\xe \v FiltrosBarra\:tensaoPu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::tensaoPu = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da tens\'E3o na {\b Barra} pu dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::tensaoPu} \par
}}
{\xe \v thdv\:FiltrosBarra}
{\xe \v FiltrosBarra\:thdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::thdv = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do thdv dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::thdv} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b filtrosbarra.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b filtrosbarra.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FrameBarras Class Reference\par \pard\plain 
{\tc\tcl2 \v FrameBarras}
{\xe \v FrameBarras}
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pelo armazenamento dos dados em nos atributos da classes {\b Barra} e {\b Linha}. Al\'E9m de etregar ao us\'FAario uma TabWidget amig\'E1vel, para que possa filtrar os dados que quiser para realizar sua an\'E1lise. @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar. }}\par
{
{\f2 #include <framebarras.h>}}\par
Inheritance diagram for FrameBarras:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_frame_barras.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b verificaAvanco} ()\par
}
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::FrameBarras\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b FrameBarras}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mw} \cell }{(Par\'E3metro do tipo Ui::MainWindow para permitir acesso aos componentes da interface do frame {\b MainWindow}) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ft} \cell }{(Par\'E3metro do tipo Ui::FrameTensoes para permitir acesso aos componentes da interface do frame {\b FrameTensoes}) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FrameBarras} (QWidget *parent=nullptr, Ui::MainWindow *mw=nullptr, Ui::FrameTensoes *ft=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::~FrameBarras\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b FrameBarras} \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FrameBarras} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::buscaIndiceHarmMax\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por buscar o indice harm\'F4nico maximo a ser estudado no sistema e devolver esse valor a uma v\'E1riavel\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
um inteiro que representa o indice harmonico maximo \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b buscaIndiceHarmMax} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::buscaQtdHarm\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por c\'E1lcular a quantidade de componentes harm\'F4nicas escolhidas para serem an\'E1lisadas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i indiceHarmMax} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
um inteiro que representa a quantidade de componentes harm\'F4nicas as serem an\'E1lisadas \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b buscaQtdHarm} (int)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::preencheFrameBarras\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar a chamada de m\'E9todos que s\'E3o respons\'E1veis por inserir o Qss do frame e preencher as tabelas com as informa\'E7\'F5es das barras e das linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheFrameBarras} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::inicializaVariaveisStatic\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por iniciar as variaveis est\'E1ticas : indiceHarmMax,quantidadeDeComponentesHarm e numeroDeLinhas.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaVariaveisStatic} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::inicializaFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primeiro m\'E9todo a ser chamada no construtor, respons\'E1vel por chamar os m\'E9todos subsequ\'EAntes que modelam a Interface do frame.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaFrame} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::cabecalhoBarras\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por criar um QStringList com o cabe\'E7aho para as barras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
QStringList do cabe\'E7alho das linhas \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QStringList {\b cabecalhoBarras} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::cabecalhoLinhas\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por criar um QStringList com o cabe\'E7aho para as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
QStringList do cabe\'E7alho das linhas \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QStringList {\b cabecalhoLinhas} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::preencheBarra\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preencher o QList<Barra> com as informa\'E7\'F5es de todas as barras do sistema\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheBarra} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::inicializaBarra\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inicializar todo o QList<Barra> com o tamanho do numero de Barras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaBarra} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::linhasDoSistema\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Preenche um QStringList com as linhas do sistema no no padr\'E3o (... , origem -> destino, ...)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
QStringList gerado na fun\'E7\'E3o \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QStringList {\b linhasDoSistema} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereQssBtnAvancar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o avan\'E7ar\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnAvancar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereQssBtnVoltar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o voltar\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnVoltar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereQssTabWidget\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no tabWidget\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssTabWidget} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereQssTableBarras\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no TableBarras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssTableBarras} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereQssTableLinhas\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no TableLinhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssTableLinhas} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereQssFrameBarras\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar m\'E9todos que inserem Qss nos componentes do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssFrameBarras} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::preencheTabelaBarra\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preencher a tabela que mostra as informa\'E7\'F5s das barras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheTabelaBarra} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::preencheTabelaLinha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preencher a tabela que mostra as informa\'E7\'F5s das linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheTabelaLinha} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::preencheLimites\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preencher o map est\'E1tico com os limites para cada n\'EDvel de tens\'E3o e n\'EDveis harm\'F4nicos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheLimites} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereQSSBtnFiltrar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o filtrar\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQSSBtnFiltrar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::preencheLinha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preencher o QList<Linha> com as informa\'E7\'F5es de todas as linhas do sistema\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheLinha} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::inicializaLinha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inicializar todo o QList<Linha> com o tamanho do numero de linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaLinha} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereBackgroundNasPoluidoras\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Background nos itens que possuem as barras poluidoras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereBackgroundNasPoluidoras} ()\par
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::map< int, std::map< int, double > > {\b getLimitesDti} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b setLimitesDti} (int nivelTensao, int harmonica, double limite)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexTab} = 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica em qual index do TabWidget o us\'FAario est\'E1. 0 para barras e 1 para linhas. Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indiceHarmMax}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
V\'E1riavel est\'E1tica respons\'E1vel por armazenar o \'EDndice harm\'F4nico m\'E1ximo a ser an\'E1lisado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b numeroDeLinhas}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o n\'FAmero de linhas do sistema. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b quantidadeDeComponentesHarm}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
V\'E1riavel est\'E1tica respons\'E1vel por armazenar a quantidade de componentes harm\'F4nicas a serem an\'E1lisadas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QList< {\b Barra} > {\b barras} = QList<{\b Barra}>()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QList est\'E1tico do tipo '{\b Barra}', respons\'E1vel por armazenar todas as barras do sistema,seus atributos e m\'E9todos. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QList< {\b Linha} > {\b linhas} = QList<{\b Linha}>()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QList est\'E1tico do tipo '{\b Linha}', respons\'E1vel por armazenar todas as linhas do sistema,seus atributos e m\'E9todos. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b filtroLinhaInserido}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b filtroBarraInserido}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
FrameBarras::potencia\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por calcular pot\'EAncia matem\'E1tica\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i base} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i expoente} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
um double representando o valor da pot\'EAncia calculada \par
}}}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b potencia} (double, int)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pelo armazenamento dos dados em nos atributos da classes {\b Barra} e {\b Linha}. Al\'E9m de etregar ao us\'FAario uma TabWidget amig\'E1vel, para que possa filtrar os dados que quiser para realizar sua an\'E1lise. @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FrameBarras\:FrameBarras}
{\xe \v FrameBarras\:FrameBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameBarras::FrameBarras (QWidget *  {\i parent} = {\f2 nullptr}, Ui::MainWindow *  {\i mw} = {\f2 nullptr}, Ui::FrameTensoes *  {\i ft} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 90                                                                             :\par
91     QFrame(parent),\par
92     ui({\cf17 new} Ui::FrameBarras)\par
93 \{\par
94     ui->setupUi({\cf17 this});\par
95 \par
96     inicializaFrame();\par
97     frameT = ft;\par
98     frameM = mw;\par
99     p = parent;\par
100 \}\par
}
}
{\xe \v ~FrameBarras\:FrameBarras}
{\xe \v FrameBarras\:~FrameBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameBarras::~FrameBarras ()}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 107 \{\par
108     {\cf17 delete} ui;\par
109 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v buscaIndiceHarmMax\:FrameBarras}
{\xe \v FrameBarras\:buscaIndiceHarmMax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::buscaIndiceHarmMax ()}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 138                                     \{\par
139     {\cf18 int} indiceHarm = 0;\par
140 \par
141     {\cf19 if} (!MainWindow::arquivoVsoln->open(QFile::ReadOnly | QFile::Text)) \{\par
142         {\cf19 if} (MainWindow::arquivoVsoln->error() == QFile::OpenError) \{\par
143             {\cf19 return} 0;\par
144         \}\par
145         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, {\cf22 "Erro ao abrir arquivo"});\par
146         {\cf19 return} 0;\par
147     \}\par
148 \par
149     {\cf19 while} (!MainWindow::arquivoVsoln->atEnd()) \{\par
150         QString line = MainWindow::arquivoVsoln->readLine();\par
151         QStringList indice = line.split({\cf22 ","});\par
152         {\cf18 bool} ok = {\cf17 false};\par
153         {\cf18 int} valorInt = indice.at(0).trimmed().toInt(&ok, 10);\par
154         {\cf19 if} (ok && valorInt > indiceHarm) \{\par
155             indiceHarm = valorInt;\par
156         \}\par
157     \}\par
158 \par
159     MainWindow::arquivoVsoln->close();\par
160     {\cf19 return} indiceHarm;\par
161 \}\par
}
}
{\xe \v buscaQtdHarm\:FrameBarras}
{\xe \v FrameBarras\:buscaQtdHarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::buscaQtdHarm (int  {\i indiceHarmMax}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 169                                                      \{\par
170     {\cf19 return} (indiceHarmMax/2) > 1 ? indiceHarmMax/2 : 0;\par
171 \}\par
}
}
{\xe \v cabecalhoBarras\:FrameBarras}
{\xe \v FrameBarras\:cabecalhoBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FrameBarras::cabecalhoBarras ()}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 387                                         \{\par
388     QStringList cabecalhos=\{{\cf22 "Tens\'E3o na Barra[pu]"},{\cf22 "Tens\'E3o Nominal[Kv]"},{\cf22 "TDHV[%]"}\};\par
389                                {\cf19 for}({\cf18 int} i = 0 , j = 3; i < quantidadeDeComponentesHarm ; i++ , j+=2)\{\par
390                                                                                                     QString item = {\cf22 "DIT"}+QString::number(j);\par
391     cabecalhos.push_back(item);\par
392 \}\par
393 {\cf19 for}({\cf18 int} i = 0 , j = 3; i < quantidadeDeComponentesHarm ; i++ , j+=2)\{\par
394     QString item = {\cf22 "DIT"}+QString::number(j)+{\cf22 "[%]"};\par
395     cabecalhos.push_back(item);\par
396 \}\par
397 cabecalhos.push_back({\cf22 "Tens\'E3o Eficaz[pu]"});\par
398 \par
399     {\cf19 return} cabecalhos;\par
400 \}\par
}
}
{\xe \v cabecalhoLinhas\:FrameBarras}
{\xe \v FrameBarras\:cabecalhoLinhas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FrameBarras::cabecalhoLinhas ()}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 430                                         \{\par
431 \par
432     QStringList cabecalhos=\{{\cf22 "Corrente na Linha[pu]"},{\cf22 "DHT[%]"}\};\par
433     {\cf19 for}({\cf18 int} i = 0 , j = 3; i < quantidadeDeComponentesHarm ; i++ , j+=2)\{\par
434         QString item = {\cf22 "DHI"}+QString::number(j);\par
435         cabecalhos.push_back(item);\par
436     \}\par
437     {\cf19 for}({\cf18 int} i = 0 , j = 3; i < quantidadeDeComponentesHarm ; i++ , j+=2)\{\par
438         QString item = {\cf22 "DHI"}+QString::number(j)+{\cf22 "[%]"};\par
439         cabecalhos.push_back(item);\par
440     \}\par
441     cabecalhos.push_back({\cf22 "Corrente Eficaz[pu]"});\par
442     cabecalhos.push_back({\cf22 "Resistencia[ohm]"});\par
443     cabecalhos.push_back({\cf22 "Perdas[pu]"});\par
444     cabecalhos.push_back({\cf22 "Perdas eficaz[pu]"});\par
445 \par
446     {\cf19 return} cabecalhos;\par
447 \}\par
}
}
{\xe \v getLimitesDti\:FrameBarras}
{\xe \v FrameBarras\:getLimitesDti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::map< int, std::map< int, double > > FrameBarras::getLimitesDti (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58                                                               \{\par
59         {\cf19 return} limitesDti;\par
60     \}\par
}
}
{\xe \v inicializaBarra\:FrameBarras}
{\xe \v FrameBarras\:inicializaBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::inicializaBarra ()}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 454                                   \{\par
455     barras.resize(FrameTensoes::numeroDeBarras, Barra());\par
456 \}\par
}
}
{\xe \v inicializaFrame\:FrameBarras}
{\xe \v FrameBarras\:inicializaFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::inicializaFrame ()}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                  \{\par
117     inicializaVariaveisStatic();\par
118     preencheLimites();\par
119     preencheFrameBarras();\par
120 \}\par
}
}
{\xe \v inicializaLinha\:FrameBarras}
{\xe \v FrameBarras\:inicializaLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::inicializaLinha ()}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 620                                   \{\par
621     linhas.resize(numeroDeLinhas, Linha());\par
622 \}\par
}
}
{\xe \v inicializaVariaveisStatic\:FrameBarras}
{\xe \v FrameBarras\:inicializaVariaveisStatic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::inicializaVariaveisStatic ()}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 127                                            \{\par
128     indiceHarmMax = buscaIndiceHarmMax() ;\par
129     quantidadeDeComponentesHarm = buscaQtdHarm(indiceHarmMax);\par
130     numeroDeLinhas = linhasDoSistema().size();\par
131 \}\par
}
}
{\xe \v insereBackgroundNasPoluidoras\:FrameBarras}
{\xe \v FrameBarras\:insereBackgroundNasPoluidoras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereBackgroundNasPoluidoras ()}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 794                                                \{\par
795     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
796         {\cf19 if}(barras[i].getBarraInfectadaThdv())\{\par
797             ui->tableBarras->item(2,i)->setBackground( QColor(255, 128, 128));\par
798         \}\par
799         {\cf18 int} pos =3;\par
800         {\cf19 for}({\cf18 int} j = 3 ; j <= indiceHarmMax ; j+=2)\{\par
801             {\cf19 if}(barras[i].getDti().find(j)->second.second.second)\{\par
802                 ui->tableBarras->item(pos,i)->setBackground( QColor(255, 128, 128));\par
803             \}\par
804             pos++;\par
805         \}\par
806         {\cf19 for}({\cf18 int} j = 3 ; j <= indiceHarmMax ; j+=2)\{\par
807             {\cf19 if}(barras[i].getDti().find(j)->second.second.second)\{\par
808                 ui->tableBarras->item(pos,i)->setBackground( QColor(255, 128, 128));\par
809             \}\par
810             pos++;\par
811         \}\par
812     \}\par
813 \}\par
}
}
{\xe \v insereQssBtnAvancar\:FrameBarras}
{\xe \v FrameBarras\:insereQssBtnAvancar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssBtnAvancar ()}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 319                                      \{\par
320     Style style;\par
321     ui->btnAvancar->setStyleSheet(style.cssBtnTransition);\par
322     ui->btnAvancar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/proximo.png"})); {\cf20 //insere um icon ao bot\'E3o}\par
323     ui->btnAvancar->setLayoutDirection(Qt::RightToLeft); {\cf20 //define que o icon ser\'E1 colocado ap\'F3s o texto}\par
324 \}\par
}
}
{\xe \v insereQSSBtnFiltrar\:FrameBarras}
{\xe \v FrameBarras\:insereQSSBtnFiltrar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQSSBtnFiltrar ()}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 342                                      \{\par
343     Style style;\par
344     ui->btnFiltrar->setStyleSheet(style.cssBtn);\par
345     ui->btnFiltrar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/filtro.png"}));\par
346 \}\par
}
}
{\xe \v insereQssBtnVoltar\:FrameBarras}
{\xe \v FrameBarras\:insereQssBtnVoltar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssBtnVoltar ()}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 331                                     \{\par
332     Style style;\par
333     ui->btnVoltar->setStyleSheet(style.cssBtn);\par
334     ui->btnVoltar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/anterior.png"}));\par
335 \}\par
}
}
{\xe \v insereQssFrameBarras\:FrameBarras}
{\xe \v FrameBarras\:insereQssFrameBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssFrameBarras ()}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 305                                       \{\par
306     insereQssBtnAvancar();\par
307     insereQssBtnVoltar();\par
308     insereQSSBtnFiltrar();\par
309     insereQssTabWidget();\par
310     insereQssTableBarras();\par
311     insereQssTableLinhas();\par
312 \}\par
}
}
{\xe \v insereQssTableBarras\:FrameBarras}
{\xe \v FrameBarras\:insereQssTableBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssTableBarras ()}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 363                                       \{\par
364     Style style;\par
365     {\cf20 //Inserindo cabe\'E7alho vertical na priemira coluna}\par
366     ui->tableBarras->setRowCount(3 + 2*quantidadeDeComponentesHarm + 1);\par
367     ui->tableBarras->setColumnCount(FrameTensoes::numeroDeBarras);\par
368     ui->tableBarras->setVerticalHeaderLabels(cabecalhoBarras());\par
369     ui->tableBarras->setStyleSheet(style.cssTabelaBarras); {\cf20 //insere QSS na tabela}\par
370     ui->tableBarras->verticalHeader()->setStyleSheet(style.cssHeaderTabela);\par
371     ui->tableBarras->verticalHeader()->setLineWidth(1);\par
372     {\cf20 //insere um numero de linhas \'E0 tabela correspondente ao numero de Barras}\par
373     ui->tableBarras->horizontalHeader()->setVisible({\cf17 true});\par
374     ui->tableBarras->setAlternatingRowColors({\cf17 true}); {\cf20 //aplica anternacia de cores na tabela}\par
375     ui->tableBarras->verticalHeader()->setDefaultSectionSize(30);\par
376     {\cf19 for}({\cf18 int} i = 0 ; i < (3 + 2*quantidadeDeComponentesHarm + 1) ; i++)\{\par
377         ui->tableBarras->setRowHeight(i, 31);\par
378     \}\par
379     ui->tableBarras->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOn);\par
380 \}\par
}
}
{\xe \v insereQssTableLinhas\:FrameBarras}
{\xe \v FrameBarras\:insereQssTableLinhas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssTableLinhas ()}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 407                                       \{\par
408     Style style;\par
409     ui->tableLinhas->setRowCount(2 + 2*quantidadeDeComponentesHarm + 4);\par
410     ui->tableLinhas->setColumnCount(numeroDeLinhas);\par
411     ui->tableLinhas->setVerticalHeaderLabels(cabecalhoLinhas());\par
412     ui->tableLinhas->setStyleSheet(style.cssTabelaBarras); {\cf20 //insere QSS na tabela}\par
413     ui->tableLinhas->verticalHeader()->setStyleSheet(style.cssHeaderTabela);\par
414     ui->tableLinhas->verticalHeader()->setLineWidth(1);\par
415     ui->tableLinhas->horizontalHeader()->setVisible({\cf17 true});\par
416     ui->tableLinhas->setAlternatingRowColors({\cf17 true}); {\cf20 //aplica anternacia de cores na tabela}\par
417     ui->tableLinhas->verticalHeader()->setDefaultSectionSize(30);\par
418     {\cf19 for}({\cf18 int} i = 0 ; i < (2 + 2*quantidadeDeComponentesHarm + 4) ; i++)\{\par
419         ui->tableLinhas->setRowHeight(i, 31);\par
420     \}\par
421     ui->tableBarras->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOn);\par
422     ui->tableLinhas->setHorizontalHeaderLabels(linhasDoSistema());\par
423 \}\par
}
}
{\xe \v insereQssTabWidget\:FrameBarras}
{\xe \v FrameBarras\:insereQssTabWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssTabWidget ()}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 353                                     \{\par
354     Style style;\par
355     ui->tabLinhas->setStyleSheet(style.cssTabWidget);\par
356 \}\par
}
}
{\xe \v linhasDoSistema\:FrameBarras}
{\xe \v FrameBarras\:linhasDoSistema}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FrameBarras::linhasDoSistema ()}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 178                                         \{\par
179     {\cf18 int} origem;\par
180     {\cf18 int} destino;\par
181     QStringList linhas;\par
182     {\cf19 if}(!MainWindow::arquivoThdi->open(QFile::ReadOnly|QFile::Text))\{\par
183         {\cf19 if}(MainWindow::arquivoThdi->error() == QFile::OpenError)\{\par
184             {\cf19 return} QStringList();\par
185         \}\par
186         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
187         {\cf19 return} QStringList();\par
188     \}\par
189 \par
190     {\cf19 for}({\cf18 int} i = 0 ; i < 2 ; i++)\{\par
191         MainWindow::arquivoThdi->readLine();\par
192     \}\par
193 \par
194     {\cf19 while}(!MainWindow::arquivoThdi->atEnd())\{\par
195         QString line = MainWindow::arquivoThdi->readLine();\par
196         QStringList indice = line.split({\cf22 ","});\par
197         origem = indice.at(0).trimmed().toInt();\par
198         destino = indice.at(2).trimmed().toInt();\par
199         {\cf19 if}(origem < destino)\{\par
200             QString item = QString::number(origem) +{\cf22 " -> "}+QString::number(destino);\par
201             linhas.push_back(item);\par
202         \}\par
203     \}\par
204     MainWindow::arquivoThdi->close();\par
205     {\cf19 return} linhas;\par
206 \}\par
}
}
{\xe \v potencia\:FrameBarras}
{\xe \v FrameBarras\:potencia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double FrameBarras::potencia (double  {\i base}, int  {\i expoente}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 822                                                              \{\par
823     {\cf19 return} (expoente==0) ? 1 : (expoente == 1) ? base : base*potencia(base,expoente-1);\par
824 \}\par
}
}
{\xe \v preencheBarra\:FrameBarras}
{\xe \v FrameBarras\:preencheBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheBarra ()}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 463                                \{\par
464 \par
465     {\cf20 //O arquivo thdv possui uma linha de informa~\'E7\'E3o para cada barra -- por isso foi selecionado}\par
466     {\cf20 //realiza o procedimento de abertura do arquivo e alerta caso aconte\'E7a algum erro -- Conforme explicado no mainwindow.cpp}\par
467     {\cf19 if}(!MainWindow::arquivoThdv->open(QFile::ReadOnly|QFile::Text))\{\par
468         {\cf19 if}(MainWindow::arquivoThdv->error() == QFile::OpenError)\{\par
469             return ;\par
470         \}\par
471         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
472         return ;\par
473     \}\par
474 \par
475     {\cf19 for} ({\cf18 int} i = 0; i < 2; i++) \{\par
476         MainWindow::arquivoThdv->readLine();\par
477     \}\par
478 \par
479     {\cf19 for} ({\cf18 int} i = 0; i < FrameTensoes::numeroDeBarras; i++) \{\par
480         QString line = MainWindow::arquivoThdv->readLine();\par
481         QStringList indice = line.split({\cf22 ","});\par
482         {\cf18 bool} ok = {\cf17 false};\par
483         {\cf18 double} tensaoPu = indice.at(2).trimmed().toDouble(&ok);\par
484         {\cf19 if} (ok) \{\par
485             barras[i].setTensaoPu(tensaoPu);\par
486         \}\par
487         ok = {\cf17 false};\par
488         {\cf18 double} thdv = indice.at(3).trimmed().toDouble(&ok);\par
489         {\cf19 if} (ok) \{\par
490             barras[i].setThdvPercent(thdv);\par
491         \}\par
492         {\cf18 double} tensaoNominal = FrameTensoes::tensoesNominais[i];\par
493         barras[i].setTensaoNominalKv(tensaoNominal);\par
494 \par
495         {\cf18 int} classeTensaoThdv;\par
496         {\cf19 if} (tensaoNominal <= 1) \{\par
497             classeTensaoThdv = 1;\par
498         \} {\cf19 else} {\cf19 if} (tensaoNominal < 69) \{\par
499             classeTensaoThdv = 2;\par
500         \} {\cf19 else} \{\par
501             classeTensaoThdv = 3;\par
502         \}\par
503 \par
504         {\cf18 bool} barraInfectadaThdv = {\cf17 false};\par
505         {\cf19 switch} (classeTensaoThdv) \{\par
506         {\cf19 case} 1:\par
507             barraInfectadaThdv = (barras[i].getThdvPercent() > 10);\par
508             {\cf19 break};\par
509         {\cf19 case} 2:\par
510             barraInfectadaThdv = (barras[i].getThdvPercent() > 8);\par
511             {\cf19 break};\par
512         {\cf19 case} 3:\par
513             barraInfectadaThdv = (barras[i].getThdvPercent() > 5);\par
514             {\cf19 break};\par
515         \}\par
516         barras[i].setbarraInfectadaThdv(barraInfectadaThdv);\par
517 \par
518         {\cf18 double} tensaoEficaz = tensaoPu * sqrt(1 + pow((thdv / 100), 2));\par
519         barras[i].setTensaoEficaz(tensaoEficaz);\par
520     \}\par
521     MainWindow::arquivoThdv->close();\par
522 \par
523     {\cf19 if}(!MainWindow::arquivoVsoln->open(QFile::ReadOnly|QFile::Text))\{\par
524         {\cf19 if}(MainWindow::arquivoVsoln->error() == QFile::OpenError)\{\par
525             return  ;\par
526         \}\par
527         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
528         return  ;\par
529     \}\par
530 \par
531     {\cf19 for}({\cf18 int} i = 0 ; i < 4 ; i++)\{\par
532         MainWindow::arquivoVsoln->readLine();\par
533     \}\par
534 \par
535     {\cf18 int} numBarra;\par
536     {\cf18 int} numHarm;\par
537     {\cf18 double} magHarm;\par
538     {\cf18 double} percentHarm;\par
539     {\cf18 int} classeTensaoThdi;\par
540     std::setlocale(LC_ALL,{\cf22 ""});\par
541     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras*(quantidadeDeComponentesHarm+1) ; i++)\{\par
542         QString line = MainWindow::arquivoVsoln->readLine();\par
543         QStringList indice = line.split({\cf22 ","});\par
544 \par
545         numBarra = indice.at(1).trimmed().toInt()-1;\par
546         numHarm = indice.at(0).trimmed().toInt();\par
547         magHarm = indice.at(2).trimmed().toDouble();\par
548         percentHarm = 100*magHarm/(barras[numBarra].getTensaoPu());\par
549 \par
550         {\cf19 if}(barras[numBarra].getTensaoNominalKv() <= 1 )\{\par
551             classeTensaoThdi = 1;\par
552         \}{\cf19 else} {\cf19 if}(barras[numBarra].getTensaoNominalKv() > 1 && barras[numBarra].getTensaoNominalKv() <= 13.8)\{\par
553             classeTensaoThdi = 2;\par
554         \}{\cf19 else} {\cf19 if}(barras[numBarra].getTensaoNominalKv() > 13.8 && barras[numBarra].getTensaoNominalKv() <= 69)\{\par
555             classeTensaoThdi = 3;\par
556         \}{\cf19 else}\{\par
557             classeTensaoThdi = 4;\par
558         \}\par
559 \par
560 \par
561         {\cf19 if}(indice.at(0).trimmed().toInt()!=1)\{\par
562 \par
563             {\cf19 if}(numHarm > 25 && numHarm%3==0)\{\par
564                 {\cf19 if}(percentHarm > limitesDti[classeTensaoThdi][997])\{\par
565                     barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 true});\par
566                 \}{\cf19 else}\{\par
567                     barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 false});\par
568                 \}\par
569             \}{\cf19 else} {\cf19 if}(numHarm > 25 && numHarm%3!=0)\{\par
570                 {\cf19 if}(percentHarm > limitesDti[classeTensaoThdi][998])\{\par
571                     barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 true});\par
572                 \}{\cf19 else}\{\par
573                     barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 false});\par
574                 \}\par
575             \}{\cf19 else}\{\par
576                 {\cf19 if}(percentHarm > limitesDti[classeTensaoThdi][numHarm])\{\par
577                     barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 true});\par
578                 \}{\cf19 else}\{\par
579                     barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 false});\par
580                 \}\par
581             \}\par
582         \}\par
583     \}\par
584 \par
585     MainWindow::arquivoVsoln->close();\par
586 \}\par
}
}
{\xe \v preencheFrameBarras\:FrameBarras}
{\xe \v FrameBarras\:preencheFrameBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheFrameBarras ()}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 289                                      \{\par
290     insereQssFrameBarras();\par
291     inicializaBarra();\par
292     preencheBarra();\par
293     preencheTabelaBarra();\par
294     inicializaLinha();\par
295     preencheLinha();\par
296     preencheTabelaLinha();\par
297     insereBackgroundNasPoluidoras();\par
298 \}\par
}
}
{\xe \v preencheLimites\:FrameBarras}
{\xe \v FrameBarras\:preencheLimites}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheLimites ()}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 213                                  \{\par
214 \par
215     {\cf20 /*}\par
216 {\cf20      * 1 equivale a (Tensao Nominal <= 1kV)}\par
217 {\cf20      * 2 equivale a (Tensao Nominal > 1 kv && Tensao Nonimal <= 13.8 kV)}\par
218 {\cf20      * 3 equivale a (Tensao Nominal > 13.8 kV && Tensao Nominal <= 69kV)}\par
219 {\cf20      * 4 equivale a (Tensao Nominal > 69kV)}\par
220 {\cf20     */}\par
221 \par
222     limitesDti[1][3] = 6.5;\par
223     limitesDti[1][5] = 7.5;\par
224     limitesDti[1][7] = 6.5;\par
225     limitesDti[1][9] = 2;\par
226     limitesDti[1][11] = 4.5;\par
227     limitesDti[1][13] = 4;\par
228     limitesDti[1][15] = 1;\par
229     limitesDti[1][17] = 2.5;\par
230     limitesDti[1][19] = 2;\par
231     limitesDti[1][21] = 1;\par
232     limitesDti[1][23] = 2;\par
233     limitesDti[1][25] = 2;\par
234     limitesDti[1][997] = 1.5; {\cf20 // impar nao multplica de 3}\par
235     limitesDti[1][998] = 1; {\cf20 // impar multipla de 3}\par
236 \par
237     limitesDti[2][3] = 5;\par
238     limitesDti[2][5] = 6;\par
239     limitesDti[2][7] = 5;\par
240     limitesDti[2][9] = 1.5;\par
241     limitesDti[2][11] = 3.5;\par
242     limitesDti[2][13] = 3;\par
243     limitesDti[2][15] = 0.5;\par
244     limitesDti[2][17] = 2;\par
245     limitesDti[2][19] = 1.5;\par
246     limitesDti[2][21] = 0.5;\par
247     limitesDti[2][23] = 1.5;\par
248     limitesDti[2][25] = 2;\par
249     limitesDti[1][997] = 1.5; {\cf20 // impar nao multplica de 3 maior q 25}\par
250     limitesDti[1][998] = 1; {\cf20 // impar multipla de 3 maior q 21}\par
251 \par
252 \par
253     limitesDti[3][3] = 1;\par
254     limitesDti[3][5] = 4.5;\par
255     limitesDti[3][7] = 4;\par
256     limitesDti[3][9] = 1.5;\par
257     limitesDti[3][11] = 3;\par
258     limitesDti[3][13] = 2.5;\par
259     limitesDti[3][15] = 0.5;\par
260     limitesDti[3][17] = 1.5;\par
261     limitesDti[3][19] = 1.5;\par
262     limitesDti[3][21] = 0.5;\par
263     limitesDti[3][23] = 1.5;\par
264     limitesDti[3][25] = 1.5;\par
265     limitesDti[3][997] = 1.5; {\cf20 // impar nao multplica de 3 maior q 25}\par
266     limitesDti[3][998] = 0.5; {\cf20 // impar multipla de 3 maior q 21}\par
267 \par
268     limitesDti[4][3] = 0.5;\par
269     limitesDti[4][5] = 2.5;\par
270     limitesDti[4][7] = 2;\par
271     limitesDti[4][9] = 1;\par
272     limitesDti[4][11] = 1.5;\par
273     limitesDti[4][13] = 1.5;\par
274     limitesDti[4][15] = 0.5;\par
275     limitesDti[4][17] = 1;\par
276     limitesDti[4][19] = 1;\par
277     limitesDti[4][21] = 0.5;\par
278     limitesDti[4][23] = 1;\par
279     limitesDti[4][25] = 1;\par
280     limitesDti[4][997] = 0.5; {\cf20 // impar nao multplica de 3 maior q 25}\par
281     limitesDti[4][998] = 0.5; {\cf20 // impar multipla de 3 maior q 21}\par
282 \}\par
}
}
{\xe \v preencheLinha\:FrameBarras}
{\xe \v FrameBarras\:preencheLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheLinha ()}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 630 \{\par
631     {\cf19 if} (!MainWindow::arquivoThdi->open(QFile::ReadOnly | QFile::Text)) \{\par
632         {\cf19 if} (MainWindow::arquivoThdi->error() == QFile::OpenError) \{\par
633             {\cf19 return};\par
634         \}\par
635         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, {\cf22 "Erro ao abrir arquivo"});\par
636         {\cf19 return};\par
637     \}\par
638 \par
639     {\cf19 for} ({\cf18 int} i = 0; i < 2; i++) \{\par
640         MainWindow::arquivoThdi->readLine();\par
641     \}\par
642 \par
643     {\cf18 int} origem, destino;\par
644     {\cf18 double} corrente, dht;\par
645     {\cf18 int} cont = 0;\par
646     {\cf18 double} correnteEficaz;\par
647 \par
648     {\cf19 while} (!MainWindow::arquivoThdi->atEnd()) \{\par
649         QString line = MainWindow::arquivoThdi->readLine();\par
650         QStringList indice = line.split({\cf22 ","});\par
651         origem = indice.at(0).trimmed().toInt();\par
652         destino = indice.at(2).trimmed().toInt();\par
653         corrente = indice.at(5).trimmed().toDouble();\par
654         dht = indice.at(6).trimmed().toDouble();\par
655         correnteEficaz = corrente * sqrt(1 + pow((dht / 100), 2));\par
656 \par
657         {\cf19 if} (origem < destino) \{\par
658             linhas[cont].setOrigem(origem);\par
659             linhas[cont].setDestino(destino);\par
660             linhas[cont].setCorrente(corrente);\par
661             linhas[cont].setDhtPercent(dht);\par
662             linhas[cont].setCorrenteEficaz(correnteEficaz);\par
663             cont++;\par
664         \}\par
665     \}\par
666 \par
667     MainWindow::arquivoThdi->close();\par
668 \par
669     {\cf20 // ...}\par
670 \par
671     {\cf19 if} (!MainWindow::arquivoIsoln->open(QFile::ReadOnly | QFile::Text)) \{\par
672         {\cf19 if} (MainWindow::arquivoIsoln->error() == QFile::OpenError) \{\par
673             {\cf19 return};\par
674         \}\par
675         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, {\cf22 "Erro ao abrir arquivo"});\par
676         {\cf19 return};\par
677     \}\par
678 \par
679     {\cf19 for} ({\cf18 int} i = 0; i < 4; i++) \{\par
680         MainWindow::arquivoIsoln->readLine();\par
681     \}\par
682 \par
683     {\cf18 int} numHarm;\par
684     {\cf18 double} magHarm;\par
685     {\cf18 double} percentHarm;\par
686 \par
687     {\cf19 for} ({\cf18 int} i = 0; i < quantidadeDeComponentesHarm; i++) \{\par
688         {\cf19 for} ({\cf18 int} j = 0; j < numeroDeLinhas;) \{\par
689             QString line = MainWindow::arquivoIsoln->readLine();\par
690             {\cf19 if} (line.trimmed().isEmpty()) \{\par
691                 {\cf19 break};\par
692             \}\par
693             QStringList indice = line.split({\cf22 ","});\par
694             numHarm = indice.at(0).trimmed().toInt();\par
695             origem = indice.at(1).trimmed().toInt();\par
696             destino = indice.at(2).trimmed().toInt();\par
697             magHarm = indice.at(4).trimmed().toDouble();\par
698             percentHarm = 100 * (magHarm / linhas[j].getCorrente());\par
699             {\cf19 if} (numHarm != 1 && origem < destino && origem != 0 && destino != 0) \{\par
700                 linhas[j].setDti(numHarm, magHarm, percentHarm);\par
701                 j++;\par
702             \}\par
703         \}\par
704     \}\par
705 \par
706     MainWindow::arquivoIsoln->close();\par
707 \par
708     {\cf19 if}(!MainWindow::arquivoLdat->open(QFile::ReadOnly|QFile::Text))\{\par
709         {\cf19 if}(MainWindow::arquivoLdat->error() == QFile::OpenError)\{\par
710             return  ;\par
711         \}\par
712         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
713         return  ;\par
714     \}\par
715 \par
716     {\cf19 for}({\cf18 int} i = 0 ; i < 9 ; i++)\{\par
717         MainWindow::arquivoLdat->readLine();\par
718     \}\par
719     {\cf18 double} resistencia;\par
720     {\cf18 double} perdas;\par
721     {\cf18 double} perdasEficaz;\par
722     {\cf19 for} ({\cf18 int} i = 0; i < numeroDeLinhas; i++) \{\par
723         QString line = MainWindow::arquivoLdat->readLine();\par
724         {\cf19 if} (line.trimmed().isEmpty()) \{ {\cf20 // verificar se \'E9 uma linha vazia}\par
725             {\cf19 break};\par
726         \}\par
727         QStringList indice = line.split({\cf22 ","});\par
728         origem = indice.at(0).trimmed().toInt();\par
729         destino = indice.at(1).trimmed().toInt();\par
730         {\cf19 if} (origem < destino) \{\par
731             resistencia = indice.at(3).trimmed().toDouble();\par
732 \par
733             {\cf19 for} ({\cf18 int} j = 0; j < numeroDeLinhas; j++) \{\par
734                 {\cf19 if} (linhas[j].getOrigem() == origem && linhas[j].getDestino() == destino) \{\par
735                     linhas[j].setResistencia(resistencia);\par
736                     perdas = linhas[j].getCorrente() * resistencia;\par
737                     perdasEficaz = linhas[j].getCorrenteEficaz() * resistencia;\par
738                     linhas[j].setPerdas(perdas);\par
739                     linhas[j].setPerdasEficaz(perdasEficaz);\par
740                 \}\par
741             \}\par
742         \}\par
743     \}\par
744 \par
745     MainWindow::arquivoLdat->close();\par
746     {\cf19 return};\par
747 \}\par
}
}
{\xe \v preencheTabelaBarra\:FrameBarras}
{\xe \v FrameBarras\:preencheTabelaBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheTabelaBarra ()}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 593                                       \{\par
594     {\cf19 for} ({\cf18 int} i = 0; i < FrameTensoes::numeroDeBarras; i++) \{\par
595         {\cf18 int} pos = 0;\par
596 \par
597         ui->tableBarras->setItem(pos++, i, {\cf17 new} QTableWidgetItem(QString::number(barras[i].getTensaoPu(), {\cf23 'f'}, 5)));\par
598         ui->tableBarras->setItem(pos++, i, {\cf17 new} QTableWidgetItem(QString::number(barras[i].getTensaoNominalKv(), {\cf23 'f'}, 5)));\par
599         ui->tableBarras->setItem(pos++, i, {\cf17 new} QTableWidgetItem(QString::number(barras[i].getThdvPercent(), {\cf23 'f'}, 5)));\par
600 \par
601         {\cf19 for} ({\cf18 int} j = 3; j <= indiceHarmMax; j += 2) \{\par
602             QTableWidgetItem* dtiAbsolut = {\cf17 new} QTableWidgetItem(QString::number(barras[i].getDti().find(j)->second.first.first, {\cf23 'e'}, 5));\par
603             ui->tableBarras->setItem(pos++, i, dtiAbsolut);\par
604         \}\par
605 \par
606         {\cf19 for} ({\cf18 int} j = 3; j <= indiceHarmMax; j += 2) \{\par
607             QTableWidgetItem* dtiRelative = {\cf17 new} QTableWidgetItem(QString::number(barras[i].getDti().find(j)->second.first.second, {\cf23 'f'}, 5));\par
608             ui->tableBarras->setItem(pos++, i, dtiRelative);\par
609         \}\par
610 \par
611         ui->tableBarras->setItem(pos, i, {\cf17 new} QTableWidgetItem(QString::number(barras[i].getTensaoEficaz(), {\cf23 'f'}, 5)));\par
612     \}\par
613 \}\par
}
}
{\xe \v preencheTabelaLinha\:FrameBarras}
{\xe \v FrameBarras\:preencheTabelaLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheTabelaLinha ()}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 754                                      \{\par
755     {\cf19 for}({\cf18 int} i = 0 ; i < numeroDeLinhas ; i++)\{\par
756         QTableWidgetItem* correntePu = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getCorrente(),{\cf23 'f'},5));\par
757         QTableWidgetItem* dht = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getDhtPercent(),{\cf23 'f'},5));\par
758         ui->tableLinhas->setItem(0,i,correntePu);\par
759         ui->tableLinhas->setItem(1,i,dht);\par
760         {\cf18 int} pos =2;\par
761         {\cf19 for}({\cf18 int} j = 3 ; j <= indiceHarmMax ; j+=2)\{\par
762             QTableWidgetItem* dtiAbsolut = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getDti().find(j)->second.first,{\cf23 'e'},5));\par
763             ui->tableLinhas->setItem(pos,i,dtiAbsolut);\par
764             pos++;\par
765         \}\par
766         {\cf19 for}({\cf18 int} j = 3 ; j <= indiceHarmMax ; j+=2)\{\par
767             QTableWidgetItem* dtiRelative = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5));\par
768             ui->tableLinhas->setItem(pos,i,dtiRelative);\par
769             pos++;\par
770         \}\par
771         QTableWidgetItem* correnteEficaz = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getCorrenteEficaz(),{\cf23 'f'},5));\par
772         ui->tableLinhas->setItem(pos,i,correnteEficaz);\par
773         pos++;\par
774 \par
775         QTableWidgetItem* resistencia = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getResistencia(),{\cf23 'f'},5));\par
776         ui->tableLinhas->setItem(pos,i,resistencia);\par
777         pos++;\par
778 \par
779         QTableWidgetItem* perdas = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getPerdas(),{\cf23 'f'},5));\par
780         ui->tableLinhas->setItem(pos,i,perdas);\par
781         pos++;\par
782 \par
783         QTableWidgetItem* perdasEficaz = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getPerdasEficaz(),{\cf23 'f'},5));\par
784         ui->tableLinhas->setItem(pos,i,perdasEficaz);\par
785         pos++;\par
786     \}\par
787 \}\par
}
}
{\xe \v setLimitesDti\:FrameBarras}
{\xe \v FrameBarras\:setLimitesDti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void FrameBarras::setLimitesDti (int  {\i nivelTensao}, int  {\i harmonica}, double  {\i limite}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                                                               \{\par
63         limitesDti[nivelTensao][harmonica] = limite;\par
64     \}\par
}
}
{\xe \v verificaAvanco\:FrameBarras}
{\xe \v FrameBarras\:verificaAvanco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::verificaAvanco ()}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v barras\:FrameBarras}
{\xe \v FrameBarras\:barras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b Barra} > FrameBarras::barras = QList<{\b Barra}>(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QList est\'E1tico do tipo '{\b Barra}', respons\'E1vel por armazenar todas as barras do sistema,seus atributos e m\'E9todos. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QList<Barra> {\b FrameBarras::barras} \par
}}
{\xe \v filtroBarraInserido\:FrameBarras}
{\xe \v FrameBarras\:filtroBarraInserido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FrameBarras::filtroBarraInserido{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v filtroLinhaInserido\:FrameBarras}
{\xe \v FrameBarras\:filtroLinhaInserido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FrameBarras::filtroLinhaInserido{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v indexTab\:FrameBarras}
{\xe \v FrameBarras\:indexTab}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::indexTab = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica em qual index do TabWidget o us\'FAario est\'E1. 0 para barras e 1 para linhas. Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FrameBarras::indexTab} \par
}}
{\xe \v indiceHarmMax\:FrameBarras}
{\xe \v FrameBarras\:indiceHarmMax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::indiceHarmMax{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
V\'E1riavel est\'E1tica respons\'E1vel por armazenar o \'EDndice harm\'F4nico m\'E1ximo a ser an\'E1lisado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FrameBarras::indiceHarmMax} \par
}}
{\xe \v linhas\:FrameBarras}
{\xe \v FrameBarras\:linhas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b Linha} > FrameBarras::linhas = QList<{\b Linha}>(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QList est\'E1tico do tipo '{\b Linha}', respons\'E1vel por armazenar todas as linhas do sistema,seus atributos e m\'E9todos. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QList<Linha> {\b FrameBarras::linhas} \par
}}
{\xe \v numeroDeLinhas\:FrameBarras}
{\xe \v FrameBarras\:numeroDeLinhas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::numeroDeLinhas{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o n\'FAmero de linhas do sistema. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FrameBarras::numeroDeLinhas} \par
}}
{\xe \v quantidadeDeComponentesHarm\:FrameBarras}
{\xe \v FrameBarras\:quantidadeDeComponentesHarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::quantidadeDeComponentesHarm{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
V\'E1riavel est\'E1tica respons\'E1vel por armazenar a quantidade de componentes harm\'F4nicas a serem an\'E1lisadas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FrameBarras::quantidadeDeComponentesHarm} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b framebarras.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b framebarras.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FrameExportar Class Reference\par \pard\plain 
{\tc\tcl2 \v FrameExportar}
{\xe \v FrameExportar}
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela exporta\'E7\'E3o dos dados em 3 formatos diferentes ( Pdf , Excel e .csv ) @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar. }}\par
{
{\f2 #include <frameexportar.h>}}\par
Inheritance diagram for FrameExportar:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_frame_exportar.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameExportar::FrameExportar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b FrameExportar}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mw} \cell }{(Par\'E3metro do tipo Ui::MainWindow para permitir acesso aos componentes da interface do frame {\b MainWindow}) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fb} \cell }{(Par\'E3metro do tipo Ui::FrameTensoes para permitir acesso aos componentes da interface do frame {\b FrameBarras}) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FrameExportar} (QWidget *parent=nullptr, Ui::MainWindow *mw=nullptr, Ui::FrameBarras *fb=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameExportar::~FrameExportar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b FrameExportar} \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FrameExportar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameExportar::inserirQssFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar m\'E9todos que inserem Qss nos componentes do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirQssFrame} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameExportar::inserirQssImg\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir um imagem ilustrativa no Frame e Qss nela.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirQssImg} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameExportar::inicializaFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primeiro m\'E9todo a ser chamada no construtor, respons\'E1vel por chamar os m\'E9todos subsequ\'EAntes que modelam a Interface do frame.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaFrame} ()\par
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
FrameExportar::inserirQssRadioButton\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos bot\'F5es exportar e voltar\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirQssRadioButton} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirQssBtn} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExportacaoParaPdf} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExportacaoParaExcel} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExportacaoParaCsv} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela exporta\'E7\'E3o dos dados em 3 formatos diferentes ( Pdf , Excel e .csv ) @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FrameExportar\:FrameExportar}
{\xe \v FrameExportar\:FrameExportar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameExportar::FrameExportar (QWidget *  {\i parent} = {\f2 nullptr}, Ui::MainWindow *  {\i mw} = {\f2 nullptr}, Ui::FrameBarras *  {\i fb} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50                                                                                  :\par
51     QFrame(parent),\par
52     ui({\cf17 new} Ui::FrameExportar)\par
53 \{\par
54     ui->setupUi({\cf17 this});\par
55 \par
56     frameMa = mw;\par
57     pa = parent;\par
58     frameB = fb;\par
59 \par
60 \par
61     inicializaFrame();\par
62 \par
63 \}\par
}
}
{\xe \v ~FrameExportar\:FrameExportar}
{\xe \v FrameExportar\:~FrameExportar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameExportar::~FrameExportar ()}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 70 \{\par
71     {\cf17 delete} ui;\par
72 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ExportacaoParaCsv\:FrameExportar}
{\xe \v FrameExportar\:ExportacaoParaCsv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExportacaoParaCsv ()}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 226                                      \{\par
227     ExportarCsv csv(pa);\par
228     {\cf19 if}(FiltrosBarra::indexComboBox == 0 )\{\par
229         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
230             csv.CsvInterBarrasTodL1TodL2();\par
231         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
232             csv.CsvInterBarrasInterL1TodL2();\par
233         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
234             csv.CsvInterBarrasTodL1InterL2();\par
235         \}{\cf19 else}\{\par
236             csv.CsvInterBarrasInterL1InterL2();\par
237         \}\par
238     \}{\cf19 else} {\cf19 if}(FiltrosBarra::indexComboBox == 1 )\{\par
239         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
240             csv.CsvCompBarrasaTodL1TodL2();\par
241         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
242             csv.CsvCompBarrasInterL1TodL2();\par
243         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
244             csv.CsvCompBarrasTodL1InterL2();\par
245         \}{\cf19 else}\{\par
246             csv.CsvCompBarrasInterL2InterL2();\par
247         \}\par
248     \}{\cf19 else}\{\par
249         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
250             csv.CsvInfecBarrasTodL1TodL2();\par
251         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
252             csv.CsvInfecBarrasInterL1TodL2();\par
253         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
254             csv.CsvInfecBarrasTodL1InterL2();\par
255         \}{\cf19 else}\{\par
256             csv.CsvInfecBarrasInterL1InterL2();\par
257         \}\par
258     \}\par
259 \}\par
}
}
{\xe \v ExportacaoParaExcel\:FrameExportar}
{\xe \v FrameExportar\:ExportacaoParaExcel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExportacaoParaExcel ()}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 192                                        \{\par
193     ExportarExcel excel(pa);\par
194     {\cf19 if}(FiltrosBarra::indexComboBox == 0 )\{\par
195         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
196             excel.ExcelInterBarrasTodL1TodL2();\par
197         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
198             excel.ExcelInterBInterL1TodL2();\par
199         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
200             excel.ExcelInterBarrasTodL1InterL2();\par
201         \}{\cf19 else}\{\par
202             excel.ExcelInterBInterL1InterL2();\par
203         \}\par
204     \}{\cf19 else} {\cf19 if}(FiltrosBarra::indexComboBox == 1 )\{\par
205         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
206             excel.ExcelCompBarrasaTodL1TodL2();\par
207         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
208             excel.ExcelCompBarrasInterL1TodL2();\par
209         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
210             excel.ExcelCompBarrasTodL1InterL2();\par
211         \}{\cf19 else}\{\par
212             excel.ExcelCompBarrasInterL2InterL2();\par
213         \}\par
214     \}{\cf19 else}\{\par
215         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
216             excel.ExcelInfecBarrasTodL1TodL2();\par
217         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
218             excel.ExcelInfecBarrasInterL1TodL2();\par
219         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
220             excel.ExcelInfecBarrasTodL1InterL2();\par
221         \}{\cf19 else}\{\par
222             excel.ExcelInfecBarrasInterL1InterL2();\par
223         \}\par
224     \}\par
225 \}\par
}
}
{\xe \v ExportacaoParaPdf\:FrameExportar}
{\xe \v FrameExportar\:ExportacaoParaPdf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExportacaoParaPdf ()}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 158                                      \{\par
159     ExportarPdf pdf(pa);\par
160     {\cf19 if}(FiltrosBarra::indexComboBox == 0 )\{\par
161         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
162             pdf.PdfInterBarrasTodL1TodL2();\par
163         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
164             pdf.PdfInterBInterL1TodL2();\par
165         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
166             pdf.PdfInterBarrasTodL1InterL2();\par
167         \}{\cf19 else}\{\par
168             pdf.PdfInterBInterL1InterL2();\par
169         \}\par
170     \}{\cf19 else} {\cf19 if}(FiltrosBarra::indexComboBox == 1 )\{\par
171         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
172             pdf.PdfCompBarrasaTodL1TodL2();\par
173         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
174             pdf.PdfCompBarrasInterL1TodL2();\par
175         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
176             pdf.PdfCompBarrasTodL1InterL2();\par
177         \}{\cf19 else}\{\par
178             pdf.PdfCompBarrasInterL1InterL2();\par
179         \}\par
180     \}{\cf19 else}\{\par
181         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
182             pdf.PdfInfecBarrasTodL1TodL2();\par
183         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
184             pdf.PdfInfecBarrasInterL1TodL2();\par
185         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
186             pdf.PdfInfecBarrasTodL1InterL2();\par
187         \}{\cf19 else}\{\par
188             pdf.PdfInfecBarrasInterL1InterL2();\par
189         \}\par
190     \}\par
191 \}\par
}
}
{\xe \v inicializaFrame\:FrameExportar}
{\xe \v FrameExportar\:inicializaFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::inicializaFrame ()}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 79                                    \{\par
80     inserirQssFrame();\par
81 \}\par
}
}
{\xe \v inserirQssBtn\:FrameExportar}
{\xe \v FrameExportar\:inserirQssBtn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::inserirQssBtn ()}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 123                                  \{\par
124     Style style;\par
125     ui->btnExportar->setStyleSheet(style.cssBtn);\par
126     ui->btnExportar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/exportar.png"}));\par
127     ui->btnExportar->setLayoutDirection(Qt::RightToLeft);\par
128     ui->btnVoltar->setStyleSheet(style.cssBtn);\par
129     ui->btnVoltar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/anterior.png"}));\par
130 \}\par
}
}
{\xe \v inserirQssFrame\:FrameExportar}
{\xe \v FrameExportar\:inserirQssFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::inserirQssFrame ()}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 88                                    \{\par
89     inserirQssImg();\par
90     inserirQssRadioButton();\par
91     inserirQssBtn();\par
92 \}\par
}
}
{\xe \v inserirQssImg\:FrameExportar}
{\xe \v FrameExportar\:inserirQssImg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::inserirQssImg ()}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 99                                  \{\par
100     Style style;\par
101     ui->img->setPixmap(QPixmap({\cf22 ":/imgExportar/imgs/descritiva/relatorio.png"}));\par
102     ui->img->setStyleSheet(style.cssImgExportar);\par
103 \}\par
}
}
{\xe \v inserirQssRadioButton\:FrameExportar}
{\xe \v FrameExportar\:inserirQssRadioButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::inserirQssRadioButton ()}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 110                                          \{\par
111     Style style;\par
112     ui->radioButtonCsv->setStyleSheet(style.cssRadioButton);\par
113     ui->radioButtonPDF->setChecked({\cf17 true});\par
114     ui->radioButtonExcel->setStyleSheet(style.cssRadioButton);\par
115     ui->radioButtonPDF->setStyleSheet(style.cssRadioButton);\par
116 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b frameexportar.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b frameexportar.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FrameTensoes Class Reference\par \pard\plain 
{\tc\tcl2 \v FrameTensoes}
{\xe \v FrameTensoes}
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela aquisi\'E7\'E3o dos dados de tens\'E3o nominal do sistema el\'E9trico @reentrant Essa janela foi construida com 1 frame que se posiciona no mesmo local do frame respons\'E1vel por receber os arquivos no {\b MainWindow}, nele h\'E1 um QTableWidget para inser\'E7\'E3o dos valores das tens\'F5es, seja por inser\'E7\'E3o manual ou para importar um arquivo com esses dados. Al\'E9m de bot\'F5es de salva, avan\'E7ar e voltar. }}\par
{
{\f2 #include <frametensoes.h>}}\par
Inheritance diagram for FrameTensoes:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_frame_tensoes.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::FrameTensoes\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b FrameTensoes}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mw} \cell }{(Par\'E3metro do tipo Ui::MainWindow para permitir acesso aos componentes da interface do frame {\b MainWindow}) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FrameTensoes} (QWidget *parent=nullptr, Ui::MainWindow *mw=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::~FrameTensoes\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b FrameTensoes} \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FrameTensoes} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereQssBotaoAvancar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o de Avan\'E7ar. Insere Qss no bot\'E3o para iniciar com aspecto de bloqueado. Insere um icone dentro do bot\'E3o demonstrando tendencia de seguir em frente, esse icon fica \'E1 direita do texto do bot\'E3o Bot\'E3o inicia bloqueado, j\'E1 que s\'F3 ser\'E1 liberado com a inser\'E7\'E3o de todos os arquivos nos LineEdits\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBotaoAvancar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereQssImportar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no Bot\'E3o importar e no seu lineEdit correspondente\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssImportar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereQssBtnVoltar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no Bot\'E3o voltar. Insere Qss padr\'E3o de bot\'E3o nele e um icone dentro do bot\'E3o indicando uma tend\'EAncia de retornar,esse icon fica \'E1 esquerda do texto do bot\'E3o\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnVoltar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereQssBtnLixeira\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o de apagar dados j\'E1 inseridos no LineEdit. Nesse bot\'E3o h\'E1 a inser\'E7\'E3o de um icone de lixeira, al\'E9m do Qss para que seu fundo seja vermelho, indicando uma remo\'E7\'E3o. O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnLixeira} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereQssBtnSalvar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no Bot\'E3o salvar. Insere Qss padr\'E3o de bot\'E3o nele e um icone dentro do bot\'E3o indicando uma tend\'EAncia de salvar\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnSalvar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereQssFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no frame atual\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssFrame} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereTableTensoes\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere e configura uma tabela de tens\'F5es na interface do usu\'E1rio.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereTableTensoes} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereQssFrameTensoes\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar m\'E9todos que ir\'E3o inserir Qss na interface do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssFrameTensoes} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::inicializaFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primeiro m\'E9todo a ser chamada no construtor, respons\'E1vel por chamar os m\'E9todos subsequ\'EAntes que modelam a Interface do frame. Al\'E9m de chamar o m\'E9todo que ir\'E1 inicializar a v\'E1riavel numeroDeBarras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaFrame} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::tabelaTensoesPreenchida\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por verificar se toda a tabela est\'E1 preenchida\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna verdadeiro se a tabela estiver completamente preenchida e falso, caso o contrario; \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b tabelaTensoesPreenchida} ()\par
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QList< double > {\b tensoesNominais}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel respons\'E1vel por armazenar os valores das tens\'F5es nominais das barras para utilizar esses dados posteriormente no decorrer da aplica\'E7\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b numeroDeBarras}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que armazenar\'E1 o numero de barras do sistema, apartir da leitura dos arquivos inseridos no frame {\b MainWindow}. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
FrameTensoes::quantidadeDeBarras\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por c\'E1lcular o n\'FAmero de barras do sistema\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
valor inteiro do numero de barras do sistema \par
}}}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b quantidadeDeBarras} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela aquisi\'E7\'E3o dos dados de tens\'E3o nominal do sistema el\'E9trico @reentrant Essa janela foi construida com 1 frame que se posiciona no mesmo local do frame respons\'E1vel por receber os arquivos no {\b MainWindow}, nele h\'E1 um QTableWidget para inser\'E7\'E3o dos valores das tens\'F5es, seja por inser\'E7\'E3o manual ou para importar um arquivo com esses dados. Al\'E9m de bot\'F5es de salva, avan\'E7ar e voltar. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FrameTensoes\:FrameTensoes}
{\xe \v FrameTensoes\:FrameTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameTensoes::FrameTensoes (QWidget *  {\i parent} = {\f2 nullptr}, Ui::MainWindow *  {\i mw} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52                                                            :\par
53     QFrame(parent),\par
54 \par
55     ui({\cf17 new} Ui::FrameTensoes)\par
56 \{\par
57     ui->setupUi({\cf17 this});\par
58 \par
59     frameMain = mw; {\cf20 // atribui a v\'E1riavel global o endere\'E7o que mem\'F3ria respons\'E1vel por apontar para o Ui::MainWindow}\par
60 \par
61     inicializaFrame();\par
62 \par
63     {\cf20 // Conecta o sinal itemChanged da tabela tableTensoes ao slot verificarPreenchimentoTabela}\par
64     connect(ui->tableTensoes, &QTableWidget::itemChanged, {\cf17 this}, &FrameTensoes::verificarPreenchimentoTabela);\par
65     {\cf20 // Isso permite que o slot verificarPreenchimentoTabela seja chamado sempre que um item da tabela for alterado}\par
66 \}\par
}
}
{\xe \v ~FrameTensoes\:FrameTensoes}
{\xe \v FrameTensoes\:~FrameTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameTensoes::~FrameTensoes ()}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73 \{\par
74     {\cf17 delete} ui;\par
75 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v inicializaFrame\:FrameTensoes}
{\xe \v FrameTensoes\:inicializaFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::inicializaFrame ()}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 82                                   \{\par
83     numeroDeBarras=quantidadeDeBarras();\par
84     insereQssFrameTensoes();\par
85 \}\par
}
}
{\xe \v insereQssBotaoAvancar\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssBotaoAvancar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssBotaoAvancar ()}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 110                                         \{\par
111     Style style;\par
112     ui->btnAvancar->setStyleSheet(style.cssBtnTransition); {\cf20 // Inserindo Qss no bot\'E3o avan\'E7ar}\par
113     ui->btnAvancar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/proximo.png"})); {\cf20 //Inser\'E7\'E3o do icon diretamente do arquivo de recursos}\par
114     ui->btnAvancar->setLayoutDirection(Qt::RightToLeft); {\cf20 // Icone \'E9 inserido a direita do texto}\par
115     ui->btnAvancar->setEnabled({\cf17 false}); {\cf20 // Bot\'E3o inicia desabilitado , para s\'F3 ser ativado ap\'F3s o preenchimento dos valores de tens\'E3o}\par
116 \}\par
}
}
{\xe \v insereQssBtnLixeira\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssBtnLixeira}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssBtnLixeira ()}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 148                                       \{\par
149     Style style;\par
150     ui->btnLixeira->hide(); {\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido pelo bot\'E3o importar}\par
151     ui->btnLixeira->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
152     ui->btnLixeira->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"})); {\cf20 //Inser\'E7\'E3o do icon diretamente do arquivo de recursos}\par
153 \}\par
}
}
{\xe \v insereQssBtnSalvar\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssBtnSalvar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssBtnSalvar ()}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 161                                      \{\par
162     Style style;\par
163     ui->btnSalvarTabela->setStyleSheet(style.cssBtn); {\cf20 // Inserindo Qss no bot\'E3o}\par
164     ui->btnSalvarTabela->setIcon(QIcon({\cf22 ":/icons/imgs/icons/salve-.png"})); {\cf20 //Inser\'E7\'E3o do icon diretamente do arquivo de recursos}\par
165 \}\par
}
}
{\xe \v insereQssBtnVoltar\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssBtnVoltar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssBtnVoltar ()}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 135                                      \{\par
136     Style style;\par
137     ui->btnVoltar->setStyleSheet(style.cssBtn); {\cf20 // Inserindo Qss no bot\'E3o}\par
138     ui->btnVoltar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/anterior.png"})); {\cf20 //Inser\'E7\'E3o do icon diretamente do arquivo de recursos}\par
139 \}\par
}
}
{\xe \v insereQssFrame\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssFrame (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 172                                         \{\par
173     Style style;\par
174     this->setStyleSheet(style.cssFrameArq);\par
175 \};\par
}
}
{\xe \v insereQssFrameTensoes\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssFrameTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssFrameTensoes ()}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 92                                         \{\par
93     insereQssBotaoAvancar();\par
94     insereQssImportar();\par
95     insereQssBtnVoltar();\par
96     insereQssBtnLixeira();\par
97     insereQssBtnSalvar();\par
98     insereQssFrame();\par
99     insereTableTensoes();\par
100 \}\par
}
}
{\xe \v insereQssImportar\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssImportar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssImportar ()}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 123                                     \{\par
124     Style style;\par
125     ui->btnImportar->setStyleSheet(style.cssBtn); {\cf20 // Inserindo Qss no bot\'E3o}\par
126     ui->lineEditImportar->setStyleSheet(style.cssLineEdit); {\cf20 // Inserindo Qss no LineEdit}\par
127 \}\par
}
}
{\xe \v insereTableTensoes\:FrameTensoes}
{\xe \v FrameTensoes\:insereTableTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereTableTensoes ()}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 183 \{\par
184     Style style;\par
185 \par
186     {\cf20 // Configura\'E7\'E3o da tabela de tens\'F5es}\par
187     ui->tableTensoes->setColumnCount(2); {\cf20 // Duas colunas por ser uma para o indice e a outra para o n\'EDvel de tens\'E3o}\par
188     ui->tableTensoes->setRowCount(numeroDeBarras); {\cf20 // A tabela tem como numero de linhas , o n\'FAmero de barras do sistema}\par
189     ui->tableTensoes->setHorizontalHeaderLabels(\{{\cf22 "Barra"}, {\cf22 "Tens\'E3o [Kv]"}\}); {\cf20 // headers para as duas colunas}\par
190     ui->tableTensoes->setColumnWidth(0, 100); {\cf20 // Define a largura da coluna na posi\'E7\'E3o 0}\par
191     ui->tableTensoes->setColumnWidth(1, (numeroDeBarras <= 17) ? 358 : 346); {\cf20 // define a largura da coluna na posi\'E7\'E3o 1 (segunda coluna) da tabela tableTensoes, dependendo do valor da vari\'E1vel numeroDeBarras. Isso foi inserido para evitar que o scroolBar vertical seja ativado quando desnecess\'E1rio.}\par
192     ui->tableTensoes->verticalScrollBar()->setVisible({\cf17 true}); {\cf20 // garante um scroolBar vertical sempre visivel}\par
193     ui->tableTensoes->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff); {\cf20 // garante um scroolBar horizontal n\'E3o visivel}\par
194     ui->tableTensoes->setStyleSheet(style.csstabelaTensoes); {\cf20 //insere Qss na TabelaTens\'F5es}\par
195     ui->tableTensoes->horizontalHeader()->setStyleSheet(style.cssHeaderTabela); {\cf20 //insere Qss no Header vertical}\par
196     ui->tableTensoes->setAlternatingRowColors({\cf17 true}); {\cf20 //insere alternancia de cores entre as linhas da tabela}\par
197     ui->tableTensoes->verticalHeader()->setVisible({\cf17 false});\par
198     {\cf20 // Preenchimento das linhas da tabela com o \'EDndice das barras}\par
199     {\cf19 for} ({\cf18 int} i = 0; i < numeroDeBarras; i++) \{\par
200         QTableWidgetItem* item = {\cf17 new} QTableWidgetItem(QString::number(i+1));\par
201         item->setFlags(item->flags() & ~Qt::ItemIsEditable);\par
202         ui->tableTensoes->setItem(i, 0, item);\par
203     \}\par
204 \}\par
}
}
{\xe \v quantidadeDeBarras\:FrameTensoes}
{\xe \v FrameTensoes\:quantidadeDeBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameTensoes::quantidadeDeBarras ()}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 226 \{\par
227     QFile *arq1 = MainWindow::arquivoThdv;\par
228 \par
229     {\cf19 if} (!arq1->open(QFile::ReadOnly | QFile::Text)) \{\par
230         {\cf19 if} (arq1->error() == QFile::OpenError) \{\par
231             {\cf19 return} 0;\par
232         \}\par
233         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, {\cf22 "Erro ao abrir arquivo"});\par
234         {\cf19 return} 0;\par
235     \}\par
236 \par
237     {\cf18 int} contador = 0;\par
238     QTextStream entrada(arq1);\par
239 \par
240     {\cf19 while} (!arq1->atEnd()) \{\par
241         arq1->readLine();\par
242         contador++;\par
243     \}\par
244 \par
245     arq1->close();\par
246     {\cf19 return} contador - 3;\par
247 \}\par
}
}
{\xe \v tabelaTensoesPreenchida\:FrameTensoes}
{\xe \v FrameTensoes\:tabelaTensoesPreenchida}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FrameTensoes::tabelaTensoesPreenchida ()}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 426 \{\par
427     {\cf20 // Percorre todas as linhas e colunas da tabela}\par
428     {\cf19 for} ({\cf18 int} row = 0; row < ui->tableTensoes->rowCount(); row++) \{\par
429         {\cf19 for} ({\cf18 int} column = 0; column < ui->tableTensoes->columnCount(); column++) \{\par
430             QTableWidgetItem* item = ui->tableTensoes->item(row, column);\par
431             {\cf20 // Obt\'E9m o item da c\'E9lula da tabela}\par
432 \par
433             {\cf19 if} (item == {\cf17 nullptr} || item->text().isEmpty()) \{\par
434                 {\cf20 // Verifica se o item \'E9 nulo ou se o texto est\'E1 vazio}\par
435                 {\cf19 return} {\cf17 false};\par
436                 {\cf20 // Retorna falso se a tabela n\'E3o estiver completamente preenchida}\par
437             \}\par
438         \}\par
439     \}\par
440 \par
441     {\cf19 return} {\cf17 true};\par
442     {\cf20 // Retorna verdadeiro se a tabela estiver completamente preenchida}\par
443 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v numeroDeBarras\:FrameTensoes}
{\xe \v FrameTensoes\:numeroDeBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameTensoes::numeroDeBarras{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que armazenar\'E1 o numero de barras do sistema, apartir da leitura dos arquivos inseridos no frame {\b MainWindow}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FrameTensoes::numeroDeBarras} \par
}}
{\xe \v tensoesNominais\:FrameTensoes}
{\xe \v FrameTensoes\:tensoesNominais}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< double > FrameTensoes::tensoesNominais{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel respons\'E1vel por armazenar os valores das tens\'F5es nominais das barras para utilizar esses dados posteriormente no decorrer da aplica\'E7\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QList<double> {\b FrameTensoes::tensoesNominais} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b frametensoes.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b frametensoes.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Linha Class Reference\par \pard\plain 
{\tc\tcl2 \v Linha}
{\xe \v Linha}
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
\par
{
{\f2 #include <Linha.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getOrigem} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOrigem} (int origem)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getDestino} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDestino} (int destino)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getCorrente} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCorrente} (double corrente)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getDhtPercent} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDhtPercent} (double dhtPercent)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getResistencia} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setResistencia} (double resistencia)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getPerdas} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPerdas} (double perdas)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getCorrenteEficaz} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCorrenteEficaz} (double correnteEficaz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getPerdasEficaz} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPerdasEficaz} (double perdasEficaz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getLinhaInfectadaDht} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLinhaInfectadaDht} (bool infectada)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< int, std::pair< double, double > > {\b getDti} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDti} (int key1, double dAbsolut, double dPercent)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getCorrente\:Linha}
{\xe \v Linha\:getCorrente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getCorrente (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                          \{\par
27         {\cf19 return} corrente;\par
28     \}\par
}
}
{\xe \v getCorrenteEficaz\:Linha}
{\xe \v Linha\:getCorrenteEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getCorrenteEficaz (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58                                \{\par
59         {\cf19 return} correnteEficaz;\par
60     \}\par
}
}
{\xe \v getDestino\:Linha}
{\xe \v Linha\:getDestino}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Linha::getDestino (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18                      \{\par
19         {\cf19 return} destino;\par
20     \}\par
}
}
{\xe \v getDhtPercent\:Linha}
{\xe \v Linha\:getDhtPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getDhtPercent (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34                            \{\par
35         {\cf19 return} dhtPercent;\par
36     \}\par
}
}
{\xe \v getDti\:Linha}
{\xe \v Linha\:getDti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::map< int, std::pair< double, double > > Linha::getDti (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 82                                                  \{\par
83         {\cf19 return} dti;\par
84     \}\par
}
}
{\xe \v getLinhaInfectadaDht\:Linha}
{\xe \v Linha\:getLinhaInfectadaDht}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Linha::getLinhaInfectadaDht (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 74                                 \{\par
75         {\cf19 return} linhaInfectadaDht;\par
76     \}\par
}
}
{\xe \v getOrigem\:Linha}
{\xe \v Linha\:getOrigem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Linha::getOrigem (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                     \{\par
11         {\cf19 return} origem;\par
12     \}\par
}
}
{\xe \v getPerdas\:Linha}
{\xe \v Linha\:getPerdas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getPerdas (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50                        \{\par
51         {\cf19 return} perdas;\par
52     \}\par
}
}
{\xe \v getPerdasEficaz\:Linha}
{\xe \v Linha\:getPerdasEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getPerdasEficaz (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 66                              \{\par
67         {\cf19 return} perdasEficaz;\par
68     \}\par
}
}
{\xe \v getResistencia\:Linha}
{\xe \v Linha\:getResistencia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getResistencia (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                             \{\par
43         {\cf19 return} resistencia;\par
44     \}\par
}
}
{\xe \v setCorrente\:Linha}
{\xe \v Linha\:setCorrente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setCorrente (double  {\i corrente}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30                                       \{\par
31         this->corrente = corrente;\par
32     \}\par
}
}
{\xe \v setCorrenteEficaz\:Linha}
{\xe \v Linha\:setCorrenteEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setCorrenteEficaz (double  {\i correnteEficaz}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                                   \{\par
63         this->correnteEficaz = correnteEficaz;\par
64     \}\par
}
}
{\xe \v setDestino\:Linha}
{\xe \v Linha\:setDestino}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setDestino (int  {\i destino}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 22                                  \{\par
23         this->destino = destino;\par
24     \}\par
}
}
{\xe \v setDhtPercent\:Linha}
{\xe \v Linha\:setDhtPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setDhtPercent (double  {\i dhtPercent}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 38                                           \{\par
39         this->dhtPercent = dhtPercent;\par
40     \}\par
}
}
{\xe \v setDti\:Linha}
{\xe \v Linha\:setDti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setDti (int  {\i key1}, double  {\i dAbsolut}, double  {\i dPercent}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 86                                                               \{\par
87         this->dti.insert(\{key1,\{dAbsolut,dPercent\}\});\par
88     \}\par
}
}
{\xe \v setLinhaInfectadaDht\:Linha}
{\xe \v Linha\:setLinhaInfectadaDht}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setLinhaInfectadaDht (bool  {\i infectada}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 78                                               \{\par
79         linhaInfectadaDht = infectada;\par
80     \}\par
}
}
{\xe \v setOrigem\:Linha}
{\xe \v Linha\:setOrigem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setOrigem (int  {\i origem}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14                                \{\par
15         this->origem = origem;\par
16     \}\par
}
}
{\xe \v setPerdas\:Linha}
{\xe \v Linha\:setPerdas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setPerdas (double  {\i perdas}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 54                                   \{\par
55         this->perdas = perdas;\par
56     \}\par
}
}
{\xe \v setPerdasEficaz\:Linha}
{\xe \v Linha\:setPerdasEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setPerdasEficaz (double  {\i perdasEficaz}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 70                                               \{\par
71         this->perdasEficaz = perdasEficaz;\par
72     \}\par
}
}
{\xe \v setResistencia\:Linha}
{\xe \v Linha\:setResistencia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setResistencia (double  {\i resistencia}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 46                                             \{\par
47         this->resistencia = resistencia;\par
48     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b Linha.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Main Class Reference\par \pard\plain 
{\tc\tcl2 \v Main}
{\xe \v Main}
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe principal do programa @reentrant Respons\'E1vel por iniciar o programa, iniciar um spash e o Frame {\b MainWindow}. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe principal do programa @reentrant Respons\'E1vel por iniciar o programa, iniciar um spash e o Frame {\b MainWindow}. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b main.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MainWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v MainWindow}
{\xe \v MainWindow}
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela Principal do Programa @reentrant Essa janela foi construida com 2 frames, um com o intuito de funcionar como uma barra de status do andamento da aplica\'E7\'E3o(tendo 4 labels como sinalizadores) e o outro possui componentes repons\'E1veis por receber endere\'E7o de arquivos que ser\'E3o utilizados nos proximos frames para trataemnto de dados. }}\par
{
{\f2 #include <mainwindow.h>}}\par
Inheritance diagram for MainWindow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_main_window.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getStatusDePreenchimento} (int posicao)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setStatusDePreenchimento} (int posicao, bool status)\par
}
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::MainWindow\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b MainWindow}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MainWindow} (QWidget *parent=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::~MainWindow\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b MainWindow} \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~MainWindow} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereCssMainWindow()\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar m\'E9todos que ir\'E3o inserir Qss na interface do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssMainWindow} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereIcon\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir o Icon do programa, diretamente do arquivo de recursos, al\'E9m de inserir o nome do programa\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereIcon} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssBarraDeStatus\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no frame da barra de status e seus labels, que correspondem em que frame a aplica\'E7\'E3o est\'E1 rodando.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBarraDeStatus} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssTitulosLineEdit\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no frame que recebe endere\'E7o dos arquivos e seus labels, que correspondem ao titulo de cada arquivo.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssTitulosLineEdit} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssLineEdit\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos LineEdits do frame que recebe endere\'E7o dos arquivos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssLineEdit} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssPlaceHolderLineEdit\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir PlaceHolder nos LineEdits do frame que recebe endere\'E7o dos arquivos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssPlaceHolderLineEdit} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssBtnArquivos\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos bot\'F5es de buscar endere\'E7o dos arquivos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnArquivos} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssBtnAvancar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel pro inserir Qss no bot\'E3o de Avan\'E7ar. Insere Qss no bot\'E3o para iniciar com aspecto de bloqueado. Insere um icone dentro do bot\'E3o demonstrando tendencia de seguir em frente, esse icon fica \'E1 direita do texto do bot\'E3o Bot\'E3o inicia bloqueado, j\'E1 que s\'F3 ser\'E1 liberado com a inser\'E7\'E3o de todos os arquivos nos LineEdits\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnAvancar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssBtnLixeira\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o de apagar dados j\'E1 inseridos no LineEdit. Nesse bot\'E3o h\'E1 a inser\'E7\'E3o de um icone de lixeira, al\'E9m do Qss para que seu fundo seja vermelho, indicando uma remo\'E7\'E3o. O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnLixeira} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::setaFileNameNosArq\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
seta o FileName dos ponteiros dos arquivos com o que estiver escrito no lineEdit correpondente de cada um.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setaFileNameNosArq} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::inicializaFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primeiro m\'E9todo a ser chamada no construtor, respons\'E1vel por chamar os m\'E9todos subsequ\'EAntes que modelam a Interface do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaFrame} ()\par
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b atualizarStatus} (Ui::MainWindow *ui)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoVsoln} = new QFile()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1veis est\'E1ticas respons\'E1veis por apontar para os arquivos que ser\'E3o inseridos. A classifica\'E7\'E3o de armazenamento dessas v\'E1riaveis foi definida como static pela necessidade dessa vari\'E1vel ser acessada em outros frames para abertura dos arquivos. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoIsoln} = new QFile()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoThdi} = new QFile()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoThdv} = new QFile()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoLdat} = new QFile()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoTensoes} = new QFile()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por apontar para o arquivo que armazenar\'E1 os valores das tens\'F5es nominais das barras do sistema el\'E9trico. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b frameAtual} =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica em que frame a aplica\'E7\'E3o est\'E1 rodando. Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
MainWindow::verificarAvanco()\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por habilitar o bot\'E3o avan\'E7ar caso todos os LineEdits estejam preenchdiso\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b verificarAvanco} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
MainWindow::insereQssLblVerifica\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por garantir, que os labels respons\'E1veis por indicar que as etapas do Frame de status foram cumpridas, iniciem ocultos.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssLblVerifica} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela Principal do Programa @reentrant Essa janela foi construida com 2 frames, um com o intuito de funcionar como uma barra de status do andamento da aplica\'E7\'E3o(tendo 4 labels como sinalizadores) e o outro possui componentes repons\'E1veis por receber endere\'E7o de arquivos que ser\'E3o utilizados nos proximos frames para trataemnto de dados. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MainWindow\:MainWindow}
{\xe \v MainWindow\:MainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MainWindow::MainWindow (QWidget *  {\i parent} = {\f2 nullptr})}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 51     : QMainWindow(parent)\par
52     , ui({\cf17 new} Ui::MainWindow)\par
53 \{\par
54     ui->setupUi({\cf17 this});\par
55     QCoreApplication::addLibraryPath({\cf22 "C:/Qt/6.5.0/mingw_64/plugins"});\par
56     inicializaFrame();\par
57 \par
58 \}\par
}
}
{\xe \v ~MainWindow\:MainWindow}
{\xe \v MainWindow\:~MainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MainWindow::~MainWindow ()}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65 \{\par
66     {\cf17 delete} ui;\par
67 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v atualizarStatus\:MainWindow}
{\xe \v MainWindow\:atualizarStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void MainWindow::atualizarStatus (Ui::MainWindow *  {\i ui}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                                  \{\par
25         Style style;\par
26         {\cf19 switch}(frameAtual)\{\par
27         {\cf19 case} 0:\par
28             ui->txtCarregarArquivos->setStyleSheet(style.cssTxtSelected);\par
29             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
30             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
31             ui->txtExportar->setStyleSheet(style.cssTxt);\par
32             ui->lblVerifica1->hide();\par
33             ui->lblVerifica2->hide();\par
34             ui->lblVerifica3->hide();\par
35             ui->lblVerifica4->hide();\par
36             {\cf19 break};\par
37         {\cf19 case} 1:\par
38             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
39             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxtSelected);\par
40             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
41             ui->txtExportar->setStyleSheet(style.cssTxt);\par
42             ui->lblVerifica1->show();\par
43             ui->lblVerifica2->hide();\par
44             ui->lblVerifica3->hide();\par
45             ui->lblVerifica4->hide();\par
46             {\cf19 break};\par
47         {\cf19 case} 2:\par
48             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
49             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
50             ui->txtPrepararSaida->setStyleSheet(style.cssTxtSelected);\par
51             ui->txtExportar->setStyleSheet(style.cssTxt);\par
52             ui->lblVerifica1->show();\par
53             ui->lblVerifica2->show();\par
54             ui->lblVerifica3->hide();\par
55             ui->lblVerifica4->hide();\par
56             {\cf19 break};\par
57         {\cf19 case} 3:\par
58             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
59             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
60             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
61             ui->txtExportar->setStyleSheet(style.cssTxtSelected);\par
62             ui->lblVerifica1->show();\par
63             ui->lblVerifica2->show();\par
64             ui->lblVerifica3->show();\par
65             ui->lblVerifica4->hide();\par
66             {\cf19 break};\par
67         \}\par
68     \}\par
}
}
{\xe \v getStatusDePreenchimento\:MainWindow}
{\xe \v MainWindow\:getStatusDePreenchimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MainWindow::getStatusDePreenchimento (int  {\i posicao}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 91                                               \{\par
92         {\cf19 if}(posicao < 5 && posicao >=0)\{\par
93             {\cf19 return} statusDePreenchimento[posicao];\par
94         \}\par
95         {\cf19 else}\{\par
96             {\cf19 return} {\cf17 false};\par
97         \}\par
98     \}\par
}
}
{\xe \v inicializaFrame\:MainWindow}
{\xe \v MainWindow\:inicializaFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::inicializaFrame ()}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 74                                 \{\par
75     insereQssMainWindow();\par
76 \}\par
}
}
{\xe \v insereIcon\:MainWindow}
{\xe \v MainWindow\:insereIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereIcon ()}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 100                            \{\par
101     setWindowIcon(QIcon({\cf22 ":/icons/imgs/icons/engrenagem.png"}));\par
102     setWindowTitle({\cf22 "EletricData 1.0"});\par
103 \}\par
}
}
{\xe \v insereQssBarraDeStatus\:MainWindow}
{\xe \v MainWindow\:insereQssBarraDeStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssBarraDeStatus ()}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 110                                        \{\par
111     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
112 \par
113     ui->txtCarregarArquivos->setStyleSheet(style.cssTxtSelected); {\cf20 //Insere Qss Selecionado no item da barra de Status ( 1. Carregar Arquivos)}\par
114     ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt); {\cf20 //Insere Qss no item da barra de Status ( 2. Tens\'F5es nas Barras)}\par
115     ui->txtPrepararSaida->setStyleSheet(style.cssTxt); {\cf20 //Insere Qss no item da barra de Status ( 3. Preparar Saida)}\par
116     ui->txtExportar->setStyleSheet(style.cssTxt); {\cf20 //Insere Qss  no item da barra de Status ( 4. Exportar)}\par
117     ui->statusFrame->setStyleSheet(style.cssStatusFrame); {\cf20 // Insere Qss no Frame da Barra de Status}\par
118 \}\par
}
}
{\xe \v insereQssBtnArquivos\:MainWindow}
{\xe \v MainWindow\:insereQssBtnArquivos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssBtnArquivos ()}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 176                                      \{\par
177     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
178 \par
179     ui->btnVsoln->setStyleSheet(style.cssBtn); {\cf20 //Insere Qss no Bot\'E3o de busca do arquivo Vsoln}\par
180     ui->btnThdv->setStyleSheet(style.cssBtn); {\cf20 //Insere Qss no Bot\'E3o de busca do arquivo Thdv}\par
181     ui->btnThdi->setStyleSheet(style.cssBtn); {\cf20 //Insere Qss no Bot\'E3o de busca do arquivo Thdi}\par
182     ui->btnIsoln->setStyleSheet(style.cssBtn); {\cf20 //Insere Qss no Bot\'E3o de busca do arquivo Isoln}\par
183     ui->btnLdat->setStyleSheet(style.cssBtn); {\cf20 //Insere Qss no Bot\'E3o de busca do arquivo Ldat}\par
184 \}\par
}
}
{\xe \v insereQssBtnAvancar\:MainWindow}
{\xe \v MainWindow\:insereQssBtnAvancar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssBtnAvancar ()}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 194                                     \{\par
195     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
196 \par
197     ui->btnAvancar->setStyleSheet(style.cssBtnTransition); {\cf20 // Inserindo Qss no bot\'E3o avan\'E7ar}\par
198     ui->btnAvancar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/proximo.png"})); {\cf20 //Inser\'E7\'E3o do icon diretamente do arquivo de recursos}\par
199     ui->btnAvancar->setLayoutDirection(Qt::RightToLeft); {\cf20 // Icone \'E9 inserido a direita do texto}\par
200     ui->btnAvancar->setEnabled({\cf17 false}); {\cf20 // Bot\'E3o inicia desabilitado}\par
201 \}\par
}
}
{\xe \v insereQssBtnLixeira\:MainWindow}
{\xe \v MainWindow\:insereQssBtnLixeira}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssBtnLixeira ()}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 210                                     \{\par
211     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
212 \par
213     {\cf20 //Bot\'F5es de Checked e lixeira para cada arquivo}\par
214     ui->btnLixeiraVsoln->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"})); {\cf20 //Inser\'E7\'E3o do icon diretamente do arquivo de recursos}\par
215     ui->btnLixeiraVsoln->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
216     ui->btnLixeiraVsoln->hide();{\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit}\par
217 \par
218     ui->btnLixeiraThdv->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"}));\par
219     ui->btnLixeiraThdv->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
220     ui->btnLixeiraThdv->hide();{\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit}\par
221 \par
222     ui->btnLixeiraThdi->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"}));\par
223     ui->btnLixeiraThdi->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
224     ui->btnLixeiraThdi->hide();{\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit}\par
225 \par
226     ui->btnLixeiraIsoln->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"}));\par
227     ui->btnLixeiraIsoln->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
228     ui->btnLixeiraIsoln->hide();{\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit}\par
229 \par
230     ui->btnLixeiraLdat->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"}));\par
231     ui->btnLixeiraLdat->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
232     ui->btnLixeiraLdat->hide();{\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit}\par
233 \}\par
}
}
{\xe \v insereQssLblVerifica\:MainWindow}
{\xe \v MainWindow\:insereQssLblVerifica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssLblVerifica ()}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 240                                      \{\par
241     {\cf20 //os labels de Checked iniciam escondidos j\'E1 que nada foi realizado ainda}\par
242     ui->lblVerifica1->hide();\par
243     ui->lblVerifica2->hide();\par
244     ui->lblVerifica3->hide();\par
245     ui->lblVerifica4->hide();\par
246 \}\par
}
}
{\xe \v insereQssLineEdit\:MainWindow}
{\xe \v MainWindow\:insereQssLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssLineEdit ()}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 141                                   \{\par
142     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
143 \par
144     ui->lineEditVsoln->setStyleSheet(style.cssLineEdit); {\cf20 //Insere Qss No LineEdit Vsoln}\par
145     ui->lineEditThdv->setStyleSheet(style.cssLineEdit); {\cf20 //Insere Qss No LineEdit Thdv}\par
146     ui->lineEditThdi->setStyleSheet(style.cssLineEdit); {\cf20 //Insere Qss No LineEdit Thdi}\par
147     ui->lineEditIsoln->setStyleSheet(style.cssLineEdit); {\cf20 //Insere Qss No LineEdit Isoln}\par
148     ui->lineEditLdat->setStyleSheet(style.cssLineEdit); {\cf20 //Insere Qss No LineEdit Ldat}\par
149     ui->lineEditVsoln->setEnabled({\cf17 false});   {\cf20 //Desativa altera\'E7\'E3o no lineEditVsoln para que s\'F3 possa ser alterado pela inser\'E7\'E3o de texto no bot\'E3o buscar}\par
150     ui->lineEditThdv->setEnabled({\cf17 false});    {\cf20 //Desativa altera\'E7\'E3o no lineEditThdv para que s\'F3 possa ser alterado pela inser\'E7\'E3o de texto no bot\'E3o buscar}\par
151     ui->lineEditThdi->setEnabled({\cf17 false});    {\cf20 //Desativa altera\'E7\'E3o no lineEditThdi para que s\'F3 possa ser alterado pela inser\'E7\'E3o de texto no bot\'E3o buscar}\par
152     ui->lineEditIsoln->setEnabled({\cf17 false});   {\cf20 //Desativa altera\'E7\'E3o no lineEditIsoln para que s\'F3 possa ser alterado pela inser\'E7\'E3o de texto no bot\'E3o buscar}\par
153     ui->lineEditLdat->setEnabled({\cf17 false});    {\cf20 //Desativa altera\'E7\'E3o no lineEditLdat para que s\'F3 possa ser alterado pela inser\'E7\'E3o de texto no bot\'E3o buscar}\par
154 \}\par
}
}
{\xe \v insereQssMainWindow\:MainWindow}
{\xe \v MainWindow\:insereQssMainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssMainWindow ()}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 83                                     \{\par
84     insereIcon();\par
85     insereQssBarraDeStatus();\par
86     insereQssTitulosLineEdit();\par
87     insereQssLineEdit();\par
88     insereQssPlaceHolderLineEdit();\par
89     insereQssBtnArquivos();\par
90     insereQssBtnAvancar();\par
91     insereQssBtnLixeira();\par
92     insereQssLblVerifica();\par
93 \}\par
}
}
{\xe \v insereQssPlaceHolderLineEdit\:MainWindow}
{\xe \v MainWindow\:insereQssPlaceHolderLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssPlaceHolderLineEdit ()}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 161                                              \{\par
162     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
163 \par
164     ui->lineEditVsoln->setPlaceholderText({\cf22 "Clique em buscar para inserir o caminho do arquivo"}); {\cf20 //Insere Place Holder no LineEdit do Vsoln}\par
165     ui->lineEditThdv->setPlaceholderText({\cf22 "Clique em buscar para inserir o caminho do arquivo"}); {\cf20 //Insere Place Holder no LineEdit do Thdv}\par
166     ui->lineEditThdi->setPlaceholderText({\cf22 "Clique em buscar para inserir o caminho do arquivo"}); {\cf20 //Insere Place Holder no LineEdit do Thdi}\par
167     ui->lineEditIsoln->setPlaceholderText({\cf22 "Clique em buscar para inserir o caminho do arquivo"}); {\cf20 //Insere Place Holder no LineEdit do Isoln}\par
168     ui->lineEditLdat->setPlaceholderText({\cf22 "Clique em buscar para inserir o caminho do arquivo"}); {\cf20 //Insere Place Holder no LineEdit do Ldat}\par
169 \}\par
}
}
{\xe \v insereQssTitulosLineEdit\:MainWindow}
{\xe \v MainWindow\:insereQssTitulosLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssTitulosLineEdit ()}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 125                                          \{\par
126     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
127 \par
128     ui->txtVsoln->setStyleSheet(style.cssTxtArquivos); {\cf20 // Insere Qss No titulo acima do LineEdit Vsoln}\par
129     ui->txtThdv->setStyleSheet(style.cssTxtArquivos); {\cf20 // Insere Qss No titulo acima do LineEdit Thdv}\par
130     ui->txtThdi->setStyleSheet(style.cssTxtArquivos); {\cf20 // Insere Qss No titulo acima do LineEdit Thdi}\par
131     ui->txtIsoln->setStyleSheet(style.cssTxtArquivos); {\cf20 // Insere Qss No titulo acima do LineEdit Isoln}\par
132     ui->txtLdat->setStyleSheet(style.cssTxtArquivos); {\cf20 // Insere Qss No titulo acima do LineEdit Ldat}\par
133     ui->frameArquivos->setStyleSheet(style.cssFrameArq); {\cf20 // Insere Qss no Frame da Barra Arquivos}\par
134 \}\par
}
}
{\xe \v setaFileNameNosArq\:MainWindow}
{\xe \v MainWindow\:setaFileNameNosArq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::setaFileNameNosArq ()}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 559                                    \{\par
560     arquivoVsoln->setFileName(ui->lineEditVsoln->text());   {\cf20 //seta FileName no arquivoVsoln}\par
561     arquivoThdi->setFileName(ui->lineEditThdi->text());     {\cf20 //seta FileName no arquivoThdi}\par
562     arquivoThdv->setFileName(ui->lineEditThdv->text());     {\cf20 //seta FileName no arquivoThdv}\par
563     arquivoIsoln->setFileName(ui->lineEditIsoln->text());   {\cf20 //seta FileName no arquivoIsoln}\par
564     arquivoLdat->setFileName(ui->lineEditLdat->text());     {\cf20 //seta FileName no arquivoLdat}\par
565 \}\par
}
}
{\xe \v setStatusDePreenchimento\:MainWindow}
{\xe \v MainWindow\:setStatusDePreenchimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::setStatusDePreenchimento (int  {\i posicao}, bool  {\i status}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 99                                                            \{\par
100         {\cf19 if}(posicao < 5 && posicao >=0)\{\par
101             statusDePreenchimento[posicao]=status;\par
102         \}\par
103     \}\par
}
}
{\xe \v verificarAvanco\:MainWindow}
{\xe \v MainWindow\:verificarAvanco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::verificarAvanco ()}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 396                                 \{\par
397 \par
398     {\cf19 for} ({\cf18 int} i = 0 ; i < 5; i++ ) \{\par
399         {\cf19 if}(!this->getStatusDePreenchimento(i))\{ {\cf20 // verifica se os status de preenchimento est\'E3o com valor true para cada arquivo}\par
400             {\cf19 return}; {\cf20 //caso algum estejam false, nada acontece}\par
401         \}\par
402     \}\par
403     ui->btnAvancar->setEnabled({\cf17 true}); {\cf20 // caso todos estejam 'true' , o bot\'E3o avan\'E7ar \'E9 habilitado}\par
404 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v arquivoIsoln\:MainWindow}
{\xe \v MainWindow\:arquivoIsoln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoIsoln = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v arquivoLdat\:MainWindow}
{\xe \v MainWindow\:arquivoLdat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoLdat = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v arquivoTensoes\:MainWindow}
{\xe \v MainWindow\:arquivoTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoTensoes = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por apontar para o arquivo que armazenar\'E1 os valores das tens\'F5es nominais das barras do sistema el\'E9trico. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QFile* {\b MainWindow::arquivoTensoes} \par
}}
{\xe \v arquivoThdi\:MainWindow}
{\xe \v MainWindow\:arquivoThdi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoThdi = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v arquivoThdv\:MainWindow}
{\xe \v MainWindow\:arquivoThdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoThdv = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v arquivoVsoln\:MainWindow}
{\xe \v MainWindow\:arquivoVsoln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoVsoln = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1veis est\'E1ticas respons\'E1veis por apontar para os arquivos que ser\'E3o inseridos. A classifica\'E7\'E3o de armazenamento dessas v\'E1riaveis foi definida como static pela necessidade dessa vari\'E1vel ser acessada em outros frames para abertura dos arquivos. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QFile* {\b MainWindow::arquivoVsoln} @variable QFile* {\b MainWindow::arquivoIsoln} @variable QFile* {\b MainWindow::arquivoThdi} @variable QFile* {\b MainWindow::arquivoThdv} @variable QFile* {\b MainWindow::arquivoLdat} \par
}}
{\xe \v frameAtual\:MainWindow}
{\xe \v MainWindow\:frameAtual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MainWindow::frameAtual =0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica em que frame a aplica\'E7\'E3o est\'E1 rodando. Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b MainWindow::frameAtual} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b mainwindow.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b frametensoes.cpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b mainwindow.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Style Class Reference\par \pard\plain 
{\tc\tcl2 \v Style}
{\xe \v Style}
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
\par
{
{\f2 #include <style.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b corPrimaria} ="#1E385B"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b corSecundaria} ="#D3D3D3"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b corHoverBtn} ="#325a8f"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b segundaOpcao} ="#c7db79"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b branco} ="#FFFFFF"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b corSelected} ="#63d6db"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssTxt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssTxtSelected}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssStatusFrame} ="background-color:"+{\b corPrimaria}+";"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssTxtArquivos}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssFrameArq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssLineEdit}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssLineEditDisabled}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssBtn}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssBtnTransition}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssBtnLixeira}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b csstabelaTensoes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssTabelaBarras}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssHeaderTabela}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssTabWidget}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssCheckbox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssComboBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssGroupBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssRadioButton}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssImgExportar} = "border-radius:30px;"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v branco\:Style}
{\xe \v Style\:branco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::branco ="#FFFFFF"}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v corHoverBtn\:Style}
{\xe \v Style\:corHoverBtn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::corHoverBtn ="#325a8f"}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v corPrimaria\:Style}
{\xe \v Style\:corPrimaria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::corPrimaria ="#1E385B"}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v corSecundaria\:Style}
{\xe \v Style\:corSecundaria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::corSecundaria ="#D3D3D3"}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v corSelected\:Style}
{\xe \v Style\:corSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::corSelected ="#63d6db"}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cssBtn\:Style}
{\xe \v Style\:cssBtn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssBtn}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QPushButton\{"}\par
                         {\cf22 "border:2px solid "}+corPrimaria+{\cf22 ";"}\par
                         {\cf22 "font-family: 'Roboto';"}\par
                         {\cf22 "font-size:15px;"}\par
                         {\cf22 "background-color:"}+corPrimaria+{\cf22 ";"}\par
                         {\cf22 "color:white;"}\par
                         {\cf22 "border-radius:5px;\}"}\par
                    {\cf22 "QPushButton:hover\{"}\par
                         {\cf22 "border:2px solid "}+corHoverBtn+{\cf22 ";"}\par
                         {\cf22 "font-size:15px;"}\par
                         {\cf22 "font-weight:bold;"}\par
                         {\cf22 "color:white;"}\par
                         {\cf22 "background-color:"}+corHoverBtn+{\cf22 ";\}"}\par
                    {\cf22 "QPushButton:pressed\{"}\par
                        {\cf22 "background-color: #0D2C4D;"}\par
                        {\cf22 "color: #FFFFFF;\}"}\par
}
}
{\xe \v cssBtnLixeira\:Style}
{\xe \v Style\:cssBtnLixeira}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssBtnLixeira}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QPushButton\{"}\par
                                     {\cf22 "font-family: 'Roboto';"}\par
                                     {\cf22 "font-size:15px;"}\par
                                     {\cf22 "background-color:#8B0000;"}\par
                                     {\cf22 "color:white;"}\par
                                     {\cf22 "border-radius:5px;\}"}\par
                                     {\cf22 "QPushButton:hover\{"}\par
                                     {\cf22 "font-size:15px;"}\par
                                     {\cf22 "font-weight:bold;"}\par
                                     {\cf22 "color:white;"}\par
                                     {\cf22 "background-color:#B22222;\}"}\par
                                     {\cf22 "QPushButton:pressed\{"}\par
                                     {\cf22 "background-color: #CD5C5C;"}\par
                                     {\cf22 "color: #FFFFFF;\}"}\par
}
}
{\xe \v cssBtnTransition\:Style}
{\xe \v Style\:cssBtnTransition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssBtnTransition}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QPushButton\{"}\par
                                     {\cf22 "border:2px solid "}+corPrimaria+{\cf22 ";"}\par
                                     {\cf22 "font-family: 'Roboto';"}\par
                                     {\cf22 "font-size: 15px;"}\par
                                     {\cf22 "background-color:"}+corPrimaria+{\cf22 ";"}\par
                                     {\cf22 "color:white;"}\par
                                     {\cf22 "border-radius:5px;\}"}\par
                             {\cf22 "QPushButton:hover\{"}\par
                                     {\cf22 "border:2px solid "}+corHoverBtn+{\cf22 ";"}\par
                                     {\cf22 "font-size: 15px;"}\par
                                     {\cf22 "font-weight:bold;"}\par
                                     {\cf22 "color:white;"}\par
                                     {\cf22 "background-color:"}+corHoverBtn+{\cf22 ";\}"}\par
                             {\cf22 "QPushButton:pressed\{"}\par
                                     {\cf22 "background-color: #0D2C4D;"}\par
                                     {\cf22 "color: #FFFFFF;\}"}\par
                             {\cf22 "QPushButton:disabled\{"}\par
                                     {\cf22 "border:2px solid #808080;"}\par
                                     {\cf22 "background-color:#808080;\}"}\par
}
}
{\xe \v cssCheckbox\:Style}
{\xe \v Style\:cssCheckbox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssCheckbox}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "QCheckBox\{"}\par
                              {\cf22 "font-size:13px;"}\par
                              {\cf22 "font-weight:bold;"}\par
                              {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"}\par
                          {\cf22 "QCheckBox::indicator\{"}\par
                              {\cf22 "width: 30px;"}\par
                              {\cf22 "height: 30px;\}"}\par
}
}
{\xe \v cssComboBox\:Style}
{\xe \v Style\:cssComboBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssComboBox}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "QComboBox \{"}\par
                          {\cf22 "border-radius: 3px;"}\par
                          {\cf22 "border:1px solid"}+corPrimaria+{\cf22 ";"}\par
                          {\cf22 "color: #1E385B;"}\par
                          {\cf22 "background-color: #FFFFFF;"}\par
                          {\cf22 "\}"}\par
}
}
{\xe \v cssFrameArq\:Style}
{\xe \v Style\:cssFrameArq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssFrameArq}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QFrame\{"}\par
                          {\cf22 "background-color:"}+corSecundaria+{\cf22 ";\}"}\par
}
}
{\xe \v cssGroupBox\:Style}
{\xe \v Style\:cssGroupBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssGroupBox}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "QGroupBox \{"}\par
                          {\cf22 "font-size:15px;"}\par
                          {\cf22 "font-weight:bold;"}\par
                          {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"}\par
}
}
{\xe \v cssHeaderTabela\:Style}
{\xe \v Style\:cssHeaderTabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssHeaderTabela}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "font-family: 'Roboto';"}\par
                            {\cf22 "font-size:17px;"}\par
}
}
{\xe \v cssImgExportar\:Style}
{\xe \v Style\:cssImgExportar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssImgExportar = "border-radius:30px;"}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cssLineEdit\:Style}
{\xe \v Style\:cssLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssLineEdit}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QLineEdit\{"}\par
                            {\cf22 "background-color:"}+branco+{\cf22 ";"}\par
                            {\cf22 "font-size:12px;"}\par
                            {\cf22 "border-radius:3px;\}"}\par
                        {\cf22 "QLineEdit:hover\{"}\par
                            {\cf22 "font-size:20px;"}\par
                            {\cf22 "font-family: 'Roboto';"}\par
                                     {\cf22 "border: 2px solid"}+corPrimaria+{\cf22 ";\}"}\par
}
}
{\xe \v cssLineEditDisabled\:Style}
{\xe \v Style\:cssLineEditDisabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssLineEditDisabled}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QLineEdit\{"}\par
                                  {\cf22 "background-color:"}+branco+{\cf22 ";"}\par
                                     {\cf22 "font-size:12px;"}\par
                                     {\cf22 "border-radius:3px;\}"}\par
                                 {\cf22 "QLineEdit:hover\{"}\par
                                     {\cf22 "font-size:20px;"}\par
                                     {\cf22 "font-family: 'Roboto';"}\par
                                     {\cf22 "border: 2px solid"}+corPrimaria+{\cf22 ";\}"}\par
                                  {\cf22 "QLineEdit:disabled\{"}\par
                                          {\cf22 "background-color:#808080;\}"}\par
}
}
{\xe \v cssRadioButton\:Style}
{\xe \v Style\:cssRadioButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssRadioButton}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "QRadioButton \{"}\par
                             {\cf22 "font-size:20px;"}\par
                             {\cf22 "font-family: 'Roboto';"}\par
                             {\cf22 "font-weight:bold;"}\par
                             {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"}\par
}
}
{\xe \v cssStatusFrame\:Style}
{\xe \v Style\:cssStatusFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssStatusFrame ="background-color:"+{\b corPrimaria}+";"}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cssTabelaBarras\:Style}
{\xe \v Style\:cssTabelaBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssTabelaBarras}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v csstabelaTensoes\:Style}
{\xe \v Style\:csstabelaTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::csstabelaTensoes}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cssTabWidget\:Style}
{\xe \v Style\:cssTabWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssTabWidget}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "QTabWidget::pane \{"}\par
                              {\cf22 "border: 2px solid "}+corPrimaria+{\cf22 ";"}\par
                              {\cf22 "border-radius:4px;"}\par
                              {\cf22 "\}"}\par
                              {\cf22 "QTabBar::tab \{"}\par
                               {\cf22 "border-radius:1px;"}\par
                              {\cf22 "background-color: #2E4E7E;"}\par
                              {\cf22 "color: #FFFFFF;"}\par
                              {\cf22 "font-weight: bold;"}\par
                               {\cf22 "min-width: 100px;"}\par
                               {\cf22 "min-height:20px;"}\par
                              {\cf22 "\}"}\par
                              {\cf22 "QTabBar::tab:selected \{"}\par
                              {\cf22 "background-color: #1E385B;"}\par
                              {\cf22 "\}"}\par
                              {\cf22 "QTabBar::tab:focus \{"}\par
                              {\cf22 "border: none;"}\par
                              {\cf22 "font-size: 15px;"}\par
                              {\cf22 "font-weight: 500;"}\par
                              {\cf22 "font-family: 'Roboto';"}\par
                              {\cf22 "color:branco;"}\par
                                         {\cf22 "\}"}\par
}
}
{\xe \v cssTxt\:Style}
{\xe \v Style\:cssTxt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssTxt}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "border:none;"}\par
                   {\cf22 "font-size:15px;"}\par
                   {\cf22 "font-weight:500;"}\par
                   {\cf22 "font-family: 'Roboto';"}\par
                   {\cf22 "color:"}+branco+{\cf22 ";"}\par
}
}
{\xe \v cssTxtArquivos\:Style}
{\xe \v Style\:cssTxtArquivos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssTxtArquivos}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "border:none;"}\par
                            {\cf22 "font-size:15px;"}\par
                            {\cf22 "font-family: 'Roboto';"}\par
                            {\cf22 "font-style:italic;"}\par
                            {\cf22 "font-weight:600;"}\par
                            {\cf22 "color:"}+corPrimaria+{\cf22 ";"}\par
}
}
{\xe \v cssTxtSelected\:Style}
{\xe \v Style\:cssTxtSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssTxtSelected}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "font-size:17px;"}\par
                            {\cf22 "font-weight:bold;"}\par
                            {\cf22 "font-family: 'Roboto';"}\par
                            {\cf22 "color:"}+corSelected+{\cf22 ";"}\par
}
}
{\xe \v segundaOpcao\:Style}
{\xe \v Style\:segundaOpcao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::segundaOpcao ="#c7db79"}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b style.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/animatedhoverbutton.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/animatedhoverbutton.cpp}
{\xe \v D:/QT/EletricData/animatedhoverbutton.cpp}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "AnimatedHoverButton.h"}\par
{\f2 #include <QVariantAnimation>}\par
{\f2 #include <QStyleOptionButton>}\par
{\f2 #include <QStylePainter>}\par
{\f2 #include <QEvent>}\par
{\f2 #include "style.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/AnimatedHoverButton.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/AnimatedHoverButton.h}
{\xe \v D:/QT/EletricData/AnimatedHoverButton.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QPushButton>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AnimatedHoverButton}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/AnimatedHoverButton.h\par \pard\plain 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
25 {\cf21 #ifndef ANIMATEDHOVERBUTTON_H}\par
26 {\cf21 #define ANIMATEDHOVERBUTTON_H}\par
27 \par
28 {\cf21 #include <QPushButton>}\par
29 \par
30 {\cf17 class }QVariantAnimation;\par
31 \par
32 {\cf17 class }AnimatedHoverButton : {\cf17 public} QPushButton\par
33 \{\par
34     Q_OBJECT\par
35 {\cf17 public}:\par
36     {\cf17 explicit} AnimatedHoverButton({\cf17 const} QString &text, QWidget *parent = {\cf17 nullptr});\par
37 \par
38     {\cf18 void} setTransitionDuration({\cf18 int} duration);\par
39     {\cf18 bool} event(QEvent *event) {\cf17 override};\par
40 \par
41 {\cf17 protected}:\par
42     {\cf18 void} paintEvent(QPaintEvent *) {\cf17 override};\par
43 \par
44 {\cf17 private}:\par
45     {\cf18 void} animateHover({\cf18 bool} in);\par
46 \par
47     QVariantAnimation *m_transition;\par
48     {\cf18 int} m_duration;\par
49     QColor m_currentColor;\par
50 \};\par
51 \par
52 {\cf21 #endif }{\cf20 // ANIMATEDHOVERBUTTON_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/Barra.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/Barra.h}
{\xe \v D:/QT/EletricData/Barra.h}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QObject>}\par
{\f2 #include <utility>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Barra}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/Barra.h\par \pard\plain 
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef BARRA_H}\par
2 {\cf21 #define BARRA_H}\par
3 \par
4 {\cf21 #include <QObject>}\par
5 {\cf21 #include <utility>}\par
6 \par
7 {\cf17 class }Barra \{\par
8 {\cf17 public}:\par
9     {\cf18 double} getTensaoPu()  \{\par
10         {\cf19 return} tensaoPu;\par
11     \}\par
12 \par
13     {\cf18 void} setTensaoPu({\cf18 double} value) \{\par
14         tensaoPu = value;\par
15     \}\par
16 \par
17     {\cf18 double} getTensaoNominalKv()  \{\par
18         {\cf19 return} tensaoNominalKv;\par
19     \}\par
20 \par
21     {\cf18 void} setTensaoNominalKv({\cf18 double} value) \{\par
22         tensaoNominalKv = value;\par
23     \}\par
24 \par
25     {\cf18 double} getThdvPercent()  \{\par
26         {\cf19 return} thdvPercent;\par
27     \}\par
28 \par
29     {\cf18 void} setThdvPercent({\cf18 double} value) \{\par
30         thdvPercent = value;\par
31     \}\par
32 \par
33     std::map<int, std::pair<std::pair<double, double>, std::pair<int, bool>>> getDti()\{\par
34         {\cf19 return} dti;\par
35     \}\par
36 \par
37     {\cf18 void} somatorioHarmonico({\cf18 int} key1, {\cf18 double} dAbsolut ,  {\cf18 double} dPercent,{\cf18 int} classeTensaoThdi ,{\cf18 bool} poluida ) \{\par
38         this->dti.insert(\{key1,\{\{dAbsolut,dPercent\},\{classeTensaoThdi,poluida\}\}\});\par
39     \}\par
40 \par
41     {\cf18 double} getTensaoEficaz() \{\par
42         {\cf19 return} tensaoEficaz;\par
43     \}\par
44 \par
45     {\cf18 void} setTensaoEficaz({\cf18 double} value) \{\par
46         tensaoEficaz = value;\par
47     \}\par
48 \par
49     {\cf18 int} getClasseTensaoThdv()\{\par
50         {\cf19 return} classeTensaoThdv;\par
51     \}\par
52 \par
53     {\cf18 void} setClasseTensaoThdv({\cf18 int} value)\{\par
54         classeTensaoThdv= value;\par
55     \}\par
56 \par
57     {\cf18 bool} getBarraInfectadaThdv()\{\par
58         {\cf19 return} barraInfectadaThdv;\par
59     \}\par
60 \par
61     {\cf18 void} setbarraInfectadaThdv({\cf18 bool} value)\{\par
62         barraInfectadaThdv = value;\par
63     \}\par
64 \par
65 \par
66 \par
67 \par
68 \par
69 {\cf17 private}:\par
70     {\cf18 double} tensaoPu;\par
71     {\cf18 double} tensaoNominalKv;\par
72     {\cf18 double} thdvPercent;\par
73     {\cf18 double} tensaoEficaz;\par
74     std::map<int, std::pair<std::pair<double, double>, std::pair<int, bool>>> dti;\par
75     {\cf18 int} classeTensaoThdv;\par
76     {\cf18 bool} barraInfectadaThdv;\par
77 \par
78 \par
79 \};\par
80 \par
81 {\cf21 #endif }{\cf20 // BARRA_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarcsv.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/exportarcsv.cpp}
{\xe \v D:/QT/EletricData/exportarcsv.cpp}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "exportarcsv.h"}\par
{\f2 #include "filtrolinha.h"}\par
{\f2 #include "filtrosbarra.h"}\par
{\f2 #include "framebarras.h"}\par
{\f2 #include <QFileDialog>}\par
{\f2 #include <QMessageBox>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b parentExportarCsv}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v parentExportarCsv\:exportarcsv.cpp}
{\xe \v exportarcsv.cpp\:parentExportarCsv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget* parentExportarCsv}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarcsv.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/exportarcsv.h}
{\xe \v D:/QT/EletricData/exportarcsv.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QFile>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExportarCsv}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarcsv.h\par \pard\plain 
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef EXPORTARCSV_H}\par
3 {\cf21 #define EXPORTARCSV_H}\par
4 \par
5 {\cf21 #include <QFile>}\par
6 \par
7 \par
8 {\cf17 class }ExportarCsv\par
9 \{\par
10 {\cf17 public}:\par
11     ExportarCsv(QWidget *parent = {\cf17 nullptr});\par
12 \par
13     {\cf20 //----------fun\'E7\'F5es CSV}\par
14     {\cf20 //Fun\'E7\'F5es para imprimir csv com barras em intervalo}\par
15     {\cf18 void} CsvInterBarrasInterL1InterL2();\par
16     {\cf18 void} CsvInterBarrasInterL1TodL2();\par
17     {\cf18 void} CsvInterBarrasTodL1InterL2();\par
18     {\cf18 void} CsvInterBarrasTodL1TodL2();\par
19     {\cf20 //Fun\'E7\'F5es para imprimir csv com barras em componentes}\par
20     {\cf18 void} CsvCompBarrasInterL2InterL2();\par
21     {\cf18 void} CsvCompBarrasInterL1TodL2();\par
22     {\cf18 void} CsvCompBarrasTodL1InterL2();\par
23     {\cf18 void} CsvCompBarrasaTodL1TodL2();\par
24     {\cf20 //Fun\'E7\'F5es de para imprimir csv com barras infectadas}\par
25     {\cf18 void} CsvInfecBarrasInterL1InterL2();\par
26     {\cf18 void} CsvInfecBarrasInterL1TodL2();\par
27     {\cf18 void} CsvInfecBarrasTodL1InterL2();\par
28     {\cf18 void} CsvInfecBarrasTodL1TodL2();\par
29     {\cf20 //Fun\'E7\'F5es Auxiliares}\par
30     {\cf20 //Cria arquivo}\par
31     QFile* criaArquivo();\par
32     {\cf20 //escreve as barras em intervalo}\par
33     {\cf18 void} CsvEscreveBarrasIntervalo(QTextStream* );\par
34     {\cf20 //escreve as barras em componentes}\par
35     {\cf18 void} CsvEscreveBarrasComp(QTextStream* );\par
36     {\cf20 //escreve as barras Infectadas}\par
37     {\cf18 void} CsvEscreveBarrasInfec(QTextStream* );\par
38     {\cf20 //escreve Linhas com origens e destinos em estado de componentes}\par
39     {\cf18 void} CsvEscreveLInterL1InterL2(QTextStream* );\par
40     {\cf20 //escreve Linhas com origens em estado de componentes e todos destinos}\par
41     {\cf18 void} CsvEscreveLInterL1TodL2(QTextStream* );\par
42     {\cf20 //escreve Linhas com todas origens e destinos em componenetes}\par
43     {\cf18 void} CsvEscreveLTodL1InterL2(QTextStream* );\par
44     {\cf20 //escreve Linhas de todas origens e destinos}\par
45     {\cf18 void} CsvEscreveLTodL1TodL2(QTextStream* );\par
46 \};\par
47 \par
48 {\cf21 #endif }{\cf20 // EXPORTARCSV_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarexcel.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/exportarexcel.cpp}
{\xe \v D:/QT/EletricData/exportarexcel.cpp}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "exportarexcel.h"}\par
{\f2 #include "filtrolinha.h"}\par
{\f2 #include "filtrosbarra.h"}\par
{\f2 #include "framebarras.h"}\par
{\f2 #include <QMessageBox>}\par
{\f2 #include <QDir>}\par
{\f2 #include <QFileDialog>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b parentExportarExcel}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v parentExportarExcel\:exportarexcel.cpp}
{\xe \v exportarexcel.cpp\:parentExportarExcel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget* parentExportarExcel}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarexcel.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/exportarexcel.h}
{\xe \v D:/QT/EletricData/exportarexcel.h}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "xlsxdocument.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExportarExcel}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarexcel.h\par \pard\plain 
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef EXPORTAREXCEL_H}\par
3 {\cf21 #define EXPORTAREXCEL_H}\par
4 \par
5 {\cf21 #include "xlsxdocument.h"}\par
6 \par
7 {\cf17 using namespace }QXlsx;\par
8 \par
9 \par
10 {\cf17 class }ExportarExcel\par
11 \{\par
12 {\cf17 public}:\par
13     {\cf17 explicit} ExportarExcel(QWidget *parent = {\cf17 nullptr});\par
14 \par
15     {\cf20 //----------Fun\'E7\'F5es Excel}\par
16     {\cf20 //Fun\'E7\'F5es para imprimir excel com barras em intervalo}\par
17     {\cf18 void} ExcelInterBInterL1InterL2();\par
18     {\cf18 void} ExcelInterBInterL1TodL2();\par
19     {\cf18 void} ExcelInterBarrasTodL1InterL2();\par
20     {\cf18 void} ExcelInterBarrasTodL1TodL2();\par
21     {\cf20 //Fun\'E7\'F5es para imprimir Excel com barras em componentes}\par
22     {\cf18 void} ExcelCompBarrasInterL2InterL2();\par
23     {\cf18 void} ExcelCompBarrasInterL1TodL2();\par
24     {\cf18 void} ExcelCompBarrasTodL1InterL2();\par
25     {\cf18 void} ExcelCompBarrasaTodL1TodL2();\par
26     {\cf20 //Fun\'E7\'F5es de para imprimir Excel com barras infectadas}\par
27     {\cf18 void} ExcelInfecBarrasInterL1InterL2();\par
28     {\cf18 void} ExcelInfecBarrasInterL1TodL2();\par
29     {\cf18 void} ExcelInfecBarrasTodL1InterL2();\par
30     {\cf18 void} ExcelInfecBarrasTodL1TodL2();\par
31     QString numeroParaLetra({\cf18 int} numero);\par
32     {\cf20 //Fun\'E7\'F5es Auxiliares}\par
33     {\cf20 //Cria planilha}\par
34     QXlsx::Document* criaPlanilha();\par
35     {\cf20 //pula linhas entre barras e Linhas}\par
36     {\cf18 void} ExcelPulaLinha({\cf18 int}* );\par
37     {\cf20 //Salva Planilha}\par
38     {\cf18 void} salvaPlanilha(QXlsx::Document* );\par
39     {\cf20 //escreve as barras em intervalo}\par
40     {\cf18 void} ExcelEscreveBarrasIntervalo(QXlsx::Document* , {\cf18 int}* );\par
41     {\cf20 //escreve as barras em componentes}\par
42     {\cf18 void} ExcelEscreveBarrasComp(QXlsx::Document* , {\cf18 int}*  );\par
43     {\cf20 //escreve as barras Infectadas}\par
44     {\cf18 void} ExcelEscreveBarrasInfec(QXlsx::Document* , {\cf18 int}* );\par
45     {\cf20 //escreve Linhas com origens e destinos em estado de componentes}\par
46     {\cf18 void} ExcelEscreveLInterL1InterL2(QXlsx::Document* , {\cf18 int}* );\par
47     {\cf20 //escreve Linhas com origens em estado de componentes e todos destinos}\par
48     {\cf18 void} ExcelEscreveLInterL1TodL2(QXlsx::Document*, {\cf18 int}*  );\par
49     {\cf20 //escreve Linhas com todas origens e destinos em componenetes}\par
50     {\cf18 void} ExcelEscreveLTodL1InterL2(QXlsx::Document* , {\cf18 int}* );\par
51     {\cf20 //escreve Linhas de todas origens e destinos}\par
52     {\cf18 void} ExcelEscreveLTodL1TodL2(QXlsx::Document*, {\cf18 int}* );\par
53 \par
54 \};\par
55 \par
56 {\cf21 #endif }{\cf20 // EXPORTAREXCEL_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarpdf.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/exportarpdf.cpp}
{\xe \v D:/QT/EletricData/exportarpdf.cpp}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "exportarpdf.h"}\par
{\f2 #include "framebarras.h"}\par
{\f2 #include <QMessageBox>}\par
{\f2 #include <QDir>}\par
{\f2 #include <QDesktopServices>}\par
{\f2 #include <QFileDialog>}\par
{\f2 #include <QDebug>}\par
{\f2 #include <QFont>}\par
{\f2 #include <QUrl>}\par
{\f2 #include <QFontMetrics>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b parenteExportarPdf}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v parenteExportarPdf\:exportarpdf.cpp}
{\xe \v exportarpdf.cpp\:parenteExportarPdf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget* parenteExportarPdf}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QWidget *parenteExportarPdf; \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarpdf.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/exportarpdf.h}
{\xe \v D:/QT/EletricData/exportarpdf.h}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QPdfWriter>}\par
{\f2 #include <QPrinter>}\par
{\f2 #include <QPainter>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExportarPdf}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para pdf Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarpdf.h\par \pard\plain 
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef EXPORTARPDF_H}\par
3 {\cf21 #define EXPORTARPDF_H}\par
4 \par
5 {\cf21 #include <QPdfWriter>}\par
6 {\cf21 #include <QPrinter>}\par
7 {\cf21 #include<QPainter>}\par
8 \par
9 \par
10 {\cf17 class }ExportarPdf\par
11 \{\par
12 {\cf17 public}:\par
13     {\cf17 explicit} ExportarPdf(QWidget *parent = {\cf17 nullptr});\par
14 \par
15     {\cf20 //----------Fun\'E7\'F5es PDF}\par
16     {\cf20 //Fun\'E7\'F5es para imprimir PDF com barras em intervalo}\par
17     {\cf18 void} PdfInterBInterL1InterL2();\par
18     {\cf18 void} PdfInterBInterL1TodL2();\par
19     {\cf18 void} PdfInterBarrasTodL1InterL2();\par
20     {\cf18 void} PdfInterBarrasTodL1TodL2();\par
21     {\cf20 //Fun\'E7\'F5es para imprimir PDF com barras em componentes}\par
22     {\cf18 void} PdfCompBarrasInterL1InterL2();\par
23     {\cf18 void} PdfCompBarrasInterL1TodL2();\par
24     {\cf18 void} PdfCompBarrasTodL1InterL2();\par
25     {\cf18 void} PdfCompBarrasaTodL1TodL2();\par
26     {\cf20 //Fun\'E7\'F5es de para imprimir PDF com barras infectadas}\par
27     {\cf18 void} PdfInfecBarrasInterL1InterL2();\par
28     {\cf18 void} PdfInfecBarrasInterL1TodL2();\par
29     {\cf18 void} PdfInfecBarrasTodL1InterL2();\par
30     {\cf18 void} PdfInfecBarrasTodL1TodL2();\par
31     {\cf20 //Fun\'E7\'F5es Auxiliares}\par
32     {\cf20 //Fun\'E7\'F5es os conteudos com barras em intervalo}\par
33     {\cf18 void} ContInterBInterL1InterL2(QPrinter* );\par
34     {\cf18 void} ContInterBInterL1TodL2(QPrinter* );\par
35     {\cf18 void} ContInterBarrasTodL1InterL2(QPrinter* );\par
36     {\cf18 void} ContInterBarrasTodL1TodL2(QPrinter* );\par
37     {\cf20 //Fun\'E7\'F5es para imprimir PDF com barras em componentes}\par
38     {\cf18 void} ContCompBarrasInterL1InterL2(QPrinter* );\par
39     {\cf18 void} ContCompBarrasInterL1TodL2(QPrinter* );\par
40     {\cf18 void} ContCompBarrasTodL1InterL2(QPrinter* );\par
41     {\cf18 void} ContCompBarrasaTodL1TodL2(QPrinter* );\par
42     {\cf20 //Fun\'E7\'F5es de para imprimir PDF com barras infectadas}\par
43     {\cf18 void} ContInfecBarrasInterL1InterL2(QPrinter* );\par
44     {\cf18 void} ContInfecBarrasInterL1TodL2(QPrinter* );\par
45     {\cf18 void} ContInfecBarrasTodL1InterL2(QPrinter* );\par
46     {\cf18 void} ContInfecBarrasTodL1TodL2(QPrinter* );\par
47 \par
48 \par
49     {\cf20 //cacula quantidade de linhas que uma barra ir\'E1 ocupar no sistema}\par
50     {\cf18 int}  QtdLinhasInfoBarra();\par
51     {\cf18 int}  QtdLinhasInfoLinha();\par
52 \};\par
53 \par
54 {\cf21 #endif }{\cf20 // EXPORTARPDF_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/filtrolinha.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/filtrolinha.cpp}
{\xe \v D:/QT/EletricData/filtrolinha.cpp}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "filtrolinha.h"}\par
{\f2 #include "ui_filtrolinha.h"}\par
{\f2 #include "style.h"}\par
{\f2 #include "framebarras.h"}\par
{\f2 #include <QMessageBox>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::FrameBarras * {\b frameBarras2}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameBarras}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v frameBarras2\:filtrolinha.cpp}
{\xe \v filtrolinha.cpp\:frameBarras2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::FrameBarras* frameBarras2}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameBarras}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable Ui::FrameBarras *frameBarras2 \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/filtrolinha.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/filtrolinha.h}
{\xe \v D:/QT/EletricData/filtrolinha.h}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QDialog>}\par
{\f2 #include "ui_filtrolinha.h"}\par
{\f2 #include "ui_framebarras.h"}\par
{\f2 #include "mainwindow.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FiltroLinha}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableLinhas do {\b FrameBarras}. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/filtrolinha.h\par \pard\plain 
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FILTROLINHA_H}\par
2 {\cf21 #define FILTROLINHA_H}\par
3 \par
4 {\cf21 #include <QDialog>}\par
5 {\cf21 #include "ui_filtrolinha.h"}\par
6 {\cf21 #include "ui_framebarras.h"}\par
7 {\cf21 #include "mainwindow.h"}\par
8 {\cf17 namespace }Ui \{\par
9 {\cf17 class }FiltroLinha;\par
10 \}\par
11 \par
12 {\cf17 class }FiltroLinha : {\cf17 public} QDialog\par
13 \{\par
14     Q_OBJECT\par
15 \par
16 {\cf17 public}:\par
17     {\cf17 explicit} FiltroLinha(QWidget *parent = {\cf17 nullptr}, Ui::FrameBarras *fb={\cf17 nullptr});\par
18     ~FiltroLinha();\par
19     {\cf17 static} {\cf18 bool} correntePu;\par
20     {\cf17 static} {\cf18 bool} dht;\par
21     {\cf17 static} {\cf18 bool} dit;\par
22     {\cf17 static} {\cf18 bool} ditPercent;\par
23     {\cf17 static} {\cf18 bool} correnteEficaz;\par
24     {\cf17 static} {\cf18 bool} resistencia;\par
25     {\cf17 static} {\cf18 bool} perdas;\par
26     {\cf17 static} {\cf18 bool} perdasEficaz;\par
27     {\cf17 static} {\cf18 int} indexComboBoxOrigem;\par
28     {\cf17 static} {\cf18 int} indexComboBoxDestino;\par
29     {\cf17 static} {\cf18 int} indexComboBoxOrigemEnvio;\par
30     {\cf17 static} {\cf18 int} indexComboBoxDestinoEnvio;\par
31 \par
32     {\cf18 void} inserindoQssFiltrosLinha();\par
33     {\cf18 void} inserindoQssCheckBox();\par
34     {\cf18 void} inserindoQssLineEdit();\par
35     {\cf18 void} inserindoQssBtnAplicar();\par
36     {\cf18 void} inserindoQssComboBox();\par
37     {\cf18 void} inserindoQssGroupBox();\par
38     {\cf18 void} inserindoQssJanela();\par
39     {\cf18 void} inicializandoFrame();\par
40     {\cf17 static} QStringList indiceOrigensEscolhidas;\par
41     {\cf17 static} QStringList indiceDestinosEscolhidos;\par
42 \par
43     {\cf18 void} atualizaVariaveis();\par
44     {\cf18 void} filtrarLinhasTabela();\par
45     {\cf18 void} filtrarColunasTabela();\par
46     {\cf18 void} filtrarColTod1Tod2();\par
47     {\cf18 void} filtrarColTod1Ind2();\par
48     {\cf18 void} filtrarColInd1Tod2();\par
49     {\cf18 void} filtrarColInd1Ind2();\par
50 \par
51 \par
52 \par
53 {\cf17 private} slots:\par
54 \par
55     {\cf18 void} on_comboBoxOrigem_currentIndexChanged({\cf18 int} index);\par
56 \par
57     {\cf18 void} on_comboBoxDestino_currentIndexChanged({\cf18 int} index);\par
58 \par
59     {\cf18 void} on_btnAplicar_clicked();\par
60 \par
61 {\cf17 private}:\par
62     Ui::FiltroLinha *ui;\par
63 \};\par
64 \par
65 {\cf21 #endif }{\cf20 // FILTROLINHA_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/filtrosbarra.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/filtrosbarra.cpp}
{\xe \v D:/QT/EletricData/filtrosbarra.cpp}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "filtrosbarra.h"}\par
{\f2 #include "ui_filtrosbarra.h"}\par
{\f2 #include "style.h"}\par
{\f2 #include "framebarras.h"}\par
{\f2 #include <QMessageBox>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::FrameBarras * {\b frameBarras}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameBarras}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v frameBarras\:filtrosbarra.cpp}
{\xe \v filtrosbarra.cpp\:frameBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::FrameBarras* frameBarras}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameBarras}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable Ui::FrameBarras *frameBarras \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/filtrosbarra.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/filtrosbarra.h}
{\xe \v D:/QT/EletricData/filtrosbarra.h}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QDialog>}\par
{\f2 #include "ui_filtrosbarra.h"}\par
{\f2 #include "ui_framebarras.h"}\par
{\f2 #include "mainwindow.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FiltrosBarra}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableBarras do {\b FrameBarras}. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/filtrosbarra.h\par \pard\plain 
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FILTROSBARRA_H}\par
2 {\cf21 #define FILTROSBARRA_H}\par
3 \par
4 {\cf21 #include <QDialog>}\par
5 {\cf21 #include "ui_filtrosbarra.h"}\par
6 {\cf21 #include "ui_framebarras.h"}\par
7 {\cf21 #include "mainwindow.h"}\par
8 \par
9 {\cf17 namespace }Ui \{\par
10 {\cf17 class }FiltrosBarra;\par
11 \}\par
12 \par
13 {\cf17 class }FiltrosBarra : {\cf17 public} QDialog\par
14 \{\par
15     Q_OBJECT\par
16 \par
17 {\cf17 public}:\par
18     {\cf17 explicit} FiltrosBarra(QWidget *parent = {\cf17 nullptr} , Ui::FrameBarras *fb={\cf17 nullptr});\par
19     ~FiltrosBarra();\par
20     Ui::FiltrosBarra* getUi()\{\par
21         {\cf19 return} ui;\par
22     \}\par
23     {\cf17 static} {\cf18 bool} tensaoPu;\par
24     {\cf17 static} {\cf18 bool} tensaoNominal;\par
25     {\cf17 static} {\cf18 bool} thdv;\par
26     {\cf17 static} {\cf18 bool} dit;\par
27     {\cf17 static} {\cf18 bool} ditPercent;\par
28     {\cf17 static} {\cf18 bool} tensaoEficaz;\par
29     {\cf17 static} {\cf18 int} indexComboBox;\par
30     {\cf17 static} {\cf18 int} indexComboBoxEnvio;\par
31     {\cf17 static} QStringList indiceBarrasEscolhidas;\par
32     {\cf18 void} inserindoQssFiltrosBarra();\par
33     {\cf18 void} inserindoQssCheckBox();\par
34     {\cf18 void} inserindoQssLineEdit();\par
35     {\cf18 void} inserindoQssBtnAplicar();\par
36     {\cf18 void} inserindoQssComboBox();\par
37     {\cf18 void} inserindoQssGroupBox();\par
38     {\cf18 void} inserindoQssJanela();\par
39     {\cf18 void} inicializandoFrame();\par
40 \par
41     {\cf18 void} atualizaVariaveis();\par
42     {\cf18 void} filtrarLinhasTabela();\par
43     {\cf18 void} filtrarColunasTabela();\par
44     {\cf18 void} filtrarColunasPorIndices();\par
45     {\cf18 void} filtrarColunasPorFaixa();\par
46     {\cf18 void} filtrarColunasPorMarcadores();\par
47 \par
48 {\cf17 private} slots:\par
49     {\cf18 void} on_comboBoxFBarra_currentIndexChanged({\cf18 int} index);\par
50 \par
51     {\cf18 void} on_btnAplicar_clicked();\par
52 \par
53 {\cf17 private}:\par
54     Ui::FiltrosBarra *ui;\par
55 \};\par
56 \par
57 {\cf21 #endif }{\cf20 // FILTROSBARRA_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/framebarras.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/framebarras.cpp}
{\xe \v D:/QT/EletricData/framebarras.cpp}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "framebarras.h"}\par
{\f2 #include "ui_framebarras.h"}\par
{\f2 #include "style.h"}\par
{\f2 #include <QMessageBox>}\par
{\f2 #include <QDebug>}\par
{\f2 #include <QCoreApplication>}\par
{\f2 #include <QtMath>}\par
{\f2 #include "frameexportar.h"}\par
{\f2 #include "frametensoes.h"}\par
{\f2 #include "Barra.h"}\par
{\f2 #include "mainwindow.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::FrameTensoes * {\b frameT}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameTensoes}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::MainWindow * {\b frameM}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b MainWindow}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b p}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v frameM\:framebarras.cpp}
{\xe \v framebarras.cpp\:frameM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::MainWindow* frameM}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b MainWindow}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable Ui::MainWindow *frameM \par
}}
{\xe \v frameT\:framebarras.cpp}
{\xe \v framebarras.cpp\:frameT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::FrameTensoes* frameT}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameTensoes}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable Ui::FrameTensoes *frameT \par
}}
{\xe \v p\:framebarras.cpp}
{\xe \v framebarras.cpp\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget* p}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QWidget *p; \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/framebarras.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/framebarras.h}
{\xe \v D:/QT/EletricData/framebarras.h}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QFrame>}\par
{\f2 #include "ui_frametensoes.h"}\par
{\f2 #include "ui_mainwindow.h"}\par
{\f2 #include "mainwindow.h"}\par
{\f2 #include "frametensoes.h"}\par
{\f2 #include "filtrosbarra.h"}\par
{\f2 #include "ui_filtrosbarra.h"}\par
{\f2 #include "filtrolinha.h"}\par
{\f2 #include "ui_filtrolinha.h"}\par
{\f2 #include "Barra.h"}\par
{\f2 #include "Linha.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FrameBarras}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pelo armazenamento dos dados em nos atributos da classes {\b Barra} e {\b Linha}. Al\'E9m de etregar ao us\'FAario uma TabWidget amig\'E1vel, para que possa filtrar os dados que quiser para realizar sua an\'E1lise. @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/framebarras.h\par \pard\plain 
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FRAMEBARRAS_H}\par
2 {\cf21 #define FRAMEBARRAS_H}\par
3 \par
4 {\cf21 #include <QFrame>}\par
5 {\cf21 #include "ui_frametensoes.h"}\par
6 {\cf21 #include "ui_mainwindow.h"}\par
7 {\cf21 #include "mainwindow.h"}\par
8 {\cf21 #include "frametensoes.h"}\par
9 {\cf21 #include "filtrosbarra.h"}\par
10 {\cf21 #include "ui_filtrosbarra.h"}\par
11 {\cf21 #include "filtrolinha.h"}\par
12 {\cf21 #include "ui_filtrolinha.h"}\par
13 {\cf21 #include "Barra.h"}\par
14 {\cf21 #include "Linha.h"}\par
15 \par
16 {\cf17 namespace }Ui \{\par
17 {\cf17 class }FrameBarras;\par
18 \}\par
19 \par
20 {\cf17 class }FrameBarras : {\cf17 public} QFrame\par
21 \{\par
22     Q_OBJECT\par
23 \par
24 {\cf17 public}:\par
25     {\cf17 explicit} FrameBarras(QWidget *parent = {\cf17 nullptr}, Ui::MainWindow *mw={\cf17 nullptr},Ui::FrameTensoes *ft={\cf17 nullptr});\par
26     ~FrameBarras();\par
27     {\cf18 int} buscaIndiceHarmMax();\par
28     {\cf17 inline} {\cf18 int} buscaQtdHarm({\cf18 int} );\par
29     {\cf17 static} {\cf18 int} indexTab;\par
30     {\cf17 static} {\cf18 int} indiceHarmMax;\par
31     {\cf17 static} {\cf18 int} numeroDeLinhas;\par
32     {\cf17 static} {\cf18 int} quantidadeDeComponentesHarm;\par
33     {\cf18 void} preencheFrameBarras();\par
34     {\cf18 void} inicializaVariaveisStatic();\par
35     {\cf18 void} inicializaFrame();\par
36     QStringList cabecalhoBarras();\par
37     QStringList cabecalhoLinhas();\par
38     {\cf18 void} preencheBarra();\par
39     {\cf18 void} inicializaBarra();\par
40     QStringList linhasDoSistema();\par
41     {\cf17 inline} {\cf18 double} potencia({\cf18 double} , {\cf18 int} );\par
42     {\cf18 void} insereQssBtnAvancar();\par
43     {\cf18 void} insereQssBtnVoltar();\par
44     {\cf18 void} insereQssTabWidget();\par
45     {\cf18 void} insereQssTableBarras();\par
46     {\cf18 void} insereQssTableLinhas();\par
47     {\cf18 void} insereQssFrameBarras();\par
48     {\cf18 void} preencheTabelaBarra();\par
49     {\cf18 void} preencheTabelaLinha();\par
50     {\cf18 void} preencheLimites();\par
51     {\cf17 static} QList<Barra> barras;\par
52     {\cf17 static} QList<Linha> linhas;\par
53     {\cf18 void} insereQSSBtnFiltrar();\par
54     {\cf18 void} preencheLinha();\par
55     {\cf18 void} inicializaLinha();\par
56     {\cf17 static} {\cf18 bool} filtroLinhaInserido;\par
57     {\cf17 static} {\cf18 bool} filtroBarraInserido;\par
58     {\cf17 static} std::map<int , std::map<int , double >> getLimitesDti()\{\par
59         {\cf19 return} limitesDti;\par
60     \}\par
61 \par
62     {\cf17 static} {\cf18 void} setLimitesDti({\cf18 int} nivelTensao , {\cf18 int} harmonica , {\cf18 double} limite)\{\par
63         limitesDti[nivelTensao][harmonica] = limite;\par
64     \}\par
65 \par
66 \par
67     {\cf18 void} insereBackgroundNasPoluidoras();\par
68     {\cf18 void} verificaAvanco();\par
69 \par
70 {\cf17 private} slots:\par
71 \par
72 \par
73     {\cf18 void} on_btnFiltrar_clicked();\par
74 \par
75     {\cf18 void} on_tabLinhas_currentChanged({\cf18 int} index);\par
76 \par
77     {\cf18 void} on_btnVoltar_clicked();\par
78 \par
79     {\cf18 void} on_btnAvancar_clicked();\par
80 \par
81 {\cf17 private}:\par
82     Ui::FrameBarras *ui;\par
83     {\cf17 static} std::map<int , std::map<int , double >> limitesDti;\par
84 \par
85 \};\par
86 \par
87 {\cf21 #endif }{\cf20 // FRAMEBARRAS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/frameexportar.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/frameexportar.cpp}
{\xe \v D:/QT/EletricData/frameexportar.cpp}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "frameexportar.h"}\par
{\f2 #include "ui_frameexportar.h"}\par
{\f2 #include "style.h"}\par
{\f2 #include "mainwindow.h"}\par
{\f2 #include "ui_mainwindow.h"}\par
{\f2 #include "ui_framebarras.h"}\par
{\f2 #include "exportarpdf.h"}\par
{\f2 #include "exportarexcel.h"}\par
{\f2 #include "exportarcsv.h"}\par
{\f2 #include "filtrolinha.h"}\par
{\f2 #include "filtrosbarra.h"}\par
{\f2 #include <QDebug>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::MainWindow * {\b frameMa}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b MainWindow}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::FrameBarras * {\b frameB}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameBarras}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b pa}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v frameB\:frameexportar.cpp}
{\xe \v frameexportar.cpp\:frameB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::FrameBarras* frameB}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameBarras}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable Ui::FrameBarras *frameB \par
}}
{\xe \v frameMa\:frameexportar.cpp}
{\xe \v frameexportar.cpp\:frameMa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::MainWindow* frameMa}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b MainWindow}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable Ui::MainWindow *frameMa \par
}}
{\xe \v pa\:frameexportar.cpp}
{\xe \v frameexportar.cpp\:pa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget* pa}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QWidget *pa; \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/frameexportar.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/frameexportar.h}
{\xe \v D:/QT/EletricData/frameexportar.h}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QFrame>}\par
{\f2 #include "ui_mainwindow.h"}\par
{\f2 #include "mainwindow.h"}\par
{\f2 #include "ui_framebarras.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FrameExportar}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela exporta\'E7\'E3o dos dados em 3 formatos diferentes ( Pdf , Excel e .csv ) @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/frameexportar.h\par \pard\plain 
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FRAMEEXPORTAR_H}\par
2 {\cf21 #define FRAMEEXPORTAR_H}\par
3 \par
4 {\cf21 #include <QFrame>}\par
5 {\cf21 #include "ui_mainwindow.h"}\par
6 {\cf21 #include "mainwindow.h"}\par
7 {\cf21 #include "ui_framebarras.h"}\par
8 \par
9 \par
10 \par
11 \par
12 {\cf17 namespace }Ui \{\par
13 {\cf17 class }FrameExportar;\par
14 \}\par
15 \par
16 {\cf17 class }FrameExportar : {\cf17 public} QFrame\par
17 \{\par
18     Q_OBJECT\par
19 \par
20 {\cf17 public}:\par
21     {\cf17 explicit} FrameExportar(QWidget *parent = {\cf17 nullptr}, Ui::MainWindow *mw={\cf17 nullptr},  Ui::FrameBarras *fb={\cf17 nullptr});\par
22     ~FrameExportar();\par
23 \par
24     {\cf18 void} inserirQssFrame();\par
25     {\cf18 void} inserirQssImg();\par
26     {\cf18 void} inserirQssRadioButton();\par
27     {\cf18 void} inserirQssBtn();\par
28     {\cf18 void} inicializaFrame();\par
29 \par
30     {\cf18 void} ExportacaoParaPdf();\par
31     {\cf18 void} ExportacaoParaExcel();\par
32     {\cf18 void} ExportacaoParaCsv();\par
33 \par
34 \par
35 {\cf17 private} slots:\par
36     {\cf18 void} on_btnVoltar_clicked();\par
37 \par
38     {\cf18 void} on_btnExportar_clicked();\par
39 \par
40 {\cf17 private}:\par
41     Ui::FrameExportar *ui;\par
42 \};\par
43 \par
44 {\cf21 #endif }{\cf20 // FRAMEEXPORTAR_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/frametensoes.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/frametensoes.cpp}
{\xe \v D:/QT/EletricData/frametensoes.cpp}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "frametensoes.h"}\par
{\f2 #include "framebarras.h"}\par
{\f2 #include <QFile>}\par
{\f2 #include <QFileDialog>}\par
{\f2 #include <QMessageBox>}\par
{\f2 #include <QScrollBar>}\par
{\f2 #include <QDebug>}\par
{\f2 #include <QTextStream>}\par
{\f2 #include "style.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::MainWindow * {\b frameMain}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b MainWindow}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v frameMain\:frametensoes.cpp}
{\xe \v frametensoes.cpp\:frameMain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::MainWindow* frameMain}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b MainWindow}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable Ui::MainWindow *frameMain \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/frametensoes.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/frametensoes.h}
{\xe \v D:/QT/EletricData/frametensoes.h}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QFrame>}\par
{\f2 #include "mainwindow.h"}\par
{\f2 #include "QMainWindow"}\par
{\f2 #include <ui_mainwindow.h>}\par
{\f2 #include <QObject>}\par
{\f2 #include <utility>}\par
{\f2 #include <QTableWidgetItem>}\par
{\f2 #include <QTableWidget>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FrameTensoes}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela aquisi\'E7\'E3o dos dados de tens\'E3o nominal do sistema el\'E9trico @reentrant Essa janela foi construida com 1 frame que se posiciona no mesmo local do frame respons\'E1vel por receber os arquivos no {\b MainWindow}, nele h\'E1 um QTableWidget para inser\'E7\'E3o dos valores das tens\'F5es, seja por inser\'E7\'E3o manual ou para importar um arquivo com esses dados. Al\'E9m de bot\'F5es de salva, avan\'E7ar e voltar. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/frametensoes.h\par \pard\plain 
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FRAMETENSOES_H}\par
2 {\cf21 #define FRAMETENSOES_H}\par
3 \par
4 {\cf21 #include <QFrame>}\par
5 {\cf21 #include "mainwindow.h"}\par
6 {\cf21 #include "QMainWindow"}\par
7 {\cf21 #include<ui_mainwindow.h>}\par
8 {\cf21 #include<QObject>}\par
9 {\cf21 #include<utility>}\par
10 {\cf21 #include <QTableWidgetItem>}\par
11 {\cf21 #include <QTableWidget>}\par
12 \par
13 \par
14 \par
15 \par
16 \par
17 {\cf17 namespace }Ui \{\par
18 {\cf17 class }FrameTensoes;\par
19 {\cf17 class }MainWindow;\par
20 \}\par
21 \par
22 {\cf17 class }FrameTensoes : {\cf17 public} QFrame\par
23 \{\par
24     Q_OBJECT\par
25 \par
26 {\cf17 public}:\par
27     {\cf17 explicit} FrameTensoes(QWidget *parent = {\cf17 nullptr}, Ui::MainWindow *mw={\cf17 nullptr});\par
28     ~FrameTensoes();\par
29     {\cf18 int} quantidadeDeBarras();\par
30     {\cf17 static} QList<double> tensoesNominais;\par
31     {\cf18 void} insereQssBotaoAvancar();\par
32     {\cf18 void} insereQssImportar();\par
33     {\cf18 void} insereQssBtnVoltar();\par
34     {\cf18 void} insereQssBtnLixeira();\par
35     {\cf18 void} insereQssBtnSalvar();\par
36     {\cf17 inline} {\cf18 void} insereQssFrame();\par
37     {\cf18 void} insereTableTensoes();\par
38     {\cf18 void} insereQssFrameTensoes();\par
39     {\cf17 static} {\cf18 int} numeroDeBarras;\par
40     {\cf18 void} inicializaFrame();\par
41     {\cf18 bool} tabelaTensoesPreenchida();\par
42 \par
43 {\cf17 private} slots:\par
44 \par
45 \par
46     {\cf18 void} on_btnVoltar_clicked();\par
47 \par
48     {\cf18 void} on_btnImportar_clicked();\par
49 \par
50     {\cf18 void} on_btnLixeira_clicked();\par
51 \par
52     {\cf18 void} on_btnSalvarTabela_clicked();\par
53 \par
54     {\cf18 void} on_btnAvancar_clicked();\par
55 \par
56     {\cf18 void} verificarPreenchimentoTabela(QTableWidgetItem* item);\par
57 \par
58 \par
59 {\cf17 private}:\par
60     Ui::FrameTensoes *ui;\par
61 \par
62 \};\par
63 \par
64 {\cf21 #endif }{\cf20 // FRAMETENSOES_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/Linha.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/Linha.h}
{\xe \v D:/QT/EletricData/Linha.h}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <utility>}\par
{\f2 #include <QObject>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Linha}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/Linha.h\par \pard\plain 
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef LINHA_H}\par
3 {\cf21 #define LINHA_H}\par
4 {\cf21 #include<utility>}\par
5 {\cf21 #include<QObject>}\par
6 {\cf21 #endif }{\cf20 // LINHA_H}\par
7 \par
8 {\cf17 class }Linha\{\par
9 {\cf17 public}:\par
10     {\cf18 int} getOrigem() \{\par
11         {\cf19 return} origem;\par
12     \}\par
13 \par
14     {\cf18 void} setOrigem({\cf18 int} origem) \{\par
15         this->origem = origem;\par
16     \}\par
17 \par
18     {\cf18 int} getDestino() \{\par
19         {\cf19 return} destino;\par
20     \}\par
21 \par
22     {\cf18 void} setDestino({\cf18 int} destino) \{\par
23         this->destino = destino;\par
24     \}\par
25 \par
26     {\cf18 double} getCorrente() \{\par
27         {\cf19 return} corrente;\par
28     \}\par
29 \par
30     {\cf18 void} setCorrente({\cf18 double} corrente) \{\par
31         this->corrente = corrente;\par
32     \}\par
33 \par
34     {\cf18 double} getDhtPercent() \{\par
35         {\cf19 return} dhtPercent;\par
36     \}\par
37 \par
38     {\cf18 void} setDhtPercent({\cf18 double} dhtPercent) \{\par
39         this->dhtPercent = dhtPercent;\par
40     \}\par
41 \par
42     {\cf18 double} getResistencia() \{\par
43         {\cf19 return} resistencia;\par
44     \}\par
45 \par
46     {\cf18 void} setResistencia({\cf18 double} resistencia) \{\par
47         this->resistencia = resistencia;\par
48     \}\par
49 \par
50     {\cf18 double} getPerdas() \{\par
51         {\cf19 return} perdas;\par
52     \}\par
53 \par
54     {\cf18 void} setPerdas({\cf18 double} perdas) \{\par
55         this->perdas = perdas;\par
56     \}\par
57 \par
58     {\cf18 double} getCorrenteEficaz() \{\par
59         {\cf19 return} correnteEficaz;\par
60     \}\par
61 \par
62     {\cf18 void} setCorrenteEficaz({\cf18 double} correnteEficaz) \{\par
63         this->correnteEficaz = correnteEficaz;\par
64     \}\par
65 \par
66     {\cf18 double} getPerdasEficaz() \{\par
67         {\cf19 return} perdasEficaz;\par
68     \}\par
69 \par
70     {\cf18 void} setPerdasEficaz({\cf18 double} perdasEficaz) \{\par
71         this->perdasEficaz = perdasEficaz;\par
72     \}\par
73 \par
74     {\cf18 bool} getLinhaInfectadaDht() \{\par
75         {\cf19 return} linhaInfectadaDht;\par
76     \}\par
77 \par
78     {\cf18 void} setLinhaInfectadaDht({\cf18 bool} infectada) \{\par
79         linhaInfectadaDht = infectada;\par
80     \}\par
81 \par
82     std::map<int, std::pair<double, double>> getDti()\{\par
83         {\cf19 return} dti;\par
84     \}\par
85 \par
86     {\cf18 void} setDti({\cf18 int} key1, {\cf18 double} dAbsolut ,  {\cf18 double} dPercent) \{\par
87         this->dti.insert(\{key1,\{dAbsolut,dPercent\}\});\par
88     \}\par
89 \par
90 {\cf17 private}:\par
91     {\cf18 int} origem;\par
92     {\cf18 int} destino;\par
93     {\cf18 double} corrente;\par
94     {\cf18 double} dhtPercent;\par
95     {\cf18 double} resistencia;\par
96     {\cf18 double} perdas;\par
97     {\cf18 double} correnteEficaz;\par
98     {\cf18 double} perdasEficaz;\par
99     {\cf18 bool} linhaInfectadaDht;\par
100     std::map<int, std::pair<double, double>> dti;\par
101 \par
102 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/main.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/main.cpp}
{\xe \v D:/QT/EletricData/main.cpp}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "mainwindow.h"}\par
{\f2 #include <QApplication>}\par
{\f2 #include <QLocale>}\par
{\f2 #include <QTranslator>}\par
{\f2 #include <QTimer>}\par
{\f2 #include <QSplashScreen>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17 \{\par
18     QApplication a(argc, argv);\par
19 \par
20     QTranslator translator;\par
21     {\cf17 const} QStringList uiLanguages = QLocale::system().uiLanguages();\par
22     {\cf19 for} ({\cf17 const} QString &locale : uiLanguages) \{\par
23         {\cf17 const} QString baseName = {\cf22 "EletricData_"} + QLocale(locale).name();\par
24         {\cf19 if} (translator.load({\cf22 ":/i18n/"} + baseName)) \{\par
25             a.installTranslator(&translator);\par
26             {\cf19 break};\par
27         \}\par
28     \}\par
29 \par
30     QSplashScreen *telaSplash={\cf17 new} QSplashScreen;\par
31     MainWindow w;\par
32     telaSplash->setPixmap(QPixmap({\cf22 ":/spash/imgs/spash/spash.jpg"}));\par
33     telaSplash->show();\par
34 \par
35     QTimer::singleShot(1000,telaSplash,SLOT(close()));\par
36     QTimer::singleShot(1000,&w,SLOT(show()));\par
37 \par
38 \par
39 \par
40     {\cf19 return} a.exec();\par
41 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/mainwindow.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/mainwindow.cpp}
{\xe \v D:/QT/EletricData/mainwindow.cpp}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "mainwindow.h"}\par
{\f2 #include "ui_mainwindow.h"}\par
{\f2 #include "style.h"}\par
{\f2 #include <QPropertyAnimation>}\par
{\f2 #include <QApplication>}\par
{\f2 #include "frametensoes.h"}\par
{\f2 #include <QTextStream>}\par
{\f2 #include <QMessageBox>}\par
{\f2 #include <QFileDialog>}\par
{\f2 #include <QFile>}\par
{\f2 #include <QDebug>}\par
{\f2 #include <QtCore/QCoreApplication>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/mainwindow.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/mainwindow.h}
{\xe \v D:/QT/EletricData/mainwindow.h}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QMainWindow>}\par
{\f2 #include <QFile>}\par
{\f2 #include <ui_mainwindow.h>}\par
{\f2 #include "style.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MainWindow}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela Principal do Programa @reentrant Essa janela foi construida com 2 frames, um com o intuito de funcionar como uma barra de status do andamento da aplica\'E7\'E3o(tendo 4 labels como sinalizadores) e o outro possui componentes repons\'E1veis por receber endere\'E7o de arquivos que ser\'E3o utilizados nos proximos frames para trataemnto de dados. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/mainwindow.h\par \pard\plain 
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef MAINWINDOW_H}\par
3 {\cf21 #define MAINWINDOW_H}\par
4 \par
5 {\cf21 #include <QMainWindow>}\par
6 {\cf21 #include<QFile>}\par
7 {\cf21 #include<ui_mainwindow.h>}\par
8 {\cf21 #include "style.h"}\par
9 \par
10 \par
11 \par
12 QT_BEGIN_NAMESPACE\par
13 {\cf17 namespace }Ui \{ {\cf17 class }MainWindow; \}\par
14 QT_END_NAMESPACE\par
15 \par
16 {\cf17 class }MainWindow : {\cf17 public} QMainWindow\par
17 \par
18 \{\par
19     Q_OBJECT\par
20 \par
21 {\cf17 public}:\par
22     MainWindow(QWidget *parent = {\cf17 nullptr});\par
23     ~MainWindow();\par
24     {\cf17 static} {\cf18 void} atualizarStatus(Ui::MainWindow *ui)\{\par
25         Style style;\par
26         {\cf19 switch}(frameAtual)\{\par
27         {\cf19 case} 0:\par
28             ui->txtCarregarArquivos->setStyleSheet(style.cssTxtSelected);\par
29             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
30             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
31             ui->txtExportar->setStyleSheet(style.cssTxt);\par
32             ui->lblVerifica1->hide();\par
33             ui->lblVerifica2->hide();\par
34             ui->lblVerifica3->hide();\par
35             ui->lblVerifica4->hide();\par
36             {\cf19 break};\par
37         {\cf19 case} 1:\par
38             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
39             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxtSelected);\par
40             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
41             ui->txtExportar->setStyleSheet(style.cssTxt);\par
42             ui->lblVerifica1->show();\par
43             ui->lblVerifica2->hide();\par
44             ui->lblVerifica3->hide();\par
45             ui->lblVerifica4->hide();\par
46             {\cf19 break};\par
47         {\cf19 case} 2:\par
48             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
49             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
50             ui->txtPrepararSaida->setStyleSheet(style.cssTxtSelected);\par
51             ui->txtExportar->setStyleSheet(style.cssTxt);\par
52             ui->lblVerifica1->show();\par
53             ui->lblVerifica2->show();\par
54             ui->lblVerifica3->hide();\par
55             ui->lblVerifica4->hide();\par
56             {\cf19 break};\par
57         {\cf19 case} 3:\par
58             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
59             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
60             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
61             ui->txtExportar->setStyleSheet(style.cssTxtSelected);\par
62             ui->lblVerifica1->show();\par
63             ui->lblVerifica2->show();\par
64             ui->lblVerifica3->show();\par
65             ui->lblVerifica4->hide();\par
66             {\cf19 break};\par
67         \}\par
68     \}\par
69 \par
70     {\cf18 void} insereQssMainWindow();\par
71     {\cf18 void} insereIcon();\par
72     {\cf18 void} insereQssBarraDeStatus();\par
73     {\cf18 void} verificarAvanco();\par
74     {\cf18 void} insereQssTitulosLineEdit();\par
75     {\cf18 void} insereQssLineEdit();\par
76     {\cf18 void} insereQssPlaceHolderLineEdit();\par
77     {\cf18 void} insereQssBtnArquivos();\par
78     {\cf18 void} insereQssBtnAvancar();\par
79     {\cf18 void} insereQssBtnLixeira();\par
80     {\cf18 void} insereQssLblVerifica();\par
81     {\cf18 void} setaFileNameNosArq();\par
82     {\cf18 void} inicializaFrame();\par
83 \par
84     {\cf17 static} QFile *arquivoVsoln;\par
85     {\cf17 static} QFile *arquivoIsoln;\par
86     {\cf17 static} QFile *arquivoThdi;\par
87     {\cf17 static} QFile *arquivoThdv;\par
88     {\cf17 static} QFile *arquivoLdat;\par
89     {\cf17 static} QFile *arquivoTensoes;\par
90     {\cf17 static} {\cf18 int} frameAtual;\par
91     {\cf18 bool} getStatusDePreenchimento({\cf18 int} posicao)\{\par
92         {\cf19 if}(posicao < 5 && posicao >=0)\{\par
93             {\cf19 return} statusDePreenchimento[posicao];\par
94         \}\par
95         {\cf19 else}\{\par
96             {\cf19 return} {\cf17 false};\par
97         \}\par
98     \}\par
99     {\cf18 void} setStatusDePreenchimento({\cf18 int} posicao, {\cf18 bool} status)\{\par
100         {\cf19 if}(posicao < 5 && posicao >=0)\{\par
101             statusDePreenchimento[posicao]=status;\par
102         \}\par
103     \}\par
104 \par
105 \par
106 {\cf17 private} slots:\par
107     {\cf18 void} on_btnAvancar_clicked();\par
108 \par
109     {\cf18 void} on_btnVsoln_clicked();\par
110 \par
111     {\cf18 void} on_btnThdv_clicked();\par
112 \par
113     {\cf18 void} on_btnThdi_clicked();\par
114 \par
115     {\cf18 void} on_btnIsoln_clicked();\par
116 \par
117     {\cf18 void} on_btnLdat_clicked();\par
118 \par
119     {\cf18 void} on_btnLixeiraVsoln_clicked();\par
120 \par
121     {\cf18 void} on_btnLixeiraThdv_clicked();\par
122 \par
123     {\cf18 void} on_btnLixeiraThdi_clicked();\par
124 \par
125     {\cf18 void} on_btnLixeiraIsoln_clicked();\par
126 \par
127     {\cf18 void} on_btnLixeiraLdat_clicked();\par
128 \par
129 {\cf17 private}:\par
130     Ui::MainWindow *ui;\par
131     {\cf18 bool} statusDePreenchimento[5]\{0\};\par
132 \par
133 \par
134 \par
135     {\cf20 //Metodo para atualizar a barra de Status}\par
136 \par
137 \};\par
138 \par
139 \par
140 \par
141 \par
142 \par
143 {\cf21 #endif }{\cf20 // MAINWINDOW_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/style.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/style.h}
{\xe \v D:/QT/EletricData/style.h}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QObject>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Style}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/style.h\par \pard\plain 
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef STYLE_H}\par
3 {\cf21 #define STYLE_H}\par
4 {\cf21 #include<QObject>}\par
5 \par
6 {\cf17 class }Style\{\par
7     {\cf17 public}:\par
8     QString corPrimaria={\cf22 "#1E385B"};\par
9     QString corSecundaria={\cf22 "#D3D3D3"};\par
10     QString corHoverBtn={\cf22 "#325a8f"};\par
11     QString segundaOpcao={\cf22 "#c7db79"};\par
12     QString branco={\cf22 "#FFFFFF"};\par
13     QString corSelected={\cf22 "#63d6db"};\par
14     QString cssTxt={\cf22 "border:none;"}\par
15                    {\cf22 "font-size:15px;"}\par
16                    {\cf22 "font-weight:500;"}\par
17                    {\cf22 "font-family: 'Roboto';"}\par
18                    {\cf22 "color:"}+branco+{\cf22 ";"};\par
19     QString cssTxtSelected= {\cf22 "font-size:17px;"}\par
20                             {\cf22 "font-weight:bold;"}\par
21                             {\cf22 "font-family: 'Roboto';"}\par
22                             {\cf22 "color:"}+corSelected+{\cf22 ";"};\par
23     QString cssStatusFrame={\cf22 "background-color:"}+corPrimaria+{\cf22 ";"};\par
24     QString cssTxtArquivos={\cf22 "border:none;"}\par
25                             {\cf22 "font-size:15px;"}\par
26                             {\cf22 "font-family: 'Roboto';"}\par
27                             {\cf22 "font-style:italic;"}\par
28                             {\cf22 "font-weight:600;"}\par
29                             {\cf22 "color:"}+corPrimaria+{\cf22 ";"};\par
30     QString cssFrameArq={\cf22 "QFrame\{"}\par
31                           {\cf22 "background-color:"}+corSecundaria+{\cf22 ";\}"};\par
32     QString cssLineEdit={\cf22 "QLineEdit\{"}\par
33                             {\cf22 "background-color:"}+branco+{\cf22 ";"}\par
34                             {\cf22 "font-size:12px;"}\par
35                             {\cf22 "border-radius:3px;\}"}\par
36                         {\cf22 "QLineEdit:hover\{"}\par
37                             {\cf22 "font-size:20px;"}\par
38                             {\cf22 "font-family: 'Roboto';"}\par
39                                      {\cf22 "border: 2px solid"}+corPrimaria+{\cf22 ";\}"};\par
40 \par
41     QString cssLineEditDisabled={\cf22 "QLineEdit\{"}\par
42                                   {\cf22 "background-color:"}+branco+{\cf22 ";"}\par
43                                      {\cf22 "font-size:12px;"}\par
44                                      {\cf22 "border-radius:3px;\}"}\par
45                                  {\cf22 "QLineEdit:hover\{"}\par
46                                      {\cf22 "font-size:20px;"}\par
47                                      {\cf22 "font-family: 'Roboto';"}\par
48                                      {\cf22 "border: 2px solid"}+corPrimaria+{\cf22 ";\}"}\par
49                                   {\cf22 "QLineEdit:disabled\{"}\par
50                                           {\cf22 "background-color:#808080;\}"};\par
51     QString cssBtn={\cf22 "QPushButton\{"}\par
52                          {\cf22 "border:2px solid "}+corPrimaria+{\cf22 ";"}\par
53                          {\cf22 "font-family: 'Roboto';"}\par
54                          {\cf22 "font-size:15px;"}\par
55                          {\cf22 "background-color:"}+corPrimaria+{\cf22 ";"}\par
56                          {\cf22 "color:white;"}\par
57                          {\cf22 "border-radius:5px;\}"}\par
58                     {\cf22 "QPushButton:hover\{"}\par
59                          {\cf22 "border:2px solid "}+corHoverBtn+{\cf22 ";"}\par
60                          {\cf22 "font-size:15px;"}\par
61                          {\cf22 "font-weight:bold;"}\par
62                          {\cf22 "color:white;"}\par
63                          {\cf22 "background-color:"}+corHoverBtn+{\cf22 ";\}"}\par
64                     {\cf22 "QPushButton:pressed\{"}\par
65                         {\cf22 "background-color: #0D2C4D;"}\par
66                         {\cf22 "color: #FFFFFF;\}"};\par
67 \par
68     QString cssBtnTransition={\cf22 "QPushButton\{"}\par
69                                      {\cf22 "border:2px solid "}+corPrimaria+{\cf22 ";"}\par
70                                      {\cf22 "font-family: 'Roboto';"}\par
71                                      {\cf22 "font-size: 15px;"}\par
72                                      {\cf22 "background-color:"}+corPrimaria+{\cf22 ";"}\par
73                                      {\cf22 "color:white;"}\par
74                                      {\cf22 "border-radius:5px;\}"}\par
75                              {\cf22 "QPushButton:hover\{"}\par
76                                      {\cf22 "border:2px solid "}+corHoverBtn+{\cf22 ";"}\par
77                                      {\cf22 "font-size: 15px;"}\par
78                                      {\cf22 "font-weight:bold;"}\par
79                                      {\cf22 "color:white;"}\par
80                                      {\cf22 "background-color:"}+corHoverBtn+{\cf22 ";\}"}\par
81                              {\cf22 "QPushButton:pressed\{"}\par
82                                      {\cf22 "background-color: #0D2C4D;"}\par
83                                      {\cf22 "color: #FFFFFF;\}"}\par
84                              {\cf22 "QPushButton:disabled\{"}\par
85                                      {\cf22 "border:2px solid #808080;"}\par
86                                      {\cf22 "background-color:#808080;\}"};\par
87 \par
88     QString cssBtnLixeira={\cf22 "QPushButton\{"}\par
89                                      {\cf22 "font-family: 'Roboto';"}\par
90                                      {\cf22 "font-size:15px;"}\par
91                                      {\cf22 "background-color:#8B0000;"}\par
92                                      {\cf22 "color:white;"}\par
93                                      {\cf22 "border-radius:5px;\}"}\par
94                                      {\cf22 "QPushButton:hover\{"}\par
95                                      {\cf22 "font-size:15px;"}\par
96                                      {\cf22 "font-weight:bold;"}\par
97                                      {\cf22 "color:white;"}\par
98                                      {\cf22 "background-color:#B22222;\}"}\par
99                                      {\cf22 "QPushButton:pressed\{"}\par
100                                      {\cf22 "background-color: #CD5C5C;"}\par
101                                      {\cf22 "color: #FFFFFF;\}"};\par
102 \par
103     QString csstabelaTensoes={\cf22 "QTableWidget\{font-family: 'Roboto' ;"}\par
104                                {\cf22 "font-size:15px;"}\par
105                                {\cf22 "border:2px solid "}+corPrimaria+{\cf22 ";"}\par
106                                {\cf22 "color: black;"}\par
107                                {\cf22 "border-radius:5px;"}\par
108                                {\cf22 "text-align: center;"}\par
109                                {\cf22 "background-color:#f0f0f0;\}"}\par
110                                {\cf22 "QTableWidget QScrollBar:vertical \{"}\par
111                                {\cf22 "    border: none;"}\par
112                                {\cf22 "    background-color: #f5f5f5;"}\par
113                                {\cf22 "    width: 10px;"}\par
114                                {\cf22 "    margin: 0px 0 0px 0;"}\par
115                                {\cf22 "\}"}\par
116                                {\cf22 "QTableWidget QScrollBar::handle:vertical \{"}\par
117                                {\cf22 "    background-color: #d3d3d3;"}\par
118                                {\cf22 "    min-height: 20px;"}\par
119                                {\cf22 "\}"}\par
120                                {\cf22 "QTableWidget QScrollBar::add-line:vertical \{"}\par
121                                {\cf22 "    background-color: #f5f5f5;"}\par
122                                {\cf22 "    height: 20px;"}\par
123                                {\cf22 "    subcontrol-position: bottom;"}\par
124                                {\cf22 "    subcontrol-origin: margin;"}\par
125                                {\cf22 "\}"}\par
126                                {\cf22 "QTableWidget QScrollBar::sub-line:vertical \{"}\par
127                                {\cf22 "    background-color: #f5f5f5;"}\par
128                                {\cf22 "    height: 20px;"}\par
129                                {\cf22 "    subcontrol-position: top;"}\par
130                                {\cf22 "    subcontrol-origin: margin;"}\par
131                                {\cf22 "\}"}\par
132                                {\cf22 "QTableWidget QScrollBar::up-arrow:vertical, QTableWidget QScrollBar::down-arrow:vertical \{"}\par
133                                {\cf22 "    border: none;"}\par
134                                {\cf22 "    background-color: #f5f5f5;"}\par
135                                {\cf22 "    height: 20px;"}\par
136                                {\cf22 "    width: 10px;"}\par
137                                {\cf22 "\}"}\par
138                                {\cf22 "QTableWidget QScrollBar::add-page:vertical, QTableWidget QScrollBar::sub-page:vertical \{"}\par
139                                {\cf22 "    background-color: #f5f5f5;"}\par
140                                {\cf22 "\}"}\par
141                                {\cf22 "QTableWidget::horizontalScrollBar  \{"}\par
142                                     {\cf22 "border: none;"}\par
143                                     {\cf22 "background-color: #F5F5F5;"}\par
144                                     {\cf22 "height: 10px;"}\par
145                                     {\cf22 "margin: 0px 21px 0 21px;\}"}\par
146                                 {\cf22 "QTableWidget::horizontalScrollBar::handle \{"}\par
147                                     {\cf22 "background: #DBDBDB;"}\par
148                                     {\cf22 "    min-width: 20px;\}"}\par
149                                 {\cf22 "QTableWidget::horizontalScrollBar::add-line\{"}\par
150                                 {\cf22 "background-color: none;"}\par
151                                 {\cf22 "width: 20px;"}\par
152                                     {\cf22 "subcontrol-position: right;"}\par
153                                     {\cf22 "subcontrol-origin: margin;\}"}\par
154                                 {\cf22 "QTableWidget::horizontalScrollBar::sub-line \{"}\par
155                                 {\cf22 "background-color: none;"}\par
156                                 {\cf22 "width: 20px;"}\par
157                                     {\cf22 "subcontrol-position: left;"}\par
158                                                {\cf22 "subcontrol-origin: margin;\}"};\par
159 \par
160 \par
161     QString cssTabelaBarras={\cf22 "QTableWidget\{font-family: 'Roboto' ;"}\par
162                                {\cf22 "font-size:15px;"}\par
163                                {\cf22 "color: black;"}\par
164                                {\cf22 "border-radius:25px;"}\par
165                                {\cf22 "text-align: center;"}\par
166                                {\cf22 "background-color:#f0f0f0;\}"}\par
167                               {\cf22 "QTableWidget::verticalScrollBar  \{"}\par
168                                {\cf22 "    border: none;"}\par
169                                {\cf22 "    background-color: #f5f5f5;"}\par
170                                {\cf22 "    width: 10px;"}\par
171                                {\cf22 "    margin: 0px 0 0px 0;"}\par
172                                {\cf22 "\}"}\par
173                               {\cf22 "QTableWidget::verticalScrollBar::handle \{"}\par
174                                {\cf22 "    background-color: #d3d3d3;"}\par
175                                {\cf22 "    min-height: 20px;"}\par
176                                {\cf22 "\}"}\par
177                               {\cf22 "QTableWidget::verticalScrollBar::add-line\{"}\par
178                                {\cf22 "    background-color: #f5f5f5;"}\par
179                                {\cf22 "    height: 20px;"}\par
180                                {\cf22 "    subcontrol-position: bottom;"}\par
181                                {\cf22 "    subcontrol-origin: margin;"}\par
182                                {\cf22 "\}"}\par
183                               {\cf22 "QTableWidget::verticalScrollBar::add-line\{"}\par
184                                {\cf22 "    background-color: #f5f5f5;"}\par
185                                {\cf22 "    height: 20px;"}\par
186                                {\cf22 "    subcontrol-position: top;"}\par
187                                {\cf22 "    subcontrol-origin: margin;"}\par
188                                {\cf22 "\}"}\par
189                                {\cf22 "QTableWidget QScrollBar::up-arrow:vertical, QTableWidget QScrollBar::down-arrow:vertical \{"}\par
190                                {\cf22 "    border: none;"}\par
191                                {\cf22 "    background-color: #f5f5f5;"}\par
192                                {\cf22 "    height: 20px;"}\par
193                                {\cf22 "    width: 10px;"}\par
194                                {\cf22 "\}"}\par
195                                {\cf22 "QHeaderView::section\{"}\par
196                                     {\cf22 "border-bottom:1px solid #D8D8D8;"}\par
197                                     {\cf22 "border-left:0px;"}\par
198                                     {\cf22 "padding-left:5px;"}\par
199                                     {\cf22 "margin:0px;\}"}\par
200                                {\cf22 "QTableWidget QScrollBar::add-page:vertical, QTableWidget QScrollBar::sub-page:vertical \{"}\par
201                                {\cf22 "    background-color: #f5f5f5;"}\par
202                                {\cf22 "\}"}\par
203                                {\cf22 "QTableWidget::horizontalScrollBar  \{"}\par
204                                    {\cf22 "border: none;"}\par
205                                    {\cf22 "background-color: #F5F5F5;"}\par
206                                    {\cf22 "height: 10px;"}\par
207                                    {\cf22 "margin: 0px 21px 0 21px;\}"}\par
208                                {\cf22 "QTableWidget::horizontalScrollBar::handle \{"}\par
209                                    {\cf22 "background: #DBDBDB;"}\par
210                                    {\cf22 "    min-width: 20px;\}"}\par
211                                {\cf22 "QTableWidget::horizontalScrollBar::add-line\{"}\par
212                                    {\cf22 "background-color: none;"}\par
213                                    {\cf22 "width: 20px;"}\par
214                                    {\cf22 "subcontrol-position: right;"}\par
215                                    {\cf22 "subcontrol-origin: margin;\}"}\par
216                                {\cf22 "QTableWidget::horizontalScrollBar::sub-line \{"}\par
217                                {\cf22 "background-color: none;"}\par
218                                {\cf22 "width: 20px;"}\par
219                                {\cf22 "subcontrol-position: left;"}\par
220                                {\cf22 "subcontrol-origin: margin;\}"};\par
221 \par
222 \par
223 \par
224     QString cssHeaderTabela={\cf22 "font-family: 'Roboto';"}\par
225                             {\cf22 "font-size:17px;"}\par
226                             ;\par
227 \par
228     QString cssTabWidget = {\cf22 "QTabWidget::pane \{"}\par
229                               {\cf22 "border: 2px solid "}+corPrimaria+{\cf22 ";"}\par
230                               {\cf22 "border-radius:4px;"}\par
231                               {\cf22 "\}"}\par
232                               {\cf22 "QTabBar::tab \{"}\par
233                                {\cf22 "border-radius:1px;"}\par
234                               {\cf22 "background-color: #2E4E7E;"}\par
235                               {\cf22 "color: #FFFFFF;"}\par
236                               {\cf22 "font-weight: bold;"}\par
237                                {\cf22 "min-width: 100px;"}\par
238                                {\cf22 "min-height:20px;"}\par
239                               {\cf22 "\}"}\par
240                               {\cf22 "QTabBar::tab:selected \{"}\par
241                               {\cf22 "background-color: #1E385B;"}\par
242                               {\cf22 "\}"}\par
243                               {\cf22 "QTabBar::tab:focus \{"}\par
244                               {\cf22 "border: none;"}\par
245                               {\cf22 "font-size: 15px;"}\par
246                               {\cf22 "font-weight: 500;"}\par
247                               {\cf22 "font-family: 'Roboto';"}\par
248                               {\cf22 "color:branco;"}\par
249                                          {\cf22 "\}"};\par
250     QString cssCheckbox = {\cf22 "QCheckBox\{"}\par
251                               {\cf22 "font-size:13px;"}\par
252                               {\cf22 "font-weight:bold;"}\par
253                               {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"}\par
254                           {\cf22 "QCheckBox::indicator\{"}\par
255                               {\cf22 "width: 30px;"}\par
256                               {\cf22 "height: 30px;\}"};\par
257 \par
258     QString cssComboBox = {\cf22 "QComboBox \{"}\par
259                           {\cf22 "border-radius: 3px;"}\par
260                           {\cf22 "border:1px solid"}+corPrimaria+{\cf22 ";"}\par
261                           {\cf22 "color: #1E385B;"}\par
262                           {\cf22 "background-color: #FFFFFF;"}\par
263                           {\cf22 "\}"};\par
264 \par
265     QString cssGroupBox = {\cf22 "QGroupBox \{"}\par
266                           {\cf22 "font-size:15px;"}\par
267                           {\cf22 "font-weight:bold;"}\par
268                           {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"};\par
269 \par
270     QString cssRadioButton = {\cf22 "QRadioButton \{"}\par
271                              {\cf22 "font-size:20px;"}\par
272                              {\cf22 "font-family: 'Roboto';"}\par
273                              {\cf22 "font-weight:bold;"}\par
274                              {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"};\par
275 \par
276     QString cssImgExportar = {\cf22 "border-radius:30px;"};\par
277 \par
278 \par
279 \par
280 \par
281 \par
282 \};\par
283 \par
284 \par
285 \par
286 \par
287 {\cf21 #endif }{\cf20 // STYLE_H}\par
288 \par
289 \par
290 \par
291 \par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
