{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Documenta\'E7\'E3o EletricData  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0.0 \par
}}Documenta\'E7\'E3o EletricData}
{\comment Gerado por doxygen 1.9.6.}
{\creatim \yr2023\mo5\dy15\hr20\min59\sec53}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Documenta\'E7\'E3o EletricData}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 1.0.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Segunda, 15 de Maio de 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
<em>Namespaces</em>\par \pard\plain 
{\tc \v <em>Namespaces</em>}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Namespaces\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os Namespaces com suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Ui} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice Hier\'E1rquico\par \pard\plain 
{\tc \v \'CDndice Hier\'E1rquico}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Hierarquia de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta lista de hierarquias est\'E1 parcialmente ordenada (ordem alfab\'E9tica):}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Barra\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Linha\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QDialog
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
FiltroLinha\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FiltrosBarra\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QFrame
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
FrameBarras\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FrameExportar\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FrameTensoes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QMainWindow
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MainWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QPushButton
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
AnimatedHoverButton\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Style\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Componentes\par \pard\plain 
{\tc \v \'CDndice dos Componentes}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Aqui est\'E3o as classes, estruturas, uni\'F5es e interfaces e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b AnimatedHoverButton} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Barra} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FiltroLinha} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FiltrosBarra} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FrameBarras} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FrameExportar} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FrameTensoes} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Linha} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MainWindow} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela Principal do Programa })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Style} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Arquivos\par \pard\plain 
{\tc \v \'CDndice dos Arquivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Arquivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os arquivos e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b D:/QT/EletricData/{\b animatedhoverbutton.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b AnimatedHoverButton.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b Barra.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b filtrolinha.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b filtrolinha.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b filtrosbarra.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b filtrosbarra.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b framebarras.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b framebarras.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b frameexportar.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b frameexportar.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b frametensoes.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b frametensoes.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b Linha.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b mainwindow.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b mainwindow.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b style.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
<em>Namespace</em>\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace Ui\par \pard\plain 
{\tc\tcl2 \v Ui}
{\xe \v Ui}
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Classes{\tc \v Classes}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe AnimatedHoverButton\par \pard\plain 
{\tc\tcl2 \v AnimatedHoverButton}
{\xe \v AnimatedHoverButton}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\par
{
{\f2 #include <AnimatedHoverButton.h>}}\par
Diagrama de hierarquia para AnimatedHoverButton:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_animated_hover_button.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AnimatedHoverButton} (const QString &text, QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTransitionDuration} (int duration)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b event} (QEvent *event) override\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b paintEvent} (QPaintEvent *) override\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v AnimatedHoverButton\:AnimatedHoverButton}
{\xe \v AnimatedHoverButton\:AnimatedHoverButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AnimatedHoverButton::AnimatedHoverButton (const QString &  {\i text}, QWidget *  {\i parent} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MIT License\par
Copyright (c) 2018 Michael Scopchanov\par
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                                                                              :\par
36     QPushButton(text, parent),\par
37     m_transition({\cf17 nullptr}),\par
38     m_duration(1000),\par
39     m_currentColor(Qt::transparent)\par
40 \{\par
41 \par
42 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v event\:AnimatedHoverButton}
{\xe \v AnimatedHoverButton\:event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AnimatedHoverButton::event (QEvent *  {\i event}){\f2 [override]}}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50 \{\par
51     {\cf19 switch} (event->type()) \{\par
52     {\cf19 case} QEvent::HoverEnter:\par
53         animateHover({\cf17 true});\par
54         {\cf19 break};\par
55     {\cf19 case} QEvent::HoverLeave:\par
56         animateHover({\cf17 false});\par
57         {\cf19 break};\par
58     {\cf19 default}:\par
59         {\cf19 break};\par
60     \}\par
61 \par
62     {\cf19 return} QPushButton::event(event);\par
63 \}\par
}
}
{\xe \v paintEvent\:AnimatedHoverButton}
{\xe \v AnimatedHoverButton\:paintEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AnimatedHoverButton::paintEvent (QPaintEvent * ){\f2 [override]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 66 \{\par
67     QStylePainter painter({\cf17 this});\par
68     QStyleOptionButton option;\par
69 \par
70     initStyleOption(&option);\par
71 \par
72     option.state &= ~QStyle::State_MouseOver;\par
73 \par
74     painter.drawControl(QStyle::CE_PushButton, option);\par
75     painter.setOpacity(0.25);\par
76     painter.fillRect(rect(), m_currentColor);\par
77 \}\par
}
}
{\xe \v setTransitionDuration\:AnimatedHoverButton}
{\xe \v AnimatedHoverButton\:setTransitionDuration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AnimatedHoverButton::setTransitionDuration (int  {\i duration})}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 45 \{\par
46     m_duration = duration;\par
47 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b AnimatedHoverButton.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b animatedhoverbutton.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Barra\par \pard\plain 
{\tc\tcl2 \v Barra}
{\xe \v Barra}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par
{
{\f2 #include <Barra.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTensaoPu} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTensaoPu} (double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTensaoNominalKv} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTensaoNominalKv} (double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getThdvPercent} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setThdvPercent} (double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< int, std::pair< std::pair< double, double >, std::pair< int, bool > > > {\b getDti} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b somatorioHarmonico} (int key1, double dAbsolut, double dPercent, int classeTensaoThdi, bool poluida)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTensaoEficaz} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTensaoEficaz} (double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getClasseTensaoThdv} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClasseTensaoThdv} (int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getBarraInfectadaThdv} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setbarraInfectadaThdv} (bool value)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getBarraInfectadaThdv\:Barra}
{\xe \v Barra\:getBarraInfectadaThdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Barra::getBarraInfectadaThdv (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 57                                 \{\par
58         {\cf19 return} barraInfectadaThdv;\par
59     \}\par
}
}
{\xe \v getClasseTensaoThdv\:Barra}
{\xe \v Barra\:getClasseTensaoThdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Barra::getClasseTensaoThdv (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 49                              \{\par
50         {\cf19 return} classeTensaoThdv;\par
51     \}\par
}
}
{\xe \v getDti\:Barra}
{\xe \v Barra\:getDti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::map< int, std::pair< std::pair< double, double >, std::pair< int, bool > > > Barra::getDti (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                                                               \{\par
34         {\cf19 return} dti;\par
35     \}\par
}
}
{\xe \v getTensaoEficaz\:Barra}
{\xe \v Barra\:getTensaoEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Barra::getTensaoEficaz (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                              \{\par
42         {\cf19 return} tensaoEficaz;\par
43     \}\par
}
}
{\xe \v getTensaoNominalKv\:Barra}
{\xe \v Barra\:getTensaoNominalKv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Barra::getTensaoNominalKv (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                  \{\par
18         {\cf19 return} tensaoNominalKv;\par
19     \}\par
}
}
{\xe \v getTensaoPu\:Barra}
{\xe \v Barra\:getTensaoPu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Barra::getTensaoPu (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9                           \{\par
10         {\cf19 return} tensaoPu;\par
11     \}\par
}
}
{\xe \v getThdvPercent\:Barra}
{\xe \v Barra\:getThdvPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Barra::getThdvPercent (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                              \{\par
26         {\cf19 return} thdvPercent;\par
27     \}\par
}
}
{\xe \v setbarraInfectadaThdv\:Barra}
{\xe \v Barra\:setbarraInfectadaThdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setbarraInfectadaThdv (bool  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 61                                           \{\par
62         barraInfectadaThdv = value;\par
63     \}\par
}
}
{\xe \v setClasseTensaoThdv\:Barra}
{\xe \v Barra\:setClasseTensaoThdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setClasseTensaoThdv (int  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53                                        \{\par
54         classeTensaoThdv= value;\par
55     \}\par
}
}
{\xe \v setTensaoEficaz\:Barra}
{\xe \v Barra\:setTensaoEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setTensaoEficaz (double  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 45                                        \{\par
46         tensaoEficaz = value;\par
47     \}\par
}
}
{\xe \v setTensaoNominalKv\:Barra}
{\xe \v Barra\:setTensaoNominalKv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setTensaoNominalKv (double  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                           \{\par
22         tensaoNominalKv = value;\par
23     \}\par
}
}
{\xe \v setTensaoPu\:Barra}
{\xe \v Barra\:setTensaoPu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setTensaoPu (double  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                    \{\par
14         tensaoPu = value;\par
15     \}\par
}
}
{\xe \v setThdvPercent\:Barra}
{\xe \v Barra\:setThdvPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setThdvPercent (double  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 29                                       \{\par
30         thdvPercent = value;\par
31     \}\par
}
}
{\xe \v somatorioHarmonico\:Barra}
{\xe \v Barra\:somatorioHarmonico}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::somatorioHarmonico (int  {\i key1}, double  {\i dAbsolut}, double  {\i dPercent}, int  {\i classeTensaoThdi}, bool  {\i poluida}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                                                                                               \{\par
38         this->dti.insert(\{key1,\{\{dAbsolut,dPercent\},\{classeTensaoThdi,poluida\}\}\});\par
39     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b Barra.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe FiltroLinha\par \pard\plain 
{\tc\tcl2 \v FiltroLinha}
{\xe \v FiltroLinha}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\par
{
{\f2 #include <filtrolinha.h>}}\par
Diagrama de hierarquia para FiltroLinha:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_filtro_linha.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FiltroLinha} (QWidget *parent=nullptr, Ui::FrameBarras *fb=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FiltroLinha} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssFiltrosLinha} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssCheckBox} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssLineEdit} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssBtnAplicar} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssComboBox} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssGroupBox} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssJanela} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializandoFrame} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Est\'E1ticos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b correntePu} = true\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b dht} = true\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b dit} = true\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b ditPercent} = true\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b correnteEficaz} = true\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b resistencia} = true\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b perdas} = true\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b perdasEficaz} = true\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexComboBoxOrigem} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexComboBoxDestino} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QStringList {\b indiceOrigensEscolhidas}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QStringList {\b indiceDestinosEscolhidos}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v FiltroLinha\:FiltroLinha}
{\xe \v FiltroLinha\:FiltroLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FiltroLinha::FiltroLinha (QWidget *  {\i parent} = {\f2 nullptr}, Ui::FrameBarras *  {\i fb} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                                             :\par
22     QDialog(parent),\par
23     ui({\cf17 new} Ui::FiltroLinha)\par
24 \{\par
25     ui->setupUi({\cf17 this});\par
26     Style style;\par
27     setParent(parent);\par
28     frameBarras2 = fb;\par
29 \par
30     inicializandoFrame();\par
31 \par
32 \}\par
}
}
{\xe \v ~FiltroLinha\:FiltroLinha}
{\xe \v FiltroLinha\:~FiltroLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FiltroLinha::~FiltroLinha ()}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 36 \{\par
37     {\cf17 delete} ui;\par
38 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v inicializandoFrame\:FiltroLinha}
{\xe \v FiltroLinha\:inicializandoFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inicializandoFrame ()}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 40                                     \{\par
41     inserindoQssFiltrosLinha();\par
42 \}\par
}
}
{\xe \v inserindoQssBtnAplicar\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssBtnAplicar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssBtnAplicar ()}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 68                                         \{\par
69     Style style;\par
70     ui->btnAplicar->setStyleSheet(style.cssBtn);\par
71 \par
72 \}\par
}
}
{\xe \v inserindoQssCheckBox\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssCheckBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssCheckBox ()}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 85                                       \{\par
86     Style style;\par
87     ui->checkBoxCorrente->setChecked(correntePu);\par
88     ui->checkBoxDht->setChecked(dht);\par
89     ui->checkboxDit->setChecked(dit);\par
90     ui->checkBoxDitPercent->setChecked(ditPercent);\par
91     ui->checkBoxCorrenteEficaz->setChecked(correnteEficaz);\par
92     ui->checkBoxResistencia->setChecked(resistencia);\par
93     ui->checkBoxPerdas->setChecked(perdas);\par
94     ui->checkBoxPerdasEficaz->setChecked(perdasEficaz);\par
95 \par
96     ui->checkBoxCorrente->setStyleSheet(style.cssCheckbox);\par
97     ui->checkBoxDht->setStyleSheet(style.cssCheckbox);\par
98     ui->checkboxDit->setStyleSheet(style.cssCheckbox);\par
99     ui->checkBoxDitPercent->setStyleSheet(style.cssCheckbox);\par
100     ui->checkBoxCorrenteEficaz->setStyleSheet(style.cssCheckbox);\par
101     ui->checkBoxResistencia->setStyleSheet(style.cssCheckbox);\par
102     ui->checkBoxPerdas->setStyleSheet(style.cssCheckbox);\par
103     ui->checkBoxPerdasEficaz->setStyleSheet(style.cssCheckbox);\par
104 \par
105 \par
106 \}\par
}
}
{\xe \v inserindoQssComboBox\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssComboBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssComboBox ()}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 43                                       \{\par
44     Style style;\par
45     ui->comboBoxOrigem->setCurrentIndex(indexComboBoxOrigem);\par
46     ui->comboBoxDestino->setCurrentIndex(indexComboBoxDestino);\par
47 \par
48 \}\par
}
}
{\xe \v inserindoQssFiltrosLinha\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssFiltrosLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssFiltrosLinha ()}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 49                                           \{\par
50     inserindoQssCheckBox();\par
51     inserindoQssLineEdit();\par
52     inserindoQssBtnAplicar();\par
53     inserindoQssComboBox();\par
54     inserindoQssGroupBox();\par
55     inserindoQssJanela();\par
56 \}\par
}
}
{\xe \v inserindoQssGroupBox\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssGroupBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssGroupBox ()}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 57                                       \{\par
58     Style style;\par
59     ui->groupBoxAtributos->setStyleSheet(style.cssGroupBox);\par
60     ui->groupBoxLinhas->setStyleSheet(style.cssGroupBox);\par
61 \}\par
}
}
{\xe \v inserindoQssJanela\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssJanela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssJanela ()}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                     \{\par
63 \par
64     setWindowTitle({\cf22 "Filtros"});\par
65     setWindowIcon(QIcon({\cf22 ":/icons/imgs/icons/engrenagem.png"}));\par
66 \par
67 \}\par
}
}
{\xe \v inserindoQssLineEdit\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssLineEdit ()}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73                                       \{\par
74     Style style;\par
75     ui->lineEditFLinha->setPlaceholderText({\cf22 "Todas"});\par
76     ui->lineEditFLinha2->setPlaceholderText({\cf22 "Todas"});\par
77 \par
78 \par
79     ui->lineEditFLinha->setStyleSheet(style.cssLineEdit);\par
80     ui->lineEditFLinha2->setStyleSheet(style.cssLineEdit);\par
81 \par
82     ui->lineEditFLinha->setEnabled({\cf17 false});\par
83     ui->lineEditFLinha2->setEnabled({\cf17 false});\par
84 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v correnteEficaz\:FiltroLinha}
{\xe \v FiltroLinha\:correnteEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::correnteEficaz = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v correntePu\:FiltroLinha}
{\xe \v FiltroLinha\:correntePu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::correntePu = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dht\:FiltroLinha}
{\xe \v FiltroLinha\:dht}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::dht = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dit\:FiltroLinha}
{\xe \v FiltroLinha\:dit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::dit = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ditPercent\:FiltroLinha}
{\xe \v FiltroLinha\:ditPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::ditPercent = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v indexComboBoxDestino\:FiltroLinha}
{\xe \v FiltroLinha\:indexComboBoxDestino}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FiltroLinha::indexComboBoxDestino = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v indexComboBoxOrigem\:FiltroLinha}
{\xe \v FiltroLinha\:indexComboBoxOrigem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FiltroLinha::indexComboBoxOrigem = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v indiceDestinosEscolhidos\:FiltroLinha}
{\xe \v FiltroLinha\:indiceDestinosEscolhidos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FiltroLinha::indiceDestinosEscolhidos{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v indiceOrigensEscolhidas\:FiltroLinha}
{\xe \v FiltroLinha\:indiceOrigensEscolhidas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FiltroLinha::indiceOrigensEscolhidas{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v perdas\:FiltroLinha}
{\xe \v FiltroLinha\:perdas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::perdas = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v perdasEficaz\:FiltroLinha}
{\xe \v FiltroLinha\:perdasEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::perdasEficaz = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v resistencia\:FiltroLinha}
{\xe \v FiltroLinha\:resistencia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::resistencia = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b filtrolinha.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b filtrolinha.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe FiltrosBarra\par \pard\plain 
{\tc\tcl2 \v FiltrosBarra}
{\xe \v FiltrosBarra}
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\par
{
{\f2 #include <filtrosbarra.h>}}\par
Diagrama de hierarquia para FiltrosBarra:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_filtros_barra.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FiltrosBarra} (QWidget *parent=nullptr, Ui::FrameBarras *fb=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FiltrosBarra} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::FiltrosBarra * {\b getUi} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssFiltrosBarra} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssCheckBox} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssLineEdit} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssBtnAplicar} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssComboBox} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssGroupBox} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssJanela} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializandoFrame} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Est\'E1ticos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b tensaoPu} = true\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b tensaoNominal} = true\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b thdv} = true\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b dit} = true\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b ditPercent} = true\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b tensaoEficaz} = true\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexComboBox} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QStringList {\b indiceBarrasEscolhidas}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v FiltrosBarra\:FiltrosBarra}
{\xe \v FiltrosBarra\:FiltrosBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FiltrosBarra::FiltrosBarra (QWidget *  {\i parent} = {\f2 nullptr}, Ui::FrameBarras *  {\i fb} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                                                :\par
18     QDialog(parent),\par
19     ui({\cf17 new} Ui::FiltrosBarra)\par
20 \{\par
21     ui->setupUi({\cf17 this});\par
22     setParent(parent);\par
23     frameBarras = fb;\par
24 \par
25     inicializandoFrame();\par
26 \par
27 \par
28 \}\par
}
}
{\xe \v ~FiltrosBarra\:FiltrosBarra}
{\xe \v FiltrosBarra\:~FiltrosBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FiltrosBarra::~FiltrosBarra ()}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31 \{\par
32     {\cf17 delete} ui;\par
33 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getUi\:FiltrosBarra}
{\xe \v FiltrosBarra\:getUi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::FiltrosBarra * FiltrosBarra::getUi (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                            \{\par
21         {\cf19 return} ui;\par
22     \}\par
}
}
{\xe \v inicializandoFrame\:FiltrosBarra}
{\xe \v FiltrosBarra\:inicializandoFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inicializandoFrame ()}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                                      \{\par
36     inserindoQssFiltrosBarra();\par
37 \}\par
}
}
{\xe \v inserindoQssBtnAplicar\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssBtnAplicar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssBtnAplicar ()}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52                                          \{\par
53     Style style;\par
54     ui->btnAplicar->setStyleSheet(style.cssBtn);\par
55 \}\par
}
}
{\xe \v inserindoQssCheckBox\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssCheckBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssCheckBox ()}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 66                                        \{\par
67     Style style;\par
68     ui->checkBoxTensaoBarra->setChecked(tensaoPu);\par
69     ui->checkBoxTensaoNominal->setChecked(tensaoNominal);\par
70     ui->checkBoxThdv->setChecked(thdv);\par
71     ui->checkBoxDit->setChecked(dit);\par
72     ui->checkBoxDitPercent->setChecked(ditPercent);\par
73     ui->checkBoxTensaoEficaz->setChecked(tensaoEficaz);\par
74 \par
75     ui->checkBoxTensaoBarra->setStyleSheet(style.cssCheckbox);\par
76     ui->checkBoxTensaoNominal->setStyleSheet(style.cssCheckbox);\par
77     ui->checkBoxThdv->setStyleSheet(style.cssCheckbox);\par
78     ui->checkBoxDit->setStyleSheet(style.cssCheckbox);\par
79     ui->checkBoxDitPercent->setStyleSheet(style.cssCheckbox);\par
80     ui->checkBoxTensaoEficaz->setStyleSheet(style.cssCheckbox);\par
81 \}\par
}
}
{\xe \v inserindoQssComboBox\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssComboBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssComboBox ()}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 56                                        \{\par
57     Style style;\par
58     ui->comboBoxFBarra->setCurrentIndex(indexComboBox);\par
59     ui->comboBoxFBarra->setStyleSheet(style.cssComboBox);\par
60 \par
61 \}\par
}
}
{\xe \v inserindoQssFiltrosBarra\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssFiltrosBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssFiltrosBarra ()}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 38                                            \{\par
39     inserindoQssCheckBox();\par
40     inserindoQssLineEdit();\par
41     inserindoQssBtnAplicar();\par
42     inserindoQssComboBox();\par
43     inserindoQssGroupBox();\par
44     inserindoQssJanela();\par
45 \}\par
}
}
{\xe \v inserindoQssGroupBox\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssGroupBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssGroupBox ()}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 82                                        \{\par
83     Style style;\par
84     ui->groupBoxBarras->setStyleSheet(style.cssGroupBox);\par
85     ui->groupBoxAtributos->setStyleSheet(style.cssGroupBox);\par
86 \}\par
}
}
{\xe \v inserindoQssJanela\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssJanela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssJanela ()}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 46                                      \{\par
47 \par
48     setWindowTitle({\cf22 "Filtros"});\par
49     setWindowIcon(QIcon({\cf22 ":/icons/imgs/icons/engrenagem.png"}));\par
50 \par
51 \}\par
}
}
{\xe \v inserindoQssLineEdit\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssLineEdit ()}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                        \{\par
63     Style style;\par
64     ui->lineEditFBarra->setStyleSheet(style.cssLineEdit);\par
65 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v dit\:FiltrosBarra}
{\xe \v FiltrosBarra\:dit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::dit = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ditPercent\:FiltrosBarra}
{\xe \v FiltrosBarra\:ditPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::ditPercent = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v indexComboBox\:FiltrosBarra}
{\xe \v FiltrosBarra\:indexComboBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FiltrosBarra::indexComboBox = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v indiceBarrasEscolhidas\:FiltrosBarra}
{\xe \v FiltrosBarra\:indiceBarrasEscolhidas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FiltrosBarra::indiceBarrasEscolhidas{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tensaoEficaz\:FiltrosBarra}
{\xe \v FiltrosBarra\:tensaoEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::tensaoEficaz = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tensaoNominal\:FiltrosBarra}
{\xe \v FiltrosBarra\:tensaoNominal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::tensaoNominal = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tensaoPu\:FiltrosBarra}
{\xe \v FiltrosBarra\:tensaoPu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::tensaoPu = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v thdv\:FiltrosBarra}
{\xe \v FiltrosBarra\:thdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::thdv = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b filtrosbarra.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b filtrosbarra.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe FrameBarras\par \pard\plain 
{\tc\tcl2 \v FrameBarras}
{\xe \v FrameBarras}
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\par
{
{\f2 #include <framebarras.h>}}\par
Diagrama de hierarquia para FrameBarras:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_frame_barras.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FrameBarras} (QWidget *parent=nullptr, Ui::MainWindow *mw=nullptr, Ui::FrameTensoes *ft=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FrameBarras} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b buscaIndiceHarmMax} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b buscaQtdHarm} (int)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b quantidadeDeBarras} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheFrameBarras} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaVariaveisStatic} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaFrame} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QStringList {\b cabecalhoBarras} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QStringList {\b cabecalhoLinhas} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheBarra} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaBarra} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QStringList {\b linhasDoSistema} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b potencia} (double, int)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnAvancar} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnVoltar} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssTabWidget} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssTableBarras} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssTableLinhas} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssFrameBarras} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheTabelaBarra} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheTabelaLinha} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheLimites} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQSSBtnFiltrar} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheLinha} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaLinha} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereBackgroundNasPoluidoras} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b atualizarRowBarras} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b atualizarColumnBarras} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b verificaAvanco} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::map< int, std::map< int, double > > {\b getLimitesDti} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b setLimitesDti} (int nivelTensao, int harmonica, double limite)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Est\'E1ticos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexTab} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indiceHarmMax}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b numeroDeLinhas}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b quantidadeDeComponentesHarm}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QList< {\b Barra} > {\b barras} = QList<{\b Barra}>()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QList< {\b Linha} > {\b linhas} = QList<{\b Linha}>()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b filtroLinhaInserido}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b filtroBarraInserido}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v FrameBarras\:FrameBarras}
{\xe \v FrameBarras\:FrameBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameBarras::FrameBarras (QWidget *  {\i parent} = {\f2 nullptr}, Ui::MainWindow *  {\i mw} = {\f2 nullptr}, Ui::FrameTensoes *  {\i ft} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 29                                                                             :\par
30     QFrame(parent),\par
31     ui({\cf17 new} Ui::FrameBarras)\par
32 \{\par
33     ui->setupUi({\cf17 this});\par
34 \par
35     frameT = ft;\par
36     frameM = mw;\par
37     p = parent;\par
38     inicializaFrame();\par
39 \par
40 \par
41 \}\par
}
}
{\xe \v ~FrameBarras\:FrameBarras}
{\xe \v FrameBarras\:~FrameBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameBarras::~FrameBarras ()}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 45 \{\par
46     {\cf17 delete} ui;\par
47 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v atualizarColumnBarras\:FrameBarras}
{\xe \v FrameBarras\:atualizarColumnBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::atualizarColumnBarras ()}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 679                                        \{\par
680 \par
681 \}\par
}
}
{\xe \v atualizarRowBarras\:FrameBarras}
{\xe \v FrameBarras\:atualizarRowBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::atualizarRowBarras ()}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 677                                     \{\par
678 \}\par
}
}
{\xe \v buscaIndiceHarmMax\:FrameBarras}
{\xe \v FrameBarras\:buscaIndiceHarmMax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::buscaIndiceHarmMax ()}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 515                                    \{\par
516     {\cf18 int} indiceHarm = 0 ;\par
517     {\cf19 if}(!MainWindow::arquivoVsoln->open(QFile::ReadOnly|QFile::Text))\{\par
518         {\cf20 //O arquivo vsoln possui o os indices harmonicos, l\'E1 pode-se identificar qual foi o maior indice que o usuario escolheu -- por isso foi selecionado}\par
519         {\cf20 //realiza o procedimento de abertura do arquivo e alerta caso aconte\'E7a algum erro -- Conforme explicado no mainwindow.cpp}\par
520         {\cf19 if}(MainWindow::arquivoVsoln->error() == QFile::OpenError)\{\par
521             {\cf19 return} 0;\par
522         \}\par
523         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
524         {\cf19 return} 0;\par
525     \}\par
526     {\cf19 while}(!MainWindow::arquivoVsoln->atEnd())\{\par
527         QString line = MainWindow::arquivoVsoln->readLine();\par
528         QStringList indice = line.split({\cf22 ","});\par
529         {\cf18 bool} ok = {\cf17 false}; {\cf20 // inicializa com 'false' indicando que a convers\'E3o falhou}\par
530         {\cf18 int} valorInt = indice.at(0).trimmed().toInt(&ok, 10);\par
531         {\cf19 if}(ok && valorInt > indiceHarm)\{\par
532             indiceHarm = valorInt;\par
533         \}\par
534     \}\par
535     MainWindow::arquivoVsoln->close();\par
536     {\cf19 return} indiceHarm;\par
537 \}\par
}
}
{\xe \v buscaQtdHarm\:FrameBarras}
{\xe \v FrameBarras\:buscaQtdHarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::buscaQtdHarm (int  {\i indiceHarmMax}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 538                                                      \{\par
539     {\cf19 return} (indiceHarmMax/2) > 1 ? indiceHarmMax/2 : 0;\par
540 \}\par
}
}
{\xe \v cabecalhoBarras\:FrameBarras}
{\xe \v FrameBarras\:cabecalhoBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FrameBarras::cabecalhoBarras ()}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 541                                         \{\par
542     QStringList cabecalhos=\{{\cf22 "Tens\'E3o na Barra[pu]"},{\cf22 "Tens\'E3o Nominal[Kv]"},{\cf22 "TDHV[%]"}\};\par
543     {\cf19 for}({\cf18 int} i = 0 , j = 3; i < quantidadeDeComponentesHarm ; i++ , j+=2)\{\par
544         QString item = {\cf22 "DIT"}+QString::number(j);\par
545         cabecalhos.push_back(item);\par
546     \}\par
547     {\cf19 for}({\cf18 int} i = 0 , j = 3; i < quantidadeDeComponentesHarm ; i++ , j+=2)\{\par
548         QString item = {\cf22 "DIT"}+QString::number(j)+{\cf22 "[%]"};\par
549         cabecalhos.push_back(item);\par
550     \}\par
551     cabecalhos.push_back({\cf22 "Tens\'E3o Eficaz[pu]"});\par
552 \par
553     {\cf19 return} cabecalhos;\par
554 \}\par
}
}
{\xe \v cabecalhoLinhas\:FrameBarras}
{\xe \v FrameBarras\:cabecalhoLinhas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FrameBarras::cabecalhoLinhas ()}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 109                                         \{\par
110     QStringList cabecalhos=\{{\cf22 "Corrente na Linha[pu]"},{\cf22 "DHT[%]"}\};\par
111     {\cf19 for}({\cf18 int} i = 0 , j = 3; i < quantidadeDeComponentesHarm ; i++ , j+=2)\{\par
112         QString item = {\cf22 "DHI"}+QString::number(j);\par
113         cabecalhos.push_back(item);\par
114     \}\par
115 {\cf19 for}({\cf18 int} i = 0 , j = 3; i < quantidadeDeComponentesHarm ; i++ , j+=2)\{\par
116     QString item = {\cf22 "DHI"}+QString::number(j)+{\cf22 "[%]"};\par
117     cabecalhos.push_back(item);\par
118 \}\par
119 cabecalhos.push_back({\cf22 "Corrente Eficaz[pu]"});\par
120 cabecalhos.push_back({\cf22 "Resistencia[ohm]"});\par
121 cabecalhos.push_back({\cf22 "Perdas[pu]"});\par
122 cabecalhos.push_back({\cf22 "Perdas eficaz[pu]"});\par
123 \par
124     {\cf19 return} cabecalhos;\par
125 \}\par
}
}
{\xe \v getLimitesDti\:FrameBarras}
{\xe \v FrameBarras\:getLimitesDti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::map< int, std::map< int, double > > FrameBarras::getLimitesDti (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 59                                                               \{\par
60         {\cf19 return} limitesDti;\par
61     \}\par
}
}
{\xe \v inicializaBarra\:FrameBarras}
{\xe \v FrameBarras\:inicializaBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::inicializaBarra ()}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 375                                  \{\par
376     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
377         Barra barra;\par
378         barras.push_back(barra);\par
379     \}\par
380 \}\par
}
}
{\xe \v inicializaFrame\:FrameBarras}
{\xe \v FrameBarras\:inicializaFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::inicializaFrame ()}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 49                                  \{\par
50     inicializaVariaveisStatic();\par
51     preencheLimites();\par
52     preencheFrameBarras();\par
53 \}\par
}
}
{\xe \v inicializaLinha\:FrameBarras}
{\xe \v FrameBarras\:inicializaLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::inicializaLinha ()}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 369                                  \{\par
370     {\cf19 for}({\cf18 int} i = 0 ; i < numeroDeLinhas ; i++)\{\par
371         Linha linha;\par
372         linhas.push_back(linha);\par
373     \}\par
374 \}\par
}
}
{\xe \v inicializaVariaveisStatic\:FrameBarras}
{\xe \v FrameBarras\:inicializaVariaveisStatic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::inicializaVariaveisStatic ()}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 54                                            \{\par
55     indiceHarmMax = buscaIndiceHarmMax() ;\par
56     quantidadeDeComponentesHarm = buscaQtdHarm(indiceHarmMax);\par
57     numeroDeLinhas = linhasDoSistema().size();\par
58 \}\par
}
}
{\xe \v insereBackgroundNasPoluidoras\:FrameBarras}
{\xe \v FrameBarras\:insereBackgroundNasPoluidoras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereBackgroundNasPoluidoras ()}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 640                                                \{\par
641     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
642         {\cf19 if}(barras[i].getBarraInfectadaThdv())\{\par
643             ui->tableBarras->item(2,i)->setBackground( QColor(255, 128, 128));\par
644         \}\par
645         {\cf18 int} pos =3;\par
646         {\cf19 for}({\cf18 int} j = 3 ; j <= indiceHarmMax ; j+=2)\{\par
647             {\cf19 if}(barras[i].getDti().find(j)->second.second.second)\{\par
648                     ui->tableBarras->item(pos,i)->setBackground( QColor(255, 128, 128));\par
649             \}\par
650             pos++;\par
651         \}\par
652         {\cf19 for}({\cf18 int} j = 3 ; j <= indiceHarmMax ; j+=2)\{\par
653             {\cf19 if}(barras[i].getDti().find(j)->second.second.second)\{\par
654                     ui->tableBarras->item(pos,i)->setBackground( QColor(255, 128, 128));\par
655             \}\par
656             pos++;\par
657         \}\par
658     \}\par
659 \par
660 \}\par
}
}
{\xe \v insereQssBtnAvancar\:FrameBarras}
{\xe \v FrameBarras\:insereQssBtnAvancar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssBtnAvancar ()}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 311                                      \{\par
312     Style style;\par
313     ui->btnAvancar->setStyleSheet(style.cssBtnTransition);\par
314     ui->btnAvancar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/proximo.png"})); {\cf20 //insere um icon ao bot\'E3o}\par
315     ui->btnAvancar->setLayoutDirection(Qt::RightToLeft); {\cf20 //define que o icon ser\'E1 colocado ap\'F3s o texto}\par
316 \}\par
}
}
{\xe \v insereQSSBtnFiltrar\:FrameBarras}
{\xe \v FrameBarras\:insereQSSBtnFiltrar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQSSBtnFiltrar ()}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 322                                      \{\par
323     Style style;\par
324     ui->btnFiltrar->setStyleSheet(style.cssBtn);\par
325     ui->btnFiltrar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/filtro.png"}));\par
326 \}\par
}
}
{\xe \v insereQssBtnVoltar\:FrameBarras}
{\xe \v FrameBarras\:insereQssBtnVoltar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssBtnVoltar ()}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 317                                     \{\par
318     Style style;\par
319     ui->btnVoltar->setStyleSheet(style.cssBtn);\par
320     ui->btnVoltar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/anterior.png"}));\par
321 \}\par
}
}
{\xe \v insereQssFrameBarras\:FrameBarras}
{\xe \v FrameBarras\:insereQssFrameBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssFrameBarras ()}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 302                                       \{\par
303     insereQssBtnAvancar();\par
304     insereQssBtnVoltar();\par
305     insereQssTabWidget();\par
306     insereQssTableBarras();\par
307     insereQSSBtnFiltrar();\par
308     insereQssTableLinhas();\par
309 \par
310 \}\par
}
}
{\xe \v insereQssTableBarras\:FrameBarras}
{\xe \v FrameBarras\:insereQssTableBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssTableBarras ()}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 331                                       \{\par
332     Style style;\par
333     {\cf20 //Inserindo cabe\'E7alho vertical na priemira coluna}\par
334     ui->tableBarras->setRowCount(3 + 2*quantidadeDeComponentesHarm + 1);\par
335     ui->tableBarras->setColumnCount(FrameTensoes::numeroDeBarras);\par
336     ui->tableBarras->setVerticalHeaderLabels(cabecalhoBarras());\par
337     ui->tableBarras->setStyleSheet(style.cssTabelaBarras); {\cf20 //insere QSS na tabela}\par
338     ui->tableBarras->verticalHeader()->setStyleSheet(style.cssHeaderTabela);\par
339     ui->tableBarras->verticalHeader()->setLineWidth(1);\par
340     {\cf20 //insere um numero de linhas \'E0 tabela correspondente ao numero de Barras}\par
341     ui->tableBarras->horizontalHeader()->setVisible({\cf17 true});\par
342     ui->tableBarras->setAlternatingRowColors({\cf17 true}); {\cf20 //aplica anternacia de cores na tabela}\par
343     ui->tableBarras->verticalHeader()->setDefaultSectionSize(30);\par
344     {\cf19 for}({\cf18 int} i = 0 ; i < (3 + 2*quantidadeDeComponentesHarm + 1) ; i++)\{\par
345         ui->tableBarras->setRowHeight(i, 31);\par
346     \}\par
347     ui->tableBarras->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOn);\par
348 \par
349 \}\par
}
}
{\xe \v insereQssTableLinhas\:FrameBarras}
{\xe \v FrameBarras\:insereQssTableLinhas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssTableLinhas ()}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 350                                       \{\par
351     Style style;\par
352     ui->tableLinhas->setRowCount(2 + 2*quantidadeDeComponentesHarm + 4);\par
353     ui->tableLinhas->setColumnCount(numeroDeLinhas);\par
354     ui->tableLinhas->setVerticalHeaderLabels(cabecalhoLinhas());\par
355     ui->tableLinhas->setStyleSheet(style.cssTabelaBarras); {\cf20 //insere QSS na tabela}\par
356     ui->tableLinhas->verticalHeader()->setStyleSheet(style.cssHeaderTabela);\par
357     ui->tableLinhas->verticalHeader()->setLineWidth(1);\par
358     ui->tableLinhas->horizontalHeader()->setVisible({\cf17 true});\par
359     ui->tableLinhas->setAlternatingRowColors({\cf17 true}); {\cf20 //aplica anternacia de cores na tabela}\par
360     ui->tableLinhas->verticalHeader()->setDefaultSectionSize(30);\par
361     {\cf19 for}({\cf18 int} i = 0 ; i < (2 + 2*quantidadeDeComponentesHarm + 4) ; i++)\{\par
362         ui->tableLinhas->setRowHeight(i, 31);\par
363     \}\par
364     ui->tableBarras->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOn);\par
365     ui->tableLinhas->setHorizontalHeaderLabels(linhasDoSistema());\par
366 \par
367 \par
368 \}\par
}
}
{\xe \v insereQssTabWidget\:FrameBarras}
{\xe \v FrameBarras\:insereQssTabWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssTabWidget ()}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 327                                     \{\par
328     Style style;\par
329     ui->tabLinhas->setStyleSheet(style.cssTabWidget);\par
330 \}\par
}
}
{\xe \v linhasDoSistema\:FrameBarras}
{\xe \v FrameBarras\:linhasDoSistema}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FrameBarras::linhasDoSistema ()}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 247                                         \{\par
248     {\cf18 int} origem;\par
249     {\cf18 int} destino;\par
250     QStringList linhas;\par
251     {\cf19 if}(!MainWindow::arquivoThdi->open(QFile::ReadOnly|QFile::Text))\{\par
252     {\cf19 if}(MainWindow::arquivoThdi->error() == QFile::OpenError)\{\par
253             {\cf19 return} QStringList();\par
254     \}\par
255     QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
256     {\cf19 return} QStringList();\par
257     \}\par
258 \par
259     {\cf19 for}({\cf18 int} i = 0 ; i < 2 ; i++)\{\par
260         MainWindow::arquivoThdi->readLine();\par
261     \}\par
262 \par
263     {\cf19 while}(!MainWindow::arquivoThdi->atEnd())\{\par
264         QString line = MainWindow::arquivoThdi->readLine();\par
265         QStringList indice = line.split({\cf22 ","});\par
266         origem = indice.at(0).trimmed().toInt();\par
267         destino = indice.at(2).trimmed().toInt();\par
268         {\cf19 if}(origem < destino)\{\par
269             QString item = QString::number(origem) +{\cf22 " -> "}+QString::number(destino);\par
270             linhas.push_back(item);\par
271         \}\par
272     \}\par
273     MainWindow::arquivoThdi->close();\par
274     {\cf19 return} linhas;\par
275 \par
276 \par
277 \}\par
}
}
{\xe \v potencia\:FrameBarras}
{\xe \v FrameBarras\:potencia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double FrameBarras::potencia (double  {\i base}, int  {\i expoente}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 512                                                              \{\par
513     {\cf19 return} (expoente==0) ? 1 : (expoente == 1) ? base : base*potencia(base,expoente-1);\par
514 \}\par
}
}
{\xe \v preencheBarra\:FrameBarras}
{\xe \v FrameBarras\:preencheBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheBarra ()}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 381                                 \{\par
382 \par
383     {\cf20 //O arquivo thdv possui uma linha de informa~\'E7\'E3o para cada barra -- por isso foi selecionado}\par
384     {\cf20 //realiza o procedimento de abertura do arquivo e alerta caso aconte\'E7a algum erro -- Conforme explicado no mainwindow.cpp}\par
385     {\cf19 if}(!MainWindow::arquivoThdv->open(QFile::ReadOnly|QFile::Text))\{\par
386         {\cf19 if}(MainWindow::arquivoThdv->error() == QFile::OpenError)\{\par
387             return ;\par
388         \}\par
389         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
390         return ;\par
391     \}\par
392 \par
393     {\cf19 for}({\cf18 int} i = 0 ; i < 2 ; i++)\{\par
394         MainWindow::arquivoThdv->readLine();\par
395     \}\par
396 \par
397     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
398         QString line = MainWindow::arquivoThdv->readLine();\par
399         QStringList indice = line.split({\cf22 ","});\par
400         {\cf18 bool} ok = {\cf17 false}; {\cf20 // inicializa com 'false' indicando que a convers\'E3o falhou}\par
401         {\cf18 double} tensaoPu = indice.at(2).trimmed().toDouble(&ok);\par
402         {\cf19 if}(ok)\{\par
403             barras[i].setTensaoPu(tensaoPu);\par
404         \}\par
405         ok={\cf17 false};\par
406         {\cf18 double} thdv = indice.at(3).trimmed().toDouble(&ok);\par
407         {\cf19 if}(ok)\{\par
408             barras[i].setThdvPercent(thdv);\par
409         \}\par
410         {\cf18 double} tensaoNominal = FrameTensoes::tensoesNominais[i];\par
411             barras[i].setTensaoNominalKv(tensaoNominal);\par
412 \par
413         {\cf19 if}(tensaoNominal <= 1)\{\par
414             barras[i].setClasseTensaoThdv(1);\par
415         \}{\cf19 else} {\cf19 if}(tensaoNominal > 1 && tensaoNominal < 69)\{\par
416             barras[i].setClasseTensaoThdv(2);\par
417         \}{\cf19 else}\{\par
418             barras[i].setClasseTensaoThdv(3);\par
419         \}\par
420         {\cf20 //verifica se o thdv est\'E1 acima do limite}\par
421         {\cf19 switch}(barras[i].getClasseTensaoThdv())\{\par
422             {\cf19 case} 1: {\cf19 if}(barras[i].getThdvPercent() > 10)\{\par
423                     barras[i].setbarraInfectadaThdv({\cf17 true});\par
424                 \}{\cf19 else}\{\par
425                     barras[i].setbarraInfectadaThdv({\cf17 false});\par
426                 \}\par
427                 {\cf19 break};\par
428             {\cf19 case} 2: {\cf19 if}(barras[i].getThdvPercent() > 8)\{\par
429                     barras[i].setbarraInfectadaThdv({\cf17 true});\par
430                 \}{\cf19 else}\{\par
431                     barras[i].setbarraInfectadaThdv({\cf17 false});\par
432                 \}\par
433                 {\cf19 break};\par
434             {\cf19 case} 3:\par
435                 {\cf19 if}(barras[i].getThdvPercent() > 5)\{\par
436                     barras[i].setbarraInfectadaThdv({\cf17 true});\par
437                 \}{\cf19 else}\{\par
438                     barras[i].setbarraInfectadaThdv({\cf17 false});\par
439                 \}\par
440                 {\cf19 break};\par
441         \}\par
442 \par
443         {\cf18 double} tensaoEficaz = tensaoPu*sqrt(1+ potencia((thdv/100),2));\par
444             barras[i].setTensaoEficaz(tensaoEficaz);\par
445     \}\par
446     MainWindow::arquivoThdv->close();\par
447 \par
448     {\cf19 if}(!MainWindow::arquivoVsoln->open(QFile::ReadOnly|QFile::Text))\{\par
449             {\cf19 if}(MainWindow::arquivoVsoln->error() == QFile::OpenError)\{\par
450             return  ;\par
451             \}\par
452             QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
453             return  ;\par
454     \}\par
455 \par
456     {\cf19 for}({\cf18 int} i = 0 ; i < 4 ; i++)\{\par
457             MainWindow::arquivoVsoln->readLine();\par
458     \}\par
459 \par
460     {\cf18 int} numBarra;\par
461     {\cf18 int} numHarm;\par
462     {\cf18 double} magHarm;\par
463     {\cf18 double} percentHarm;\par
464     {\cf18 int} classeTensaoThdi;\par
465     std::setlocale(LC_ALL,{\cf22 ""});\par
466     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras*(quantidadeDeComponentesHarm+1) ; i++)\{\par
467         QString line = MainWindow::arquivoVsoln->readLine();\par
468         QStringList indice = line.split({\cf22 ","});\par
469 \par
470         numBarra = indice.at(1).trimmed().toInt()-1;\par
471         numHarm = indice.at(0).trimmed().toInt();\par
472         magHarm = indice.at(2).trimmed().toDouble();\par
473         percentHarm = 100*magHarm/(barras[numBarra].getTensaoPu());\par
474 \par
475         {\cf19 if}(barras[numBarra].getTensaoNominalKv() <= 1 )\{\par
476             classeTensaoThdi = 1;\par
477         \}{\cf19 else} {\cf19 if}(barras[numBarra].getTensaoNominalKv() > 1 && barras[numBarra].getTensaoNominalKv() <= 13.8)\{\par
478             classeTensaoThdi = 2;\par
479         \}{\cf19 else} {\cf19 if}(barras[numBarra].getTensaoNominalKv() > 13.8 && barras[numBarra].getTensaoNominalKv() <= 69)\{\par
480             classeTensaoThdi = 3;\par
481         \}{\cf19 else}\{\par
482             classeTensaoThdi = 4;\par
483         \}\par
484 \par
485 \par
486         {\cf19 if}(indice.at(0).trimmed().toInt()!=1)\{\par
487 \par
488             {\cf19 if}(numHarm > 25 && numHarm%3==0)\{\par
489                     {\cf19 if}(percentHarm > limitesDti[classeTensaoThdi][997])\{\par
490                         barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 true});\par
491                     \}{\cf19 else}\{\par
492                         barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 false});\par
493                     \}\par
494             \}{\cf19 else} {\cf19 if}(numHarm > 25 && numHarm%3!=0)\{\par
495                     {\cf19 if}(percentHarm > limitesDti[classeTensaoThdi][998])\{\par
496                         barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 true});\par
497                     \}{\cf19 else}\{\par
498                         barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 false});\par
499                     \}\par
500             \}{\cf19 else}\{\par
501                 {\cf19 if}(percentHarm > limitesDti[classeTensaoThdi][numHarm])\{\par
502                         barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 true});\par
503                     \}{\cf19 else}\{\par
504                         barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 false});\par
505                     \}\par
506             \}\par
507         \}\par
508     \}\par
509 \par
510     MainWindow::arquivoVsoln->close();\par
511 \}\par
}
}
{\xe \v preencheFrameBarras\:FrameBarras}
{\xe \v FrameBarras\:preencheFrameBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheFrameBarras ()}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 59                                      \{\par
60     insereQssFrameBarras();\par
61     inicializaBarra();\par
62     preencheBarra();\par
63 \par
64     preencheTabelaBarra();\par
65 \par
66     inicializaLinha();\par
67     preencheLinha();\par
68 \par
69     preencheTabelaLinha();\par
70 \par
71     insereBackgroundNasPoluidoras();\par
72 \}\par
}
}
{\xe \v preencheLimites\:FrameBarras}
{\xe \v FrameBarras\:preencheLimites}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheLimites ()}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 578                                  \{\par
579     limitesDti[1][3] = 6.5;\par
580     limitesDti[1][5] = 7.5;\par
581     limitesDti[1][7] = 6.5;\par
582     limitesDti[1][9] = 2;\par
583     limitesDti[1][11] = 4.5;\par
584     limitesDti[1][13] = 4;\par
585     limitesDti[1][15] = 1;\par
586     limitesDti[1][17] = 2.5;\par
587     limitesDti[1][19] = 2;\par
588     limitesDti[1][21] = 1;\par
589     limitesDti[1][23] = 2;\par
590     limitesDti[1][25] = 2;\par
591     limitesDti[1][997] = 1.5; {\cf20 // impar nao multplica de 3}\par
592     limitesDti[1][998] = 1; {\cf20 // impar multipla de 3}\par
593 \par
594     limitesDti[2][3] = 5;\par
595     limitesDti[2][5] = 6;\par
596     limitesDti[2][7] = 5;\par
597     limitesDti[2][9] = 1.5;\par
598     limitesDti[2][11] = 3.5;\par
599     limitesDti[2][13] = 3;\par
600     limitesDti[2][15] = 0.5;\par
601     limitesDti[2][17] = 2;\par
602     limitesDti[2][19] = 1.5;\par
603     limitesDti[2][21] = 0.5;\par
604     limitesDti[2][23] = 1.5;\par
605     limitesDti[2][25] = 2;\par
606     limitesDti[1][997] = 1.5; {\cf20 // impar nao multplica de 3 maior q 25}\par
607     limitesDti[1][998] = 1; {\cf20 // impar multipla de 3 maior q 21}\par
608 \par
609 \par
610     limitesDti[3][3] = 1;\par
611     limitesDti[3][5] = 4.5;\par
612     limitesDti[3][7] = 4;\par
613     limitesDti[3][9] = 1.5;\par
614     limitesDti[3][11] = 3;\par
615     limitesDti[3][13] = 2.5;\par
616     limitesDti[3][15] = 0.5;\par
617     limitesDti[3][17] = 1.5;\par
618     limitesDti[3][19] = 1.5;\par
619     limitesDti[3][21] = 0.5;\par
620     limitesDti[3][23] = 1.5;\par
621     limitesDti[3][25] = 1.5;\par
622     limitesDti[3][997] = 1.5; {\cf20 // impar nao multplica de 3 maior q 25}\par
623     limitesDti[3][998] = 0.5; {\cf20 // impar multipla de 3 maior q 21}\par
624 \par
625     limitesDti[4][3] = 0.5;\par
626     limitesDti[4][5] = 2.5;\par
627     limitesDti[4][7] = 2;\par
628     limitesDti[4][9] = 1;\par
629     limitesDti[4][11] = 1.5;\par
630     limitesDti[4][13] = 1.5;\par
631     limitesDti[4][15] = 0.5;\par
632     limitesDti[4][17] = 1;\par
633     limitesDti[4][19] = 1;\par
634     limitesDti[4][21] = 0.5;\par
635     limitesDti[4][23] = 1;\par
636     limitesDti[4][25] = 1;\par
637     limitesDti[4][997] = 0.5; {\cf20 // impar nao multplica de 3 maior q 25}\par
638     limitesDti[4][998] = 0.5; {\cf20 // impar multipla de 3 maior q 21}\par
639 \}\par
}
}
{\xe \v preencheLinha\:FrameBarras}
{\xe \v FrameBarras\:preencheLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheLinha ()}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 126                                \{\par
127     {\cf19 if}(!MainWindow::arquivoThdi->open(QFile::ReadOnly|QFile::Text))\{\par
128     {\cf19 if}(MainWindow::arquivoThdi->error() == QFile::OpenError)\{\par
129         return  ;\par
130     \}\par
131     QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
132     return  ;\par
133     \}\par
134 \par
135     {\cf19 for}({\cf18 int} i = 0 ; i < 2 ; i++)\{\par
136     MainWindow::arquivoThdi->readLine();\par
137     \}\par
138     {\cf18 int} origem , destino;\par
139     {\cf18 double} corrente , dht;\par
140     {\cf18 int} cont=0;\par
141     {\cf18 double} correnteEficaz;\par
142     {\cf19 while}(!MainWindow::arquivoThdi->atEnd())\{\par
143         QString line = MainWindow::arquivoThdi->readLine();\par
144         QStringList indice = line.split({\cf22 ","});\par
145         origem = indice.at(0).trimmed().toInt();\par
146         destino = indice.at(2).trimmed().toInt();\par
147         corrente = indice.at(5).trimmed().toDouble();\par
148         dht = indice.at(6).trimmed().toDouble();\par
149         correnteEficaz = corrente*sqrt(1+ potencia((dht/100),2));\par
150 \par
151         {\cf19 if}(origem < destino)\{\par
152             linhas[cont].setOrigem(origem);\par
153             linhas[cont].setDestino(destino);\par
154             linhas[cont].setCorrente(corrente);\par
155             linhas[cont].setDhtPercent(dht);\par
156             linhas[cont].setCorrenteEficaz(correnteEficaz);\par
157             cont++;\par
158         \}\par
159     \}\par
160 \par
161     MainWindow::arquivoThdi->close();\par
162 \par
163     {\cf19 if}(!MainWindow::arquivoIsoln->open(QFile::ReadOnly|QFile::Text))\{\par
164         {\cf19 if}(MainWindow::arquivoIsoln->error() == QFile::OpenError)\{\par
165             return  ;\par
166         \}\par
167         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
168         return  ;\par
169     \}\par
170 \par
171     {\cf19 for}({\cf18 int} i = 0 ; i < 4 ; i++)\{\par
172         QString line = MainWindow::arquivoIsoln->readLine();\par
173     \}\par
174 \par
175     {\cf18 int} numHarm;\par
176     {\cf18 double} magHarm;\par
177     {\cf18 double} percentHarm;\par
178     cont = 1;\par
179 \par
180     {\cf19 for}({\cf18 int} i = 0 ; i < quantidadeDeComponentesHarm ; i++)\{\par
181         {\cf19 for}({\cf18 int} j = 0 ; j < numeroDeLinhas ; )\{\par
182             QString line = MainWindow::arquivoIsoln->readLine();\par
183             {\cf19 if} (line.trimmed().isEmpty()) \{ {\cf20 // verificar se \'E9 uma linha vazia}\par
184                 {\cf19 break};\par
185             \}\par
186             QStringList indice = line.split({\cf22 ","});\par
187             numHarm = indice.at(0).trimmed().toInt();\par
188             origem = indice.at(1).trimmed().toInt();\par
189             destino = indice.at(2).trimmed().toInt();\par
190             magHarm = indice.at(4).trimmed().toDouble();\par
191             percentHarm = 100 * (magHarm / linhas[j].getCorrente());\par
192             {\cf19 if} (numHarm != 1 && origem < destino && origem !=0 && destino!=0) \{\par
193                 linhas[j].setDti(numHarm, magHarm, percentHarm);\par
194                 j++;\par
195             \}\par
196         \}\par
197     \}\par
198 \par
199 \par
200     MainWindow::arquivoIsoln->close();\par
201 \par
202     {\cf19 if}(!MainWindow::arquivoLdat->open(QFile::ReadOnly|QFile::Text))\{\par
203         {\cf19 if}(MainWindow::arquivoLdat->error() == QFile::OpenError)\{\par
204             return  ;\par
205         \}\par
206         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
207         return  ;\par
208     \}\par
209 \par
210     {\cf19 for}({\cf18 int} i = 0 ; i < 9 ; i++)\{\par
211         MainWindow::arquivoLdat->readLine();\par
212     \}\par
213     {\cf18 double} resistencia;\par
214     {\cf18 double} perdas;\par
215     {\cf18 double} perdasEficaz;\par
216     {\cf19 for}({\cf18 int} i = 0 ; i < numeroDeLinhas ; i++)\{\par
217         QString line = MainWindow::arquivoLdat->readLine();\par
218         {\cf19 if} (line.trimmed().isEmpty()) \{ {\cf20 // verificar se \'E9 uma linha vazia}\par
219             {\cf19 break};\par
220         \}\par
221         QStringList indice = line.split({\cf22 ","});\par
222         {\cf19 if}(indice.at(0).trimmed().toInt() > indice.at(1).trimmed().toInt())\{\par
223             origem = indice.at(1).trimmed().toInt();\par
224             destino = indice.at(0).trimmed().toInt();\par
225         \}{\cf19 else}\{\par
226             origem = indice.at(0).trimmed().toInt();\par
227             destino = indice.at(1).trimmed().toInt();\par
228         \}\par
229         resistencia = indice.at(3).trimmed().toDouble();\par
230 \par
231         {\cf19 for}({\cf18 int} j = 0 ; j < numeroDeLinhas ; j++)\{\par
232             {\cf19 if}(linhas[j].getOrigem() == origem && linhas[j].getDestino() == destino)\{\par
233                 linhas[j].setResistencia(resistencia);\par
234                 perdas = linhas[j].getCorrente()*resistencia;\par
235                 perdasEficaz = linhas[j].getCorrenteEficaz()*resistencia;\par
236                 linhas[j].setPerdas(perdas);\par
237                 linhas[j].setPerdasEficaz(perdasEficaz);\par
238             \}\par
239         \}\par
240 \par
241     \}\par
242 \par
243     MainWindow::arquivoLdat->close();\par
244 \par
245     return ;\par
246 \}\par
}
}
{\xe \v preencheTabelaBarra\:FrameBarras}
{\xe \v FrameBarras\:preencheTabelaBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheTabelaBarra ()}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 278                                      \{\par
279     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
280         QTableWidgetItem* tensaoPu = {\cf17 new} QTableWidgetItem(QString::number(barras[i].getTensaoPu(),{\cf23 'f'},5));\par
281         QTableWidgetItem* tensaoNominal = {\cf17 new} QTableWidgetItem(QString::number(barras[i].getTensaoNominalKv(),{\cf23 'f'},5));\par
282         QTableWidgetItem* thdv = {\cf17 new} QTableWidgetItem(QString::number(barras[i].getThdvPercent(),{\cf23 'f'},5));\par
283         ui->tableBarras->setItem(0,i, tensaoPu);\par
284         ui->tableBarras->setItem(1,i,tensaoNominal);\par
285         ui->tableBarras->setItem(2,i,thdv);\par
286         {\cf18 int} pos =3;\par
287         {\cf19 for}({\cf18 int} j = 3 ; j <= indiceHarmMax ; j+=2)\{\par
288             QTableWidgetItem* dtiAbsolut = {\cf17 new} QTableWidgetItem(QString::number(barras[i].getDti().find(j)->second.first.first,{\cf23 'e'},5));\par
289             ui->tableBarras->setItem(pos,i,dtiAbsolut);\par
290             pos++;\par
291         \}\par
292         {\cf19 for}({\cf18 int} j = 3 ; j <= indiceHarmMax ; j+=2)\{\par
293             QTableWidgetItem* dtiRelative = {\cf17 new} QTableWidgetItem(QString::number(barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5));\par
294             ui->tableBarras->setItem(pos,i,dtiRelative);\par
295             pos++;\par
296         \}\par
297         QTableWidgetItem* tensaoEficaz = {\cf17 new} QTableWidgetItem(QString::number(barras[i].getTensaoEficaz(),{\cf23 'f'},5));\par
298         ui->tableBarras->setItem(pos,i,tensaoEficaz);\par
299     \}\par
300 \par
301 \}\par
}
}
{\xe \v preencheTabelaLinha\:FrameBarras}
{\xe \v FrameBarras\:preencheTabelaLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheTabelaLinha ()}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73                                      \{\par
74     {\cf19 for}({\cf18 int} i = 0 ; i < numeroDeLinhas ; i++)\{\par
75         QTableWidgetItem* correntePu = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getCorrente(),{\cf23 'f'},5));\par
76         QTableWidgetItem* dht = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getDhtPercent(),{\cf23 'f'},5));\par
77         ui->tableLinhas->setItem(0,i,correntePu);\par
78         ui->tableLinhas->setItem(1,i,dht);\par
79         {\cf18 int} pos =2;\par
80         {\cf19 for}({\cf18 int} j = 3 ; j <= indiceHarmMax ; j+=2)\{\par
81             QTableWidgetItem* dtiAbsolut = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getDti().find(j)->second.first,{\cf23 'e'},5));\par
82             ui->tableLinhas->setItem(pos,i,dtiAbsolut);\par
83             pos++;\par
84         \}\par
85         {\cf19 for}({\cf18 int} j = 3 ; j <= indiceHarmMax ; j+=2)\{\par
86             QTableWidgetItem* dtiRelative = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5));\par
87             ui->tableLinhas->setItem(pos,i,dtiRelative);\par
88             pos++;\par
89         \}\par
90         QTableWidgetItem* correnteEficaz = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getCorrenteEficaz(),{\cf23 'f'},5));\par
91         ui->tableLinhas->setItem(pos,i,correnteEficaz);\par
92         pos++;\par
93 \par
94         QTableWidgetItem* resistencia = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getResistencia(),{\cf23 'f'},5));\par
95         ui->tableLinhas->setItem(pos,i,resistencia);\par
96         pos++;\par
97 \par
98         QTableWidgetItem* perdas = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getPerdas(),{\cf23 'f'},5));\par
99         ui->tableLinhas->setItem(pos,i,perdas);\par
100         pos++;\par
101 \par
102         QTableWidgetItem* perdasEficaz = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getPerdasEficaz(),{\cf23 'f'},5));\par
103         ui->tableLinhas->setItem(pos,i,perdasEficaz);\par
104         pos++;\par
105 \par
106 \par
107     \}\par
108 \}\par
}
}
{\xe \v quantidadeDeBarras\:FrameBarras}
{\xe \v FrameBarras\:quantidadeDeBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::quantidadeDeBarras ()}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 556                                    \{\par
557     QFile *arq1 = MainWindow::arquivoThdv; {\cf20 //cria um ponteiro para realizar a leitura de um arquivo}\par
558     {\cf20 //O arquivo thdv possui uma linha de informa~\'E7\'E3o para cada barra -- por isso foi selecionado}\par
559     {\cf20 //realiza o procedimento de abertura do arquivo e alerta caso aconte\'E7a algum erro -- Conforme explicado no mainwindow.cpp}\par
560     {\cf19 if}(!arq1->open(QFile::ReadOnly|QFile::Text))\{\par
561         {\cf19 if}(arq1->error() == QFile::OpenError)\{\par
562             {\cf19 return} 0 ;\par
563         \}\par
564         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
565         {\cf19 return} 0 ;\par
566     \}\par
567     {\cf18 int} contador=0; {\cf20 // declara e inicia um contador}\par
568     QTextStream entrada(arq1); {\cf20 //declara um}\par
569     {\cf19 while}(!arq1->atEnd())\{\par
570         arq1->readLine(); {\cf20 // faz a leitura de cada linha}\par
571         contador++; {\cf20 // realiza a contagem da quantidade de linhas do arquivo}\par
572     \}\par
573     arq1->close(); {\cf20 //fecha o arquivo}\par
574     {\cf19 return} (contador-3); {\cf20 // o numero de barras \'E9 igual ao numero de linhas menos 3 linhas de texto sobre o software e uma vazia}\par
575 \par
576 \par
577 \}\par
}
}
{\xe \v setLimitesDti\:FrameBarras}
{\xe \v FrameBarras\:setLimitesDti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void FrameBarras::setLimitesDti (int  {\i nivelTensao}, int  {\i harmonica}, double  {\i limite}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 63                                                                               \{\par
64         limitesDti[nivelTensao][harmonica] = limite;\par
65     \}\par
}
}
{\xe \v verificaAvanco\:FrameBarras}
{\xe \v FrameBarras\:verificaAvanco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::verificaAvanco ()}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v barras\:FrameBarras}
{\xe \v FrameBarras\:barras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b Barra} > FrameBarras::barras = QList<{\b Barra}>(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v filtroBarraInserido\:FrameBarras}
{\xe \v FrameBarras\:filtroBarraInserido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FrameBarras::filtroBarraInserido{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v filtroLinhaInserido\:FrameBarras}
{\xe \v FrameBarras\:filtroLinhaInserido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FrameBarras::filtroLinhaInserido{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v indexTab\:FrameBarras}
{\xe \v FrameBarras\:indexTab}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::indexTab = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v indiceHarmMax\:FrameBarras}
{\xe \v FrameBarras\:indiceHarmMax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::indiceHarmMax{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v linhas\:FrameBarras}
{\xe \v FrameBarras\:linhas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b Linha} > FrameBarras::linhas = QList<{\b Linha}>(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numeroDeLinhas\:FrameBarras}
{\xe \v FrameBarras\:numeroDeLinhas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::numeroDeLinhas{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v quantidadeDeComponentesHarm\:FrameBarras}
{\xe \v FrameBarras\:quantidadeDeComponentesHarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::quantidadeDeComponentesHarm{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b framebarras.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b framebarras.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe FrameExportar\par \pard\plain 
{\tc\tcl2 \v FrameExportar}
{\xe \v FrameExportar}
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
\par
{
{\f2 #include <frameexportar.h>}}\par
Diagrama de hierarquia para FrameExportar:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_frame_exportar.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FrameExportar} (QWidget *parent=nullptr, Ui::MainWindow *mw=nullptr, Ui::FrameBarras *fb=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FrameExportar} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirQssFrame} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirQssImg} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirQssRadioButton} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirQssBtn} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaFrame} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirPdfIntervaloBarras} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirPdfCombonentesBarras} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirPdfBarrasInfectadas} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInterBInterL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInterBInterL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInterBarrasTodL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInterBarrasTodL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfCompBarrasInterL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfCompBarrasInterL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfCompBarrasTodL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfCompBarrasaTodL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInfecBarrasInterL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInfecBarrasInterL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInfecBarrasTodL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInfecBarrasTodL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInterBInterL1InterL2} (QPrinter *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInterBInterL1TodL2} (QPrinter *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInterBarrasTodL1InterL2} (QPrinter *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInterBarrasTodL1TodL2} (QPrinter *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContCompBarrasInterL1InterL2} (QPrinter *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContCompBarrasInterL1TodL2} (QPrinter *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContCompBarrasTodL1InterL2} (QPrinter *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContCompBarrasaTodL1TodL2} (QPrinter *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInfecBarrasInterL1InterL2} (QPrinter *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInfecBarrasInterL1TodL2} (QPrinter *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInfecBarrasTodL1InterL2} (QPrinter *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInfecBarrasTodL1TodL2} (QPrinter *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b QtdLinhasInfoBarra} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b QtdLinhasInfoLinha} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInterBInterL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInterBInterL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInterBarrasTodL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInterBarrasTodL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelCompBarrasInterL2InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelCompBarrasInterL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelCompBarrasTodL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelCompBarrasaTodL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInfecBarrasInterL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInfecBarrasInterL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInfecBarrasTodL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInfecBarrasTodL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b numeroParaLetra} (int numero)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QXlsx::Document * {\b criaPlanilha} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelPulaLinha} (int *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b salvaPlanilha} (QXlsx::Document *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveBarrasIntervalo} (QXlsx::Document *, int *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveBarrasComp} (QXlsx::Document *, int *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveBarrasInfec} (QXlsx::Document *, int *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveLInterL1InterL2} (QXlsx::Document *, int *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveLInterL1TodL2} (QXlsx::Document *, int *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveLTodL1InterL2} (QXlsx::Document *, int *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveLTodL1TodL2} (QXlsx::Document *, int *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInterBarrasInterL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInterBarrasInterL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInterBarrasTodL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInterBarrasTodL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvCompBarrasInterL2InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvCompBarrasInterL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvCompBarrasTodL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvCompBarrasaTodL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInfecBarrasInterL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInfecBarrasInterL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInfecBarrasTodL1InterL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInfecBarrasTodL1TodL2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFile * {\b criaArquivo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveBarrasIntervalo} (QTextStream *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveBarrasComp} (QTextStream *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveBarrasInfec} (QTextStream *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveLInterL1InterL2} (QTextStream *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveLInterL1TodL2} (QTextStream *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveLTodL1InterL2} (QTextStream *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveLTodL1TodL2} (QTextStream *)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v FrameExportar\:FrameExportar}
{\xe \v FrameExportar\:FrameExportar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameExportar::FrameExportar (QWidget *  {\i parent} = {\f2 nullptr}, Ui::MainWindow *  {\i mw} = {\f2 nullptr}, Ui::FrameBarras *  {\i fb} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28                                                                                  :\par
29     QFrame(parent),\par
30     ui({\cf17 new} Ui::FrameExportar)\par
31 \{\par
32     ui->setupUi({\cf17 this});\par
33 \par
34     frameMa = mw;\par
35     pa = parent;\par
36     frameB = fb;\par
37 \par
38     inicializaFrame();\par
39 \par
40 \}\par
}
}
{\xe \v ~FrameExportar\:FrameExportar}
{\xe \v FrameExportar\:~FrameExportar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameExportar::~FrameExportar ()}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 71 \{\par
72     {\cf17 delete} ui;\par
73 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v ContCompBarrasaTodL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:ContCompBarrasaTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ContCompBarrasaTodL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 2636                                                               \{\par
2637     QPainter painter(printer);\par
2638     painter.begin(printer);\par
2639     {\cf18 int} w = painter.device()->width();\par
2640     {\cf18 int} h = painter.device()->height();\par
2641 \par
2642     {\cf20 // Carrega a imagem do arquivo}\par
2643     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
2644 \par
2645     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2646     QRectF logoRect(20, 20, 300, 56);\par
2647 \par
2648     {\cf20 // Desenha a imagem na p\'E1gina}\par
2649     painter.drawImage(logoRect, logo);\par
2650 \par
2651     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
2652     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
2653 \par
2654     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
2655     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
2656 \par
2657     QFontMetrics fmPrincipal(fontePrincipal);\par
2658     QFontMetrics fmSubtexto(fonteSubtexto);\par
2659 \par
2660     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
2661     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
2662 \par
2663     painter.setFont(fontePrincipal);\par
2664     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
2665 \par
2666     painter.setFont(fonteSubtexto);\par
2667     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
2668 \par
2669     printer->newPage();\par
2670 \par
2671     {\cf20 // Desenha a imagem na p\'E1gina}\par
2672     painter.drawImage(logoRect, logo);\par
2673 \par
2674     QString TituloBarras = {\cf22 "Barras"};\par
2675 \par
2676 \par
2677     painter.setFont(fontePrincipal);\par
2678     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
2679 \par
2680     printer->newPage();\par
2681 \par
2682 \par
2683 \par
2684     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2685     QRectF logoMenorRect(20, 20, 100, 19);\par
2686 \par
2687     {\cf20 // Desenha a imagem na p\'E1gina}\par
2688     painter.drawImage(logoMenorRect, logo);\par
2689 \par
2690     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
2691     gradient.setColorAt(0, QColor(180, 235, 249));\par
2692     gradient.setColorAt(1, QColor(30, 56, 91));\par
2693     painter.setBrush(QBrush(gradient));\par
2694     {\cf20 //estilo da fonte do header}\par
2695     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
2696 \par
2697     {\cf20 // Define o estilo da fonte}\par
2698     QFont fontConteudo({\cf22 "Roboto"},12);\par
2699 \par
2700     {\cf18 int} inicioItem = 100;\par
2701 \par
2702 \par
2703     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
2704         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
2705             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
2706                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
2707                     printer->newPage();\par
2708                     inicioItem = 100;\par
2709                     painter.drawImage(logoMenorRect, logo);\par
2710                 \}\par
2711                 QLabel* labelHeader = {\cf17 new} QLabel();\par
2712                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2713                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2714                 labelHeader->setFont(fontHeader);\par
2715                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2716                 labelHeader->setTextFormat(Qt::RichText);\par
2717 \par
2718                 {\cf20 // Cria a QString atributos com a tag <html>}\par
2719                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2720 \par
2721                 {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
2722                     atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
2723                         QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
2724                     atributos = atributos.arg(tensao);\par
2725                 \}\par
2726 \par
2727                 {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
2728                     atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
2729                         QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
2730                     atributos = atributos.arg(tensaoNominal);\par
2731                 \}\par
2732 \par
2733                 {\cf19 if} (FiltrosBarra::thdv) \{\par
2734                     (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
2735                     QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
2736                     atributos = atributos.arg(thdv);\par
2737                 \}\par
2738 \par
2739                 {\cf19 if}(FiltrosBarra::dit)\{\par
2740                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2741                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
2742                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
2743                         atributos = atributos.arg(j);\par
2744                         atributos = atributos.arg(tdi);\par
2745                     \}\par
2746                 \}\par
2747 \par
2748                 {\cf19 if}(FiltrosBarra::ditPercent)\{\par
2749                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2750                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
2751                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
2752                         atributos = atributos.arg(j);\par
2753                         atributos = atributos.arg(tdi);\par
2754                     \}\par
2755                 \}\par
2756 \par
2757                 {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
2758                     atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
2759                     QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
2760                     atributos = atributos.arg(tensaoEficaz);\par
2761                 \}\par
2762 \par
2763                 {\cf20 // Fecha a tag </div> e </html>}\par
2764                 atributos += {\cf22 "</div></html>"};\par
2765 \par
2766                 {\cf20 // Cria a QLabel com os atributos}\par
2767                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
2768                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
2769                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2770                 labelAtributos->setFont(fontConteudo);\par
2771                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2772                 labelAtributos->setTextFormat(Qt::RichText);\par
2773                 labelAtributos->setText(atributos);\par
2774 \par
2775                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
2776                 QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
2777                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2778                 painter.setFont(fontHeader);\par
2779                 painter.setPen(QPen(Qt::white));\par
2780                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2781 \par
2782                 {\cf20 // Desenha a QLabel na imagem}\par
2783                 QPixmap pixmap = labelAtributos->grab();\par
2784                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
2785 \par
2786                 inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
2787             \}\par
2788         \}\par
2789     \}\par
2790 \par
2791     printer->newPage();\par
2792 \par
2793     {\cf20 // Desenha a imagem na p\'E1gina}\par
2794     painter.drawImage(logoRect, logo);\par
2795 \par
2796     QString TituloLinhas = {\cf22 "Linhas"};\par
2797 \par
2798     painter.setPen(QPen());\par
2799     painter.setFont(fontePrincipal);\par
2800     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
2801 \par
2802 \par
2803     printer->newPage();\par
2804 \par
2805     {\cf20 // Desenha a imagem na p\'E1gina}\par
2806     painter.drawImage(logoMenorRect, logo);\par
2807 \par
2808     inicioItem = 100;\par
2809 \par
2810     {\cf19 for}({\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
2811 \par
2812         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
2813             printer->newPage();\par
2814             inicioItem = 100;\par
2815             painter.drawImage(logoMenorRect, logo);\par
2816 \par
2817         \}\par
2818 \par
2819         QLabel* labelHeader = {\cf17 new} QLabel();\par
2820         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2821         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2822         labelHeader->setFont(fontHeader);\par
2823         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2824         labelHeader->setTextFormat(Qt::RichText);\par
2825 \par
2826 \par
2827         {\cf20 // Cria a QString atributos com a tag <html>}\par
2828         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2829 \par
2830         {\cf19 if}(FiltroLinha::correntePu)\{\par
2831             atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
2832             QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
2833             atributos = atributos.arg(corrente);\par
2834         \}\par
2835         {\cf19 if}(FiltroLinha::dht)\{\par
2836             atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
2837             QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
2838             atributos = atributos.arg(dht);\par
2839         \}\par
2840         {\cf19 if}(FiltroLinha::dit)\{\par
2841             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2842                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
2843                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
2844                 atributos = atributos.arg(j);\par
2845                 atributos = atributos.arg(tdi);\par
2846             \}\par
2847         \}\par
2848         {\cf19 if}(FiltroLinha::ditPercent)\{\par
2849             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2850                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
2851                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
2852                 atributos = atributos.arg(j);\par
2853                 atributos = atributos.arg(tdiPercent);\par
2854             \}\par
2855         \}\par
2856         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
2857             atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
2858             QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
2859             atributos = atributos.arg(correnteEficaz);\par
2860         \}\par
2861         {\cf19 if}(FiltroLinha::resistencia)\{\par
2862             atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
2863             QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
2864             atributos = atributos.arg(resistencia);\par
2865         \}\par
2866         {\cf19 if}(FiltroLinha::perdas)\{\par
2867             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2868             QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
2869             atributos = atributos.arg(perdas);\par
2870         \}\par
2871         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
2872             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2873             QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
2874             atributos = atributos.arg(perdasEficaz);\par
2875         \}\par
2876 \par
2877         {\cf20 // Fecha a tag </div> e </html>}\par
2878         atributos += {\cf22 "</div></html>"};\par
2879 \par
2880         {\cf20 // Cria a QLabel com os atributos}\par
2881         QLabel* labelAtributos = {\cf17 new} QLabel();\par
2882         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
2883         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2884         labelAtributos->setFont(fontConteudo);\par
2885         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2886         labelAtributos->setTextFormat(Qt::RichText);\par
2887         labelAtributos->setText(atributos);\par
2888 \par
2889         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
2890         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
2891         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
2892         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
2893 \par
2894 \par
2895         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2896         painter.setFont(fontHeader);\par
2897         painter.setPen(QPen(Qt::white));\par
2898         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2899 \par
2900         {\cf20 // Desenha a QLabel na imagem}\par
2901         QPixmap pixmap = labelAtributos->grab();\par
2902         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
2903 \par
2904         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
2905 \par
2906     \}\par
2907 \par
2908     painter.end();\par
2909 \}\par
}
}
{\xe \v ContCompBarrasInterL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:ContCompBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ContCompBarrasInterL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1803                                                                  \{\par
1804     QPainter painter(printer);\par
1805     painter.begin(printer);\par
1806     {\cf18 int} w = painter.device()->width();\par
1807     {\cf18 int} h = painter.device()->height();\par
1808 \par
1809     {\cf20 // Carrega a imagem do arquivo}\par
1810     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
1811 \par
1812     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1813     QRectF logoRect(20, 20, 300, 56);\par
1814 \par
1815     {\cf20 // Desenha a imagem na p\'E1gina}\par
1816     painter.drawImage(logoRect, logo);\par
1817 \par
1818     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
1819     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
1820 \par
1821     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
1822     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
1823 \par
1824     QFontMetrics fmPrincipal(fontePrincipal);\par
1825     QFontMetrics fmSubtexto(fonteSubtexto);\par
1826 \par
1827     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
1828     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
1829 \par
1830     painter.setFont(fontePrincipal);\par
1831     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
1832 \par
1833     painter.setFont(fonteSubtexto);\par
1834     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
1835 \par
1836     printer->newPage();\par
1837 \par
1838     {\cf20 // Desenha a imagem na p\'E1gina}\par
1839     painter.drawImage(logoRect, logo);\par
1840 \par
1841     QString TituloBarras = {\cf22 "Barras"};\par
1842 \par
1843 \par
1844     painter.setFont(fontePrincipal);\par
1845     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
1846 \par
1847     printer->newPage();\par
1848 \par
1849 \par
1850 \par
1851     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1852     QRectF logoMenorRect(20, 20, 100, 19);\par
1853 \par
1854     {\cf20 // Desenha a imagem na p\'E1gina}\par
1855     painter.drawImage(logoMenorRect, logo);\par
1856 \par
1857     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
1858     gradient.setColorAt(0, QColor(180, 235, 249));\par
1859     gradient.setColorAt(1, QColor(30, 56, 91));\par
1860     painter.setBrush(QBrush(gradient));\par
1861     {\cf20 //estilo da fonte do header}\par
1862     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
1863 \par
1864     {\cf20 // Define o estilo da fonte}\par
1865     QFont fontConteudo({\cf22 "Roboto"},12);\par
1866 \par
1867     {\cf18 int} inicioItem = 100;\par
1868 \par
1869 \par
1870     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
1871         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
1872             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
1873                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
1874                     printer->newPage();\par
1875                     inicioItem = 100;\par
1876                     painter.drawImage(logoMenorRect, logo);\par
1877                 \}\par
1878                 QLabel* labelHeader = {\cf17 new} QLabel();\par
1879                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1880                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1881                 labelHeader->setFont(fontHeader);\par
1882                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1883                 labelHeader->setTextFormat(Qt::RichText);\par
1884 \par
1885                 {\cf20 // Cria a QString atributos com a tag <html>}\par
1886                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1887 \par
1888                 {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
1889                     atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
1890                         QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
1891                     atributos = atributos.arg(tensao);\par
1892                 \}\par
1893 \par
1894                 {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
1895                     atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
1896                         QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
1897                     atributos = atributos.arg(tensaoNominal);\par
1898                 \}\par
1899 \par
1900                 {\cf19 if} (FiltrosBarra::thdv) \{\par
1901                     (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
1902                     QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
1903                     atributos = atributos.arg(thdv);\par
1904                 \}\par
1905 \par
1906                 {\cf19 if}(FiltrosBarra::dit)\{\par
1907                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1908                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
1909                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
1910                         atributos = atributos.arg(j);\par
1911                         atributos = atributos.arg(tdi);\par
1912                     \}\par
1913                 \}\par
1914 \par
1915                 {\cf19 if}(FiltrosBarra::ditPercent)\{\par
1916                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1917                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
1918                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
1919                         atributos = atributos.arg(j);\par
1920                         atributos = atributos.arg(tdi);\par
1921                     \}\par
1922                 \}\par
1923 \par
1924                 {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
1925                     atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
1926                     QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
1927                     atributos = atributos.arg(tensaoEficaz);\par
1928                 \}\par
1929 \par
1930                 {\cf20 // Fecha a tag </div> e </html>}\par
1931                 atributos += {\cf22 "</div></html>"};\par
1932 \par
1933                 {\cf20 // Cria a QLabel com os atributos}\par
1934                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
1935                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
1936                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1937                 labelAtributos->setFont(fontConteudo);\par
1938                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1939                 labelAtributos->setTextFormat(Qt::RichText);\par
1940                 labelAtributos->setText(atributos);\par
1941 \par
1942                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
1943                 QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
1944                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1945                 painter.setFont(fontHeader);\par
1946                 painter.setPen(QPen(Qt::white));\par
1947                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1948 \par
1949                 {\cf20 // Desenha a QLabel na imagem}\par
1950                 QPixmap pixmap = labelAtributos->grab();\par
1951                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
1952 \par
1953                 inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
1954             \}\par
1955         \}\par
1956     \}\par
1957 \par
1958     printer->newPage();\par
1959 \par
1960     {\cf20 // Desenha a imagem na p\'E1gina}\par
1961     painter.drawImage(logoRect, logo);\par
1962 \par
1963     QString TituloLinhas = {\cf22 "Linhas"};\par
1964 \par
1965     painter.setPen(QPen());\par
1966     painter.setFont(fontePrincipal);\par
1967     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
1968 \par
1969 \par
1970     printer->newPage();\par
1971 \par
1972     {\cf20 // Desenha a imagem na p\'E1gina}\par
1973     painter.drawImage(logoMenorRect, logo);\par
1974 \par
1975     inicioItem = 100;\par
1976 \par
1977     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1978         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
1979         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
1980         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
1981             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
1982                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
1983                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
1984                         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
1985                         printer->newPage();\par
1986                         inicioItem = 100;\par
1987                         painter.drawImage(logoMenorRect, logo);\par
1988                         \}\par
1989 \par
1990                         QLabel* labelHeader = {\cf17 new} QLabel();\par
1991                         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1992                         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1993                         labelHeader->setFont(fontHeader);\par
1994                         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1995                         labelHeader->setTextFormat(Qt::RichText);\par
1996 \par
1997 \par
1998                         {\cf20 // Cria a QString atributos com a tag <html>}\par
1999                         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2000 \par
2001                         {\cf19 if}(FiltroLinha::correntePu)\{\par
2002                         atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
2003                         QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
2004                         atributos = atributos.arg(corrente);\par
2005                         \}\par
2006                         {\cf19 if}(FiltroLinha::dht)\{\par
2007                         atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
2008                         QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
2009                         atributos = atributos.arg(dht);\par
2010                         \}\par
2011                         {\cf19 if}(FiltroLinha::dit)\{\par
2012                         {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2013                                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
2014                                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
2015                                 atributos = atributos.arg(j);\par
2016                                 atributos = atributos.arg(tdi);\par
2017                         \}\par
2018                         \}\par
2019                         {\cf19 if}(FiltroLinha::ditPercent)\{\par
2020                         {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2021                                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
2022                                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
2023                                 atributos = atributos.arg(j);\par
2024                                 atributos = atributos.arg(tdiPercent);\par
2025                         \}\par
2026                         \}\par
2027                         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
2028                         atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
2029                         QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
2030                         atributos = atributos.arg(correnteEficaz);\par
2031                         \}\par
2032                         {\cf19 if}(FiltroLinha::resistencia)\{\par
2033                         atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
2034                         QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
2035                         atributos = atributos.arg(resistencia);\par
2036                         \}\par
2037                         {\cf19 if}(FiltroLinha::perdas)\{\par
2038                         atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2039                         QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
2040                         atributos = atributos.arg(perdas);\par
2041                         \}\par
2042                         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
2043                         atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2044                         QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
2045                         atributos = atributos.arg(perdasEficaz);\par
2046                         \}\par
2047 \par
2048                         {\cf20 // Fecha a tag </div> e </html>}\par
2049                         atributos += {\cf22 "</div></html>"};\par
2050 \par
2051                         {\cf20 // Cria a QLabel com os atributos}\par
2052                         QLabel* labelAtributos = {\cf17 new} QLabel();\par
2053                         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
2054                         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2055                         labelAtributos->setFont(fontConteudo);\par
2056                         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2057                         labelAtributos->setTextFormat(Qt::RichText);\par
2058                         labelAtributos->setText(atributos);\par
2059 \par
2060                         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
2061                         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
2062                         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
2063                         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
2064 \par
2065 \par
2066                         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2067                         painter.setFont(fontHeader);\par
2068                         painter.setPen(QPen(Qt::white));\par
2069                         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2070 \par
2071                         {\cf20 // Desenha a QLabel na imagem}\par
2072                         QPixmap pixmap = labelAtributos->grab();\par
2073                         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
2074 \par
2075                         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
2076                     \}\par
2077                 \}\par
2078             \}\par
2079         \}\par
2080     \}\par
2081 \par
2082     painter.end();\par
2083 \}\par
}
}
{\xe \v ContCompBarrasInterL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:ContCompBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ContCompBarrasInterL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 2084                                                                \{\par
2085     QPainter painter(printer);\par
2086     painter.begin(printer);\par
2087     {\cf18 int} w = painter.device()->width();\par
2088     {\cf18 int} h = painter.device()->height();\par
2089 \par
2090     {\cf20 // Carrega a imagem do arquivo}\par
2091     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
2092 \par
2093     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2094     QRectF logoRect(20, 20, 300, 56);\par
2095 \par
2096     {\cf20 // Desenha a imagem na p\'E1gina}\par
2097     painter.drawImage(logoRect, logo);\par
2098 \par
2099     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
2100     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
2101 \par
2102     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
2103     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
2104 \par
2105     QFontMetrics fmPrincipal(fontePrincipal);\par
2106     QFontMetrics fmSubtexto(fonteSubtexto);\par
2107 \par
2108     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
2109     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
2110 \par
2111     painter.setFont(fontePrincipal);\par
2112     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
2113 \par
2114     painter.setFont(fonteSubtexto);\par
2115     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
2116 \par
2117     printer->newPage();\par
2118 \par
2119     {\cf20 // Desenha a imagem na p\'E1gina}\par
2120     painter.drawImage(logoRect, logo);\par
2121 \par
2122     QString TituloBarras = {\cf22 "Barras"};\par
2123 \par
2124 \par
2125     painter.setFont(fontePrincipal);\par
2126     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
2127 \par
2128     printer->newPage();\par
2129 \par
2130 \par
2131 \par
2132     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2133     QRectF logoMenorRect(20, 20, 100, 19);\par
2134 \par
2135     {\cf20 // Desenha a imagem na p\'E1gina}\par
2136     painter.drawImage(logoMenorRect, logo);\par
2137 \par
2138     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
2139     gradient.setColorAt(0, QColor(180, 235, 249));\par
2140     gradient.setColorAt(1, QColor(30, 56, 91));\par
2141     painter.setBrush(QBrush(gradient));\par
2142     {\cf20 //estilo da fonte do header}\par
2143     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
2144 \par
2145     {\cf20 // Define o estilo da fonte}\par
2146     QFont fontConteudo({\cf22 "Roboto"},12);\par
2147 \par
2148     {\cf18 int} inicioItem = 100;\par
2149 \par
2150 \par
2151     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
2152         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
2153             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
2154                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
2155                     printer->newPage();\par
2156                     inicioItem = 100;\par
2157                     painter.drawImage(logoMenorRect, logo);\par
2158                 \}\par
2159                 QLabel* labelHeader = {\cf17 new} QLabel();\par
2160                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2161                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2162                 labelHeader->setFont(fontHeader);\par
2163                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2164                 labelHeader->setTextFormat(Qt::RichText);\par
2165 \par
2166                 {\cf20 // Cria a QString atributos com a tag <html>}\par
2167                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2168 \par
2169                 {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
2170                     atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
2171                         QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
2172                     atributos = atributos.arg(tensao);\par
2173                 \}\par
2174 \par
2175                 {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
2176                     atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
2177                         QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
2178                     atributos = atributos.arg(tensaoNominal);\par
2179                 \}\par
2180 \par
2181                 {\cf19 if} (FiltrosBarra::thdv) \{\par
2182                     (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
2183                     QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
2184                     atributos = atributos.arg(thdv);\par
2185                 \}\par
2186 \par
2187                 {\cf19 if}(FiltrosBarra::dit)\{\par
2188                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2189                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
2190                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
2191                         atributos = atributos.arg(j);\par
2192                         atributos = atributos.arg(tdi);\par
2193                     \}\par
2194                 \}\par
2195 \par
2196                 {\cf19 if}(FiltrosBarra::ditPercent)\{\par
2197                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2198                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
2199                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
2200                         atributos = atributos.arg(j);\par
2201                         atributos = atributos.arg(tdi);\par
2202                     \}\par
2203                 \}\par
2204 \par
2205                 {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
2206                     atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
2207                     QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
2208                     atributos = atributos.arg(tensaoEficaz);\par
2209                 \}\par
2210 \par
2211                 {\cf20 // Fecha a tag </div> e </html>}\par
2212                 atributos += {\cf22 "</div></html>"};\par
2213 \par
2214                 {\cf20 // Cria a QLabel com os atributos}\par
2215                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
2216                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
2217                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2218                 labelAtributos->setFont(fontConteudo);\par
2219                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2220                 labelAtributos->setTextFormat(Qt::RichText);\par
2221                 labelAtributos->setText(atributos);\par
2222 \par
2223                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
2224                 QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
2225                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2226                 painter.setFont(fontHeader);\par
2227                 painter.setPen(QPen(Qt::white));\par
2228                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2229 \par
2230                 {\cf20 // Desenha a QLabel na imagem}\par
2231                 QPixmap pixmap = labelAtributos->grab();\par
2232                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
2233 \par
2234                 inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
2235             \}\par
2236         \}\par
2237     \}\par
2238 \par
2239     printer->newPage();\par
2240 \par
2241     {\cf20 // Desenha a imagem na p\'E1gina}\par
2242     painter.drawImage(logoRect, logo);\par
2243 \par
2244     QString TituloLinhas = {\cf22 "Linhas"};\par
2245 \par
2246     painter.setPen(QPen());\par
2247     painter.setFont(fontePrincipal);\par
2248     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
2249 \par
2250 \par
2251     printer->newPage();\par
2252 \par
2253     {\cf20 // Desenha a imagem na p\'E1gina}\par
2254     painter.drawImage(logoMenorRect, logo);\par
2255 \par
2256     inicioItem = 100;\par
2257     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
2258         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
2259         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
2260             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
2261                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
2262                     printer->newPage();\par
2263                     inicioItem = 100;\par
2264                     painter.drawImage(logoMenorRect, logo);\par
2265                 \}\par
2266 \par
2267                 QLabel* labelHeader = {\cf17 new} QLabel();\par
2268                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2269                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2270                 labelHeader->setFont(fontHeader);\par
2271                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2272                 labelHeader->setTextFormat(Qt::RichText);\par
2273 \par
2274 \par
2275                 {\cf20 // Cria a QString atributos com a tag <html>}\par
2276                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2277 \par
2278                 {\cf19 if}(FiltroLinha::correntePu)\{\par
2279                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
2280                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
2281                     atributos = atributos.arg(corrente);\par
2282                 \}\par
2283                 {\cf19 if}(FiltroLinha::dht)\{\par
2284                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
2285                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
2286                     atributos = atributos.arg(dht);\par
2287                 \}\par
2288                 {\cf19 if}(FiltroLinha::dit)\{\par
2289                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2290                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
2291                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
2292                         atributos = atributos.arg(j);\par
2293                         atributos = atributos.arg(tdi);\par
2294                     \}\par
2295                 \}\par
2296                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
2297                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2298                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
2299                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
2300                         atributos = atributos.arg(j);\par
2301                         atributos = atributos.arg(tdiPercent);\par
2302                     \}\par
2303                 \}\par
2304                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
2305                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
2306                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
2307                     atributos = atributos.arg(correnteEficaz);\par
2308                 \}\par
2309                 {\cf19 if}(FiltroLinha::resistencia)\{\par
2310                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
2311                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
2312                     atributos = atributos.arg(resistencia);\par
2313                 \}\par
2314                 {\cf19 if}(FiltroLinha::perdas)\{\par
2315                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2316                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
2317                     atributos = atributos.arg(perdas);\par
2318                 \}\par
2319                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
2320                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2321                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
2322                     atributos = atributos.arg(perdasEficaz);\par
2323                 \}\par
2324 \par
2325                 {\cf20 // Fecha a tag </div> e </html>}\par
2326                 atributos += {\cf22 "</div></html>"};\par
2327 \par
2328                 {\cf20 // Cria a QLabel com os atributos}\par
2329                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
2330                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
2331                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2332                 labelAtributos->setFont(fontConteudo);\par
2333                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2334                 labelAtributos->setTextFormat(Qt::RichText);\par
2335                 labelAtributos->setText(atributos);\par
2336 \par
2337                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
2338                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
2339                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
2340                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
2341 \par
2342 \par
2343                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2344                 painter.setFont(fontHeader);\par
2345                 painter.setPen(QPen(Qt::white));\par
2346                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2347 \par
2348                 {\cf20 // Desenha a QLabel na imagem}\par
2349                 QPixmap pixmap = labelAtributos->grab();\par
2350                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
2351 \par
2352                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
2353             \}\par
2354         \}\par
2355     \}\par
2356 \par
2357     painter.end();\par
2358 \}\par
}
}
{\xe \v ContCompBarrasTodL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:ContCompBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ContCompBarrasTodL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 2359                                                                 \{\par
2360     QPainter painter(printer);\par
2361     painter.begin(printer);\par
2362     {\cf18 int} w = painter.device()->width();\par
2363     {\cf18 int} h = painter.device()->height();\par
2364 \par
2365     {\cf20 // Carrega a imagem do arquivo}\par
2366     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
2367 \par
2368     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2369     QRectF logoRect(20, 20, 300, 56);\par
2370 \par
2371     {\cf20 // Desenha a imagem na p\'E1gina}\par
2372     painter.drawImage(logoRect, logo);\par
2373 \par
2374     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
2375     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
2376 \par
2377     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
2378     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
2379 \par
2380     QFontMetrics fmPrincipal(fontePrincipal);\par
2381     QFontMetrics fmSubtexto(fonteSubtexto);\par
2382 \par
2383     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
2384     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
2385 \par
2386     painter.setFont(fontePrincipal);\par
2387     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
2388 \par
2389     painter.setFont(fonteSubtexto);\par
2390     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
2391 \par
2392     printer->newPage();\par
2393 \par
2394     {\cf20 // Desenha a imagem na p\'E1gina}\par
2395     painter.drawImage(logoRect, logo);\par
2396 \par
2397     QString TituloBarras = {\cf22 "Barras"};\par
2398 \par
2399 \par
2400     painter.setFont(fontePrincipal);\par
2401     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
2402 \par
2403     printer->newPage();\par
2404 \par
2405 \par
2406 \par
2407     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2408     QRectF logoMenorRect(20, 20, 100, 19);\par
2409 \par
2410     {\cf20 // Desenha a imagem na p\'E1gina}\par
2411     painter.drawImage(logoMenorRect, logo);\par
2412 \par
2413     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
2414     gradient.setColorAt(0, QColor(180, 235, 249));\par
2415     gradient.setColorAt(1, QColor(30, 56, 91));\par
2416     painter.setBrush(QBrush(gradient));\par
2417     {\cf20 //estilo da fonte do header}\par
2418     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
2419 \par
2420     {\cf20 // Define o estilo da fonte}\par
2421     QFont fontConteudo({\cf22 "Roboto"},12);\par
2422 \par
2423     {\cf18 int} inicioItem = 100;\par
2424 \par
2425 \par
2426     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
2427         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
2428             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
2429                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
2430                     printer->newPage();\par
2431                     inicioItem = 100;\par
2432                     painter.drawImage(logoMenorRect, logo);\par
2433                 \}\par
2434                 QLabel* labelHeader = {\cf17 new} QLabel();\par
2435                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2436                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2437                 labelHeader->setFont(fontHeader);\par
2438                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2439                 labelHeader->setTextFormat(Qt::RichText);\par
2440 \par
2441                 {\cf20 // Cria a QString atributos com a tag <html>}\par
2442                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2443 \par
2444                 {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
2445                     atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
2446                         QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
2447                     atributos = atributos.arg(tensao);\par
2448                 \}\par
2449 \par
2450                 {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
2451                     atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
2452                         QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
2453                     atributos = atributos.arg(tensaoNominal);\par
2454                 \}\par
2455 \par
2456                 {\cf19 if} (FiltrosBarra::thdv) \{\par
2457                     (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
2458                     QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
2459                     atributos = atributos.arg(thdv);\par
2460                 \}\par
2461 \par
2462                 {\cf19 if}(FiltrosBarra::dit)\{\par
2463                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2464                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
2465                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
2466                         atributos = atributos.arg(j);\par
2467                         atributos = atributos.arg(tdi);\par
2468                     \}\par
2469                 \}\par
2470 \par
2471                 {\cf19 if}(FiltrosBarra::ditPercent)\{\par
2472                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2473                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
2474                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
2475                         atributos = atributos.arg(j);\par
2476                         atributos = atributos.arg(tdi);\par
2477                     \}\par
2478                 \}\par
2479 \par
2480                 {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
2481                     atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
2482                     QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
2483                     atributos = atributos.arg(tensaoEficaz);\par
2484                 \}\par
2485 \par
2486                 {\cf20 // Fecha a tag </div> e </html>}\par
2487                 atributos += {\cf22 "</div></html>"};\par
2488 \par
2489                 {\cf20 // Cria a QLabel com os atributos}\par
2490                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
2491                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
2492                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2493                 labelAtributos->setFont(fontConteudo);\par
2494                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2495                 labelAtributos->setTextFormat(Qt::RichText);\par
2496                 labelAtributos->setText(atributos);\par
2497 \par
2498                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
2499                 QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
2500                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2501                 painter.setFont(fontHeader);\par
2502                 painter.setPen(QPen(Qt::white));\par
2503                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2504 \par
2505                 {\cf20 // Desenha a QLabel na imagem}\par
2506                 QPixmap pixmap = labelAtributos->grab();\par
2507                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
2508 \par
2509                 inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
2510             \}\par
2511         \}\par
2512     \}\par
2513 \par
2514     printer->newPage();\par
2515 \par
2516     {\cf20 // Desenha a imagem na p\'E1gina}\par
2517     painter.drawImage(logoRect, logo);\par
2518 \par
2519     QString TituloLinhas = {\cf22 "Linhas"};\par
2520 \par
2521     painter.setPen(QPen());\par
2522     painter.setFont(fontePrincipal);\par
2523     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
2524 \par
2525 \par
2526     printer->newPage();\par
2527 \par
2528     {\cf20 // Desenha a imagem na p\'E1gina}\par
2529     painter.drawImage(logoMenorRect, logo);\par
2530 \par
2531     inicioItem = 100;\par
2532 \par
2533     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
2534         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
2535         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
2536             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
2537                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
2538                     printer->newPage();\par
2539                     inicioItem = 100;\par
2540                     painter.drawImage(logoMenorRect, logo);\par
2541 \par
2542                 \}\par
2543 \par
2544                 QLabel* labelHeader = {\cf17 new} QLabel();\par
2545                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2546                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2547                 labelHeader->setFont(fontHeader);\par
2548                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2549                 labelHeader->setTextFormat(Qt::RichText);\par
2550 \par
2551 \par
2552                 {\cf20 // Cria a QString atributos com a tag <html>}\par
2553                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2554 \par
2555                 {\cf19 if}(FiltroLinha::correntePu)\{\par
2556                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
2557                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
2558                     atributos = atributos.arg(corrente);\par
2559                 \}\par
2560                 {\cf19 if}(FiltroLinha::dht)\{\par
2561                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
2562                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
2563                     atributos = atributos.arg(dht);\par
2564                 \}\par
2565                 {\cf19 if}(FiltroLinha::dit)\{\par
2566                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2567                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
2568                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
2569                         atributos = atributos.arg(j);\par
2570                         atributos = atributos.arg(tdi);\par
2571                     \}\par
2572                 \}\par
2573                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
2574                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2575                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
2576                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
2577                         atributos = atributos.arg(j);\par
2578                         atributos = atributos.arg(tdiPercent);\par
2579                     \}\par
2580                 \}\par
2581                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
2582                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
2583                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
2584                     atributos = atributos.arg(correnteEficaz);\par
2585                 \}\par
2586                 {\cf19 if}(FiltroLinha::resistencia)\{\par
2587                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
2588                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
2589                     atributos = atributos.arg(resistencia);\par
2590                 \}\par
2591                 {\cf19 if}(FiltroLinha::perdas)\{\par
2592                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2593                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
2594                     atributos = atributos.arg(perdas);\par
2595                 \}\par
2596                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
2597                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2598                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
2599                     atributos = atributos.arg(perdasEficaz);\par
2600                 \}\par
2601 \par
2602                 {\cf20 // Fecha a tag </div> e </html>}\par
2603                 atributos += {\cf22 "</div></html>"};\par
2604 \par
2605                 {\cf20 // Cria a QLabel com os atributos}\par
2606                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
2607                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
2608                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2609                 labelAtributos->setFont(fontConteudo);\par
2610                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2611                 labelAtributos->setTextFormat(Qt::RichText);\par
2612                 labelAtributos->setText(atributos);\par
2613 \par
2614                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
2615                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
2616                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
2617                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
2618 \par
2619 \par
2620                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2621                 painter.setFont(fontHeader);\par
2622                 painter.setPen(QPen(Qt::white));\par
2623                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2624 \par
2625                 {\cf20 // Desenha a QLabel na imagem}\par
2626                 QPixmap pixmap = labelAtributos->grab();\par
2627                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
2628 \par
2629                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
2630             \}\par
2631         \}\par
2632     \}\par
2633 \par
2634     painter.end();\par
2635 \}\par
}
}
{\xe \v ContInfecBarrasInterL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:ContInfecBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ContInfecBarrasInterL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 2911                                                                   \{\par
2912     QPainter painter(printer);\par
2913     painter.begin(printer);\par
2914     {\cf18 int} w = painter.device()->width();\par
2915     {\cf18 int} h = painter.device()->height();\par
2916 \par
2917     {\cf20 // Carrega a imagem do arquivo}\par
2918     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
2919 \par
2920     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2921     QRectF logoRect(20, 20, 300, 56);\par
2922 \par
2923     {\cf20 // Desenha a imagem na p\'E1gina}\par
2924     painter.drawImage(logoRect, logo);\par
2925 \par
2926     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
2927     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
2928 \par
2929     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
2930     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
2931 \par
2932     QFontMetrics fmPrincipal(fontePrincipal);\par
2933     QFontMetrics fmSubtexto(fonteSubtexto);\par
2934 \par
2935     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
2936     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
2937 \par
2938     painter.setFont(fontePrincipal);\par
2939     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
2940 \par
2941     painter.setFont(fonteSubtexto);\par
2942     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
2943 \par
2944     printer->newPage();\par
2945 \par
2946     {\cf20 // Desenha a imagem na p\'E1gina}\par
2947     painter.drawImage(logoRect, logo);\par
2948 \par
2949     QString TituloBarras = {\cf22 "Barras"};\par
2950 \par
2951 \par
2952     painter.setFont(fontePrincipal);\par
2953     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
2954 \par
2955     printer->newPage();\par
2956 \par
2957 \par
2958 \par
2959     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2960     QRectF logoMenorRect(20, 20, 100, 19);\par
2961 \par
2962     {\cf20 // Desenha a imagem na p\'E1gina}\par
2963     painter.drawImage(logoMenorRect, logo);\par
2964 \par
2965     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
2966     gradient.setColorAt(0, QColor(180, 235, 249));\par
2967     gradient.setColorAt(1, QColor(30, 56, 91));\par
2968     painter.setBrush(QBrush(gradient));\par
2969     {\cf20 //estilo da fonte do header}\par
2970     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
2971 \par
2972     {\cf20 // Define o estilo da fonte}\par
2973     QFont fontConteudo({\cf22 "Roboto"},12);\par
2974 \par
2975     {\cf18 int} inicioItem = 100;\par
2976 \par
2977 \par
2978     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
2979         {\cf18 bool} infectada = {\cf17 false};\par
2980         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
2981             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
2982                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
2983                     infectada = {\cf17 true};\par
2984                     {\cf19 break};\par
2985                 \}\par
2986             \}\par
2987         \}{\cf19 else}\{\par
2988             infectada = {\cf17 true};\par
2989         \}\par
2990         {\cf19 if}(infectada)\{\par
2991                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
2992                     printer->newPage();\par
2993                     inicioItem = 100;\par
2994                     painter.drawImage(logoMenorRect, logo);\par
2995                 \}\par
2996                 QLabel* labelHeader = {\cf17 new} QLabel();\par
2997                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2998                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2999                 labelHeader->setFont(fontHeader);\par
3000                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3001                 labelHeader->setTextFormat(Qt::RichText);\par
3002 \par
3003                 {\cf20 // Cria a QString atributos com a tag <html>}\par
3004                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3005 \par
3006                 {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
3007                     atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
3008                         QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
3009                     atributos = atributos.arg(tensao);\par
3010                 \}\par
3011 \par
3012                 {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
3013                     atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
3014                         QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
3015                     atributos = atributos.arg(tensaoNominal);\par
3016                 \}\par
3017 \par
3018                 {\cf19 if} (FiltrosBarra::thdv) \{\par
3019                     (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
3020                     QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
3021                     atributos = atributos.arg(thdv);\par
3022                 \}\par
3023 \par
3024                 {\cf19 if}(FiltrosBarra::dit)\{\par
3025                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3026                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
3027                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
3028                         atributos = atributos.arg(j);\par
3029                         atributos = atributos.arg(tdi);\par
3030                     \}\par
3031                 \}\par
3032 \par
3033                 {\cf19 if}(FiltrosBarra::ditPercent)\{\par
3034                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3035                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
3036                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
3037                         atributos = atributos.arg(j);\par
3038                         atributos = atributos.arg(tdi);\par
3039                     \}\par
3040                 \}\par
3041 \par
3042                 {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
3043                     atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
3044                     QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
3045                     atributos = atributos.arg(tensaoEficaz);\par
3046                 \}\par
3047 \par
3048                 {\cf20 // Fecha a tag </div> e </html>}\par
3049                 atributos += {\cf22 "</div></html>"};\par
3050 \par
3051                 {\cf20 // Cria a QLabel com os atributos}\par
3052                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
3053                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
3054                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3055                 labelAtributos->setFont(fontConteudo);\par
3056                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3057                 labelAtributos->setTextFormat(Qt::RichText);\par
3058                 labelAtributos->setText(atributos);\par
3059 \par
3060                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
3061                 QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
3062                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3063                 painter.setFont(fontHeader);\par
3064                 painter.setPen(QPen(Qt::white));\par
3065                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3066 \par
3067                 {\cf20 // Desenha a QLabel na imagem}\par
3068                 QPixmap pixmap = labelAtributos->grab();\par
3069                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
3070 \par
3071                 inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
3072             \}\par
3073     \}\par
3074 \par
3075     printer->newPage();\par
3076 \par
3077     {\cf20 // Desenha a imagem na p\'E1gina}\par
3078     painter.drawImage(logoRect, logo);\par
3079 \par
3080     QString TituloLinhas = {\cf22 "Linhas"};\par
3081 \par
3082     painter.setPen(QPen());\par
3083     painter.setFont(fontePrincipal);\par
3084     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
3085 \par
3086 \par
3087     printer->newPage();\par
3088 \par
3089     {\cf20 // Desenha a imagem na p\'E1gina}\par
3090     painter.drawImage(logoMenorRect, logo);\par
3091 \par
3092     inicioItem = 100;\par
3093 \par
3094     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
3095         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
3096         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
3097         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
3098             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
3099                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
3100                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
3101                         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
3102                         printer->newPage();\par
3103                         inicioItem = 100;\par
3104                         painter.drawImage(logoMenorRect, logo);\par
3105                         \}\par
3106 \par
3107                         QLabel* labelHeader = {\cf17 new} QLabel();\par
3108                         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3109                         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3110                         labelHeader->setFont(fontHeader);\par
3111                         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3112                         labelHeader->setTextFormat(Qt::RichText);\par
3113 \par
3114 \par
3115                         {\cf20 // Cria a QString atributos com a tag <html>}\par
3116                         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3117 \par
3118                         {\cf19 if}(FiltroLinha::correntePu)\{\par
3119                         atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
3120                         QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
3121                         atributos = atributos.arg(corrente);\par
3122                         \}\par
3123                         {\cf19 if}(FiltroLinha::dht)\{\par
3124                         atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
3125                         QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
3126                         atributos = atributos.arg(dht);\par
3127                         \}\par
3128                         {\cf19 if}(FiltroLinha::dit)\{\par
3129                         {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3130                                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
3131                                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
3132                                 atributos = atributos.arg(j);\par
3133                                 atributos = atributos.arg(tdi);\par
3134                         \}\par
3135                         \}\par
3136                         {\cf19 if}(FiltroLinha::ditPercent)\{\par
3137                         {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3138                                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
3139                                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
3140                                 atributos = atributos.arg(j);\par
3141                                 atributos = atributos.arg(tdiPercent);\par
3142                         \}\par
3143                         \}\par
3144                         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
3145                         atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
3146                         QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
3147                         atributos = atributos.arg(correnteEficaz);\par
3148                         \}\par
3149                         {\cf19 if}(FiltroLinha::resistencia)\{\par
3150                         atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
3151                         QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
3152                         atributos = atributos.arg(resistencia);\par
3153                         \}\par
3154                         {\cf19 if}(FiltroLinha::perdas)\{\par
3155                         atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3156                         QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
3157                         atributos = atributos.arg(perdas);\par
3158                         \}\par
3159                         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
3160                         atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3161                         QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
3162                         atributos = atributos.arg(perdasEficaz);\par
3163                         \}\par
3164 \par
3165                         {\cf20 // Fecha a tag </div> e </html>}\par
3166                         atributos += {\cf22 "</div></html>"};\par
3167 \par
3168                         {\cf20 // Cria a QLabel com os atributos}\par
3169                         QLabel* labelAtributos = {\cf17 new} QLabel();\par
3170                         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
3171                         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3172                         labelAtributos->setFont(fontConteudo);\par
3173                         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3174                         labelAtributos->setTextFormat(Qt::RichText);\par
3175                         labelAtributos->setText(atributos);\par
3176 \par
3177                         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
3178                         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
3179                         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
3180                         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
3181 \par
3182 \par
3183                         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3184                         painter.setFont(fontHeader);\par
3185                         painter.setPen(QPen(Qt::white));\par
3186                         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3187 \par
3188                         {\cf20 // Desenha a QLabel na imagem}\par
3189                         QPixmap pixmap = labelAtributos->grab();\par
3190                         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
3191 \par
3192                         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
3193                     \}\par
3194                 \}\par
3195             \}\par
3196         \}\par
3197     \}\par
3198 \par
3199     painter.end();\par
3200 \}\par
}
}
{\xe \v ContInfecBarrasInterL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:ContInfecBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ContInfecBarrasInterL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3201                                                                 \{\par
3202     QPainter painter(printer);\par
3203     painter.begin(printer);\par
3204     {\cf18 int} w = painter.device()->width();\par
3205     {\cf18 int} h = painter.device()->height();\par
3206 \par
3207     {\cf20 // Carrega a imagem do arquivo}\par
3208     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
3209 \par
3210     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
3211     QRectF logoRect(20, 20, 300, 56);\par
3212 \par
3213     {\cf20 // Desenha a imagem na p\'E1gina}\par
3214     painter.drawImage(logoRect, logo);\par
3215 \par
3216     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
3217     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
3218 \par
3219     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
3220     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
3221 \par
3222     QFontMetrics fmPrincipal(fontePrincipal);\par
3223     QFontMetrics fmSubtexto(fonteSubtexto);\par
3224 \par
3225     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
3226     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
3227 \par
3228     painter.setFont(fontePrincipal);\par
3229     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
3230 \par
3231     painter.setFont(fonteSubtexto);\par
3232     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
3233 \par
3234     printer->newPage();\par
3235 \par
3236     {\cf20 // Desenha a imagem na p\'E1gina}\par
3237     painter.drawImage(logoRect, logo);\par
3238 \par
3239     QString TituloBarras = {\cf22 "Barras"};\par
3240 \par
3241 \par
3242     painter.setFont(fontePrincipal);\par
3243     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
3244 \par
3245     printer->newPage();\par
3246 \par
3247 \par
3248 \par
3249     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
3250     QRectF logoMenorRect(20, 20, 100, 19);\par
3251 \par
3252     {\cf20 // Desenha a imagem na p\'E1gina}\par
3253     painter.drawImage(logoMenorRect, logo);\par
3254 \par
3255     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
3256     gradient.setColorAt(0, QColor(180, 235, 249));\par
3257     gradient.setColorAt(1, QColor(30, 56, 91));\par
3258     painter.setBrush(QBrush(gradient));\par
3259     {\cf20 //estilo da fonte do header}\par
3260     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
3261 \par
3262     {\cf20 // Define o estilo da fonte}\par
3263     QFont fontConteudo({\cf22 "Roboto"},12);\par
3264 \par
3265     {\cf18 int} inicioItem = 100;\par
3266 \par
3267 \par
3268     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
3269         {\cf18 bool} infectada = {\cf17 false};\par
3270         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
3271             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
3272                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
3273                     infectada = {\cf17 true};\par
3274                     {\cf19 break};\par
3275                 \}\par
3276             \}\par
3277         \}{\cf19 else}\{\par
3278             infectada = {\cf17 true};\par
3279         \}\par
3280         {\cf19 if}(infectada)\{\par
3281             {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
3282                 printer->newPage();\par
3283                 inicioItem = 100;\par
3284                 painter.drawImage(logoMenorRect, logo);\par
3285             \}\par
3286             QLabel* labelHeader = {\cf17 new} QLabel();\par
3287             labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3288             labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3289             labelHeader->setFont(fontHeader);\par
3290             labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3291             labelHeader->setTextFormat(Qt::RichText);\par
3292 \par
3293             {\cf20 // Cria a QString atributos com a tag <html>}\par
3294             QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3295 \par
3296             {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
3297                 atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
3298                     QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
3299                 atributos = atributos.arg(tensao);\par
3300             \}\par
3301 \par
3302             {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
3303                 atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
3304                     QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
3305                 atributos = atributos.arg(tensaoNominal);\par
3306             \}\par
3307 \par
3308             {\cf19 if} (FiltrosBarra::thdv) \{\par
3309                 (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
3310                 QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
3311                 atributos = atributos.arg(thdv);\par
3312             \}\par
3313 \par
3314             {\cf19 if}(FiltrosBarra::dit)\{\par
3315                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3316                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
3317                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
3318                     atributos = atributos.arg(j);\par
3319                     atributos = atributos.arg(tdi);\par
3320                 \}\par
3321             \}\par
3322 \par
3323             {\cf19 if}(FiltrosBarra::ditPercent)\{\par
3324                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3325                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
3326                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
3327                     atributos = atributos.arg(j);\par
3328                     atributos = atributos.arg(tdi);\par
3329                 \}\par
3330             \}\par
3331 \par
3332             {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
3333                 atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
3334                 QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
3335                 atributos = atributos.arg(tensaoEficaz);\par
3336             \}\par
3337 \par
3338             {\cf20 // Fecha a tag </div> e </html>}\par
3339             atributos += {\cf22 "</div></html>"};\par
3340 \par
3341             {\cf20 // Cria a QLabel com os atributos}\par
3342             QLabel* labelAtributos = {\cf17 new} QLabel();\par
3343             labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
3344             labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3345             labelAtributos->setFont(fontConteudo);\par
3346             labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3347             labelAtributos->setTextFormat(Qt::RichText);\par
3348             labelAtributos->setText(atributos);\par
3349 \par
3350             {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
3351             QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
3352             painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3353             painter.setFont(fontHeader);\par
3354             painter.setPen(QPen(Qt::white));\par
3355             painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3356 \par
3357             {\cf20 // Desenha a QLabel na imagem}\par
3358             QPixmap pixmap = labelAtributos->grab();\par
3359             painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
3360 \par
3361             inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
3362         \}\par
3363     \}\par
3364 \par
3365     printer->newPage();\par
3366 \par
3367     {\cf20 // Desenha a imagem na p\'E1gina}\par
3368     painter.drawImage(logoRect, logo);\par
3369 \par
3370     QString TituloLinhas = {\cf22 "Linhas"};\par
3371 \par
3372     painter.setPen(QPen());\par
3373     painter.setFont(fontePrincipal);\par
3374     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
3375 \par
3376 \par
3377     printer->newPage();\par
3378 \par
3379     {\cf20 // Desenha a imagem na p\'E1gina}\par
3380     painter.drawImage(logoMenorRect, logo);\par
3381 \par
3382     inicioItem = 100;\par
3383     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
3384         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
3385         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
3386             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
3387                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
3388                     printer->newPage();\par
3389                     inicioItem = 100;\par
3390                     painter.drawImage(logoMenorRect, logo);\par
3391                 \}\par
3392 \par
3393                 QLabel* labelHeader = {\cf17 new} QLabel();\par
3394                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3395                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3396                 labelHeader->setFont(fontHeader);\par
3397                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3398                 labelHeader->setTextFormat(Qt::RichText);\par
3399 \par
3400 \par
3401                 {\cf20 // Cria a QString atributos com a tag <html>}\par
3402                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3403 \par
3404                 {\cf19 if}(FiltroLinha::correntePu)\{\par
3405                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
3406                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
3407                     atributos = atributos.arg(corrente);\par
3408                 \}\par
3409                 {\cf19 if}(FiltroLinha::dht)\{\par
3410                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
3411                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
3412                     atributos = atributos.arg(dht);\par
3413                 \}\par
3414                 {\cf19 if}(FiltroLinha::dit)\{\par
3415                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3416                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
3417                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
3418                         atributos = atributos.arg(j);\par
3419                         atributos = atributos.arg(tdi);\par
3420                     \}\par
3421                 \}\par
3422                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
3423                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3424                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
3425                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
3426                         atributos = atributos.arg(j);\par
3427                         atributos = atributos.arg(tdiPercent);\par
3428                     \}\par
3429                 \}\par
3430                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
3431                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
3432                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
3433                     atributos = atributos.arg(correnteEficaz);\par
3434                 \}\par
3435                 {\cf19 if}(FiltroLinha::resistencia)\{\par
3436                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
3437                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
3438                     atributos = atributos.arg(resistencia);\par
3439                 \}\par
3440                 {\cf19 if}(FiltroLinha::perdas)\{\par
3441                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3442                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
3443                     atributos = atributos.arg(perdas);\par
3444                 \}\par
3445                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
3446                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3447                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
3448                     atributos = atributos.arg(perdasEficaz);\par
3449                 \}\par
3450 \par
3451                 {\cf20 // Fecha a tag </div> e </html>}\par
3452                 atributos += {\cf22 "</div></html>"};\par
3453 \par
3454                 {\cf20 // Cria a QLabel com os atributos}\par
3455                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
3456                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
3457                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3458                 labelAtributos->setFont(fontConteudo);\par
3459                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3460                 labelAtributos->setTextFormat(Qt::RichText);\par
3461                 labelAtributos->setText(atributos);\par
3462 \par
3463                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
3464                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
3465                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
3466                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
3467 \par
3468 \par
3469                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3470                 painter.setFont(fontHeader);\par
3471                 painter.setPen(QPen(Qt::white));\par
3472                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3473 \par
3474                 {\cf20 // Desenha a QLabel na imagem}\par
3475                 QPixmap pixmap = labelAtributos->grab();\par
3476                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
3477 \par
3478                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
3479             \}\par
3480         \}\par
3481     \}\par
3482 \par
3483     painter.end();\par
3484 \}\par
}
}
{\xe \v ContInfecBarrasTodL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:ContInfecBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ContInfecBarrasTodL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3485                                                                  \{\par
3486     QPainter painter(printer);\par
3487     painter.begin(printer);\par
3488     {\cf18 int} w = painter.device()->width();\par
3489     {\cf18 int} h = painter.device()->height();\par
3490 \par
3491     {\cf20 // Carrega a imagem do arquivo}\par
3492     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
3493 \par
3494     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
3495     QRectF logoRect(20, 20, 300, 56);\par
3496 \par
3497     {\cf20 // Desenha a imagem na p\'E1gina}\par
3498     painter.drawImage(logoRect, logo);\par
3499 \par
3500     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
3501     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
3502 \par
3503     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
3504     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
3505 \par
3506     QFontMetrics fmPrincipal(fontePrincipal);\par
3507     QFontMetrics fmSubtexto(fonteSubtexto);\par
3508 \par
3509     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
3510     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
3511 \par
3512     painter.setFont(fontePrincipal);\par
3513     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
3514 \par
3515     painter.setFont(fonteSubtexto);\par
3516     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
3517 \par
3518     printer->newPage();\par
3519 \par
3520     {\cf20 // Desenha a imagem na p\'E1gina}\par
3521     painter.drawImage(logoRect, logo);\par
3522 \par
3523     QString TituloBarras = {\cf22 "Barras"};\par
3524 \par
3525 \par
3526     painter.setFont(fontePrincipal);\par
3527     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
3528 \par
3529     printer->newPage();\par
3530 \par
3531 \par
3532 \par
3533     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
3534     QRectF logoMenorRect(20, 20, 100, 19);\par
3535 \par
3536     {\cf20 // Desenha a imagem na p\'E1gina}\par
3537     painter.drawImage(logoMenorRect, logo);\par
3538 \par
3539     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
3540     gradient.setColorAt(0, QColor(180, 235, 249));\par
3541     gradient.setColorAt(1, QColor(30, 56, 91));\par
3542     painter.setBrush(QBrush(gradient));\par
3543     {\cf20 //estilo da fonte do header}\par
3544     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
3545 \par
3546     {\cf20 // Define o estilo da fonte}\par
3547     QFont fontConteudo({\cf22 "Roboto"},12);\par
3548 \par
3549     {\cf18 int} inicioItem = 100;\par
3550 \par
3551 \par
3552     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
3553         {\cf18 bool} infectada = {\cf17 false};\par
3554         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
3555             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
3556                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
3557                     infectada = {\cf17 true};\par
3558                     {\cf19 break};\par
3559                 \}\par
3560             \}\par
3561         \}{\cf19 else}\{\par
3562             infectada = {\cf17 true};\par
3563         \}\par
3564         {\cf19 if}(infectada)\{\par
3565             {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
3566                 printer->newPage();\par
3567                 inicioItem = 100;\par
3568                 painter.drawImage(logoMenorRect, logo);\par
3569             \}\par
3570             QLabel* labelHeader = {\cf17 new} QLabel();\par
3571             labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3572             labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3573             labelHeader->setFont(fontHeader);\par
3574             labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3575             labelHeader->setTextFormat(Qt::RichText);\par
3576 \par
3577             {\cf20 // Cria a QString atributos com a tag <html>}\par
3578             QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3579 \par
3580             {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
3581                 atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
3582                     QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
3583                 atributos = atributos.arg(tensao);\par
3584             \}\par
3585 \par
3586             {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
3587                 atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
3588                     QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
3589                 atributos = atributos.arg(tensaoNominal);\par
3590             \}\par
3591 \par
3592             {\cf19 if} (FiltrosBarra::thdv) \{\par
3593                 (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
3594                 QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
3595                 atributos = atributos.arg(thdv);\par
3596             \}\par
3597 \par
3598             {\cf19 if}(FiltrosBarra::dit)\{\par
3599                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3600                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
3601                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
3602                     atributos = atributos.arg(j);\par
3603                     atributos = atributos.arg(tdi);\par
3604                 \}\par
3605             \}\par
3606 \par
3607             {\cf19 if}(FiltrosBarra::ditPercent)\{\par
3608                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3609                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
3610                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
3611                     atributos = atributos.arg(j);\par
3612                     atributos = atributos.arg(tdi);\par
3613                 \}\par
3614             \}\par
3615 \par
3616             {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
3617                 atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
3618                 QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
3619                 atributos = atributos.arg(tensaoEficaz);\par
3620             \}\par
3621 \par
3622             {\cf20 // Fecha a tag </div> e </html>}\par
3623             atributos += {\cf22 "</div></html>"};\par
3624 \par
3625             {\cf20 // Cria a QLabel com os atributos}\par
3626             QLabel* labelAtributos = {\cf17 new} QLabel();\par
3627             labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
3628             labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3629             labelAtributos->setFont(fontConteudo);\par
3630             labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3631             labelAtributos->setTextFormat(Qt::RichText);\par
3632             labelAtributos->setText(atributos);\par
3633 \par
3634             {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
3635             QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
3636             painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3637             painter.setFont(fontHeader);\par
3638             painter.setPen(QPen(Qt::white));\par
3639             painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3640 \par
3641             {\cf20 // Desenha a QLabel na imagem}\par
3642             QPixmap pixmap = labelAtributos->grab();\par
3643             painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
3644 \par
3645             inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
3646         \}\par
3647     \}\par
3648 \par
3649     printer->newPage();\par
3650 \par
3651     {\cf20 // Desenha a imagem na p\'E1gina}\par
3652     painter.drawImage(logoRect, logo);\par
3653 \par
3654     QString TituloLinhas = {\cf22 "Linhas"};\par
3655 \par
3656     painter.setPen(QPen());\par
3657     painter.setFont(fontePrincipal);\par
3658     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
3659 \par
3660 \par
3661     printer->newPage();\par
3662 \par
3663     {\cf20 // Desenha a imagem na p\'E1gina}\par
3664     painter.drawImage(logoMenorRect, logo);\par
3665 \par
3666     inicioItem = 100;\par
3667 \par
3668     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
3669         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
3670         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
3671             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
3672                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
3673                     printer->newPage();\par
3674                     inicioItem = 100;\par
3675                     painter.drawImage(logoMenorRect, logo);\par
3676 \par
3677                 \}\par
3678 \par
3679                 QLabel* labelHeader = {\cf17 new} QLabel();\par
3680                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3681                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3682                 labelHeader->setFont(fontHeader);\par
3683                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3684                 labelHeader->setTextFormat(Qt::RichText);\par
3685 \par
3686 \par
3687                 {\cf20 // Cria a QString atributos com a tag <html>}\par
3688                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3689 \par
3690                 {\cf19 if}(FiltroLinha::correntePu)\{\par
3691                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
3692                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
3693                     atributos = atributos.arg(corrente);\par
3694                 \}\par
3695                 {\cf19 if}(FiltroLinha::dht)\{\par
3696                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
3697                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
3698                     atributos = atributos.arg(dht);\par
3699                 \}\par
3700                 {\cf19 if}(FiltroLinha::dit)\{\par
3701                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3702                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
3703                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
3704                         atributos = atributos.arg(j);\par
3705                         atributos = atributos.arg(tdi);\par
3706                     \}\par
3707                 \}\par
3708                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
3709                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3710                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
3711                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
3712                         atributos = atributos.arg(j);\par
3713                         atributos = atributos.arg(tdiPercent);\par
3714                     \}\par
3715                 \}\par
3716                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
3717                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
3718                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
3719                     atributos = atributos.arg(correnteEficaz);\par
3720                 \}\par
3721                 {\cf19 if}(FiltroLinha::resistencia)\{\par
3722                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
3723                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
3724                     atributos = atributos.arg(resistencia);\par
3725                 \}\par
3726                 {\cf19 if}(FiltroLinha::perdas)\{\par
3727                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3728                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
3729                     atributos = atributos.arg(perdas);\par
3730                 \}\par
3731                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
3732                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3733                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
3734                     atributos = atributos.arg(perdasEficaz);\par
3735                 \}\par
3736 \par
3737                 {\cf20 // Fecha a tag </div> e </html>}\par
3738                 atributos += {\cf22 "</div></html>"};\par
3739 \par
3740                 {\cf20 // Cria a QLabel com os atributos}\par
3741                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
3742                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
3743                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3744                 labelAtributos->setFont(fontConteudo);\par
3745                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3746                 labelAtributos->setTextFormat(Qt::RichText);\par
3747                 labelAtributos->setText(atributos);\par
3748 \par
3749                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
3750                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
3751                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
3752                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
3753 \par
3754 \par
3755                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3756                 painter.setFont(fontHeader);\par
3757                 painter.setPen(QPen(Qt::white));\par
3758                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3759 \par
3760                 {\cf20 // Desenha a QLabel na imagem}\par
3761                 QPixmap pixmap = labelAtributos->grab();\par
3762                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
3763 \par
3764                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
3765             \}\par
3766         \}\par
3767     \}\par
3768 \par
3769     painter.end();\par
3770 \}\par
}
}
{\xe \v ContInfecBarrasTodL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:ContInfecBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ContInfecBarrasTodL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3771                                                               \{\par
3772     QPainter painter(printer);\par
3773     painter.begin(printer);\par
3774     {\cf18 int} w = painter.device()->width();\par
3775     {\cf18 int} h = painter.device()->height();\par
3776 \par
3777     {\cf20 // Carrega a imagem do arquivo}\par
3778     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
3779 \par
3780     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
3781     QRectF logoRect(20, 20, 300, 56);\par
3782 \par
3783     {\cf20 // Desenha a imagem na p\'E1gina}\par
3784     painter.drawImage(logoRect, logo);\par
3785 \par
3786     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
3787     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
3788 \par
3789     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
3790     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
3791 \par
3792     QFontMetrics fmPrincipal(fontePrincipal);\par
3793     QFontMetrics fmSubtexto(fonteSubtexto);\par
3794 \par
3795     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
3796     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
3797 \par
3798     painter.setFont(fontePrincipal);\par
3799     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
3800 \par
3801     painter.setFont(fonteSubtexto);\par
3802     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
3803 \par
3804     printer->newPage();\par
3805 \par
3806     {\cf20 // Desenha a imagem na p\'E1gina}\par
3807     painter.drawImage(logoRect, logo);\par
3808 \par
3809     QString TituloBarras = {\cf22 "Barras"};\par
3810 \par
3811 \par
3812     painter.setFont(fontePrincipal);\par
3813     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
3814 \par
3815     printer->newPage();\par
3816 \par
3817 \par
3818 \par
3819     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
3820     QRectF logoMenorRect(20, 20, 100, 19);\par
3821 \par
3822     {\cf20 // Desenha a imagem na p\'E1gina}\par
3823     painter.drawImage(logoMenorRect, logo);\par
3824 \par
3825     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
3826     gradient.setColorAt(0, QColor(180, 235, 249));\par
3827     gradient.setColorAt(1, QColor(30, 56, 91));\par
3828     painter.setBrush(QBrush(gradient));\par
3829     {\cf20 //estilo da fonte do header}\par
3830     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
3831 \par
3832     {\cf20 // Define o estilo da fonte}\par
3833     QFont fontConteudo({\cf22 "Roboto"},12);\par
3834 \par
3835     {\cf18 int} inicioItem = 100;\par
3836 \par
3837 \par
3838     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
3839         {\cf18 bool} infectada = {\cf17 false};\par
3840         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
3841             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
3842                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
3843                     infectada = {\cf17 true};\par
3844                     {\cf19 break};\par
3845                 \}\par
3846             \}\par
3847         \}{\cf19 else}\{\par
3848             infectada = {\cf17 true};\par
3849         \}\par
3850         {\cf19 if}(infectada)\{\par
3851             {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
3852                 printer->newPage();\par
3853                 inicioItem = 100;\par
3854                 painter.drawImage(logoMenorRect, logo);\par
3855             \}\par
3856             QLabel* labelHeader = {\cf17 new} QLabel();\par
3857             labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3858             labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3859             labelHeader->setFont(fontHeader);\par
3860             labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3861             labelHeader->setTextFormat(Qt::RichText);\par
3862 \par
3863             {\cf20 // Cria a QString atributos com a tag <html>}\par
3864             QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3865 \par
3866             {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
3867                 atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
3868                     QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
3869                 atributos = atributos.arg(tensao);\par
3870             \}\par
3871 \par
3872             {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
3873                 atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
3874                     QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
3875                 atributos = atributos.arg(tensaoNominal);\par
3876             \}\par
3877 \par
3878             {\cf19 if} (FiltrosBarra::thdv) \{\par
3879                 (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
3880                 QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
3881                 atributos = atributos.arg(thdv);\par
3882             \}\par
3883 \par
3884             {\cf19 if}(FiltrosBarra::dit)\{\par
3885                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3886                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
3887                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
3888                     atributos = atributos.arg(j);\par
3889                     atributos = atributos.arg(tdi);\par
3890                 \}\par
3891             \}\par
3892 \par
3893             {\cf19 if}(FiltrosBarra::ditPercent)\{\par
3894                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3895                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
3896                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
3897                     atributos = atributos.arg(j);\par
3898                     atributos = atributos.arg(tdi);\par
3899                 \}\par
3900             \}\par
3901 \par
3902             {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
3903                 atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
3904                 QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
3905                 atributos = atributos.arg(tensaoEficaz);\par
3906             \}\par
3907 \par
3908             {\cf20 // Fecha a tag </div> e </html>}\par
3909             atributos += {\cf22 "</div></html>"};\par
3910 \par
3911             {\cf20 // Cria a QLabel com os atributos}\par
3912             QLabel* labelAtributos = {\cf17 new} QLabel();\par
3913             labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
3914             labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3915             labelAtributos->setFont(fontConteudo);\par
3916             labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3917             labelAtributos->setTextFormat(Qt::RichText);\par
3918             labelAtributos->setText(atributos);\par
3919 \par
3920             {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
3921             QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
3922             painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3923             painter.setFont(fontHeader);\par
3924             painter.setPen(QPen(Qt::white));\par
3925             painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3926 \par
3927             {\cf20 // Desenha a QLabel na imagem}\par
3928             QPixmap pixmap = labelAtributos->grab();\par
3929             painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
3930 \par
3931             inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
3932         \}\par
3933     \}\par
3934 \par
3935     printer->newPage();\par
3936 \par
3937     {\cf20 // Desenha a imagem na p\'E1gina}\par
3938     painter.drawImage(logoRect, logo);\par
3939 \par
3940     QString TituloLinhas = {\cf22 "Linhas"};\par
3941 \par
3942     painter.setPen(QPen());\par
3943     painter.setFont(fontePrincipal);\par
3944     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
3945 \par
3946 \par
3947     printer->newPage();\par
3948 \par
3949     {\cf20 // Desenha a imagem na p\'E1gina}\par
3950     painter.drawImage(logoMenorRect, logo);\par
3951 \par
3952     inicioItem = 100;\par
3953 \par
3954     {\cf19 for}({\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
3955 \par
3956         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
3957             printer->newPage();\par
3958             inicioItem = 100;\par
3959             painter.drawImage(logoMenorRect, logo);\par
3960 \par
3961         \}\par
3962 \par
3963         QLabel* labelHeader = {\cf17 new} QLabel();\par
3964         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3965         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3966         labelHeader->setFont(fontHeader);\par
3967         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3968         labelHeader->setTextFormat(Qt::RichText);\par
3969 \par
3970 \par
3971         {\cf20 // Cria a QString atributos com a tag <html>}\par
3972         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3973 \par
3974         {\cf19 if}(FiltroLinha::correntePu)\{\par
3975             atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
3976             QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
3977             atributos = atributos.arg(corrente);\par
3978         \}\par
3979         {\cf19 if}(FiltroLinha::dht)\{\par
3980             atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
3981             QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
3982             atributos = atributos.arg(dht);\par
3983         \}\par
3984         {\cf19 if}(FiltroLinha::dit)\{\par
3985             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3986                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
3987                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
3988                 atributos = atributos.arg(j);\par
3989                 atributos = atributos.arg(tdi);\par
3990             \}\par
3991         \}\par
3992         {\cf19 if}(FiltroLinha::ditPercent)\{\par
3993             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3994                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
3995                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
3996                 atributos = atributos.arg(j);\par
3997                 atributos = atributos.arg(tdiPercent);\par
3998             \}\par
3999         \}\par
4000         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
4001             atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
4002             QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
4003             atributos = atributos.arg(correnteEficaz);\par
4004         \}\par
4005         {\cf19 if}(FiltroLinha::resistencia)\{\par
4006             atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
4007             QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
4008             atributos = atributos.arg(resistencia);\par
4009         \}\par
4010         {\cf19 if}(FiltroLinha::perdas)\{\par
4011             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
4012             QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
4013             atributos = atributos.arg(perdas);\par
4014         \}\par
4015         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
4016             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
4017             QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
4018             atributos = atributos.arg(perdasEficaz);\par
4019         \}\par
4020 \par
4021         {\cf20 // Fecha a tag </div> e </html>}\par
4022         atributos += {\cf22 "</div></html>"};\par
4023 \par
4024         {\cf20 // Cria a QLabel com os atributos}\par
4025         QLabel* labelAtributos = {\cf17 new} QLabel();\par
4026         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
4027         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
4028         labelAtributos->setFont(fontConteudo);\par
4029         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
4030         labelAtributos->setTextFormat(Qt::RichText);\par
4031         labelAtributos->setText(atributos);\par
4032 \par
4033         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
4034         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
4035         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
4036         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
4037 \par
4038 \par
4039         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
4040         painter.setFont(fontHeader);\par
4041         painter.setPen(QPen(Qt::white));\par
4042         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
4043 \par
4044         {\cf20 // Desenha a QLabel na imagem}\par
4045         QPixmap pixmap = labelAtributos->grab();\par
4046         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
4047 \par
4048         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
4049 \par
4050     \}\par
4051 \par
4052     painter.end();\par
4053 \}\par
}
}
{\xe \v ContInterBarrasTodL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:ContInterBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ContInterBarrasTodL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1245                                                                 \{\par
1246     QPainter painter(printer);\par
1247     painter.begin(printer);\par
1248     {\cf18 int} w = painter.device()->width();\par
1249     {\cf18 int} h = painter.device()->height();\par
1250 \par
1251     {\cf20 // Carrega a imagem do arquivo}\par
1252     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
1253 \par
1254     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1255     QRectF logoRect(20, 20, 300, 56);\par
1256 \par
1257     {\cf20 // Desenha a imagem na p\'E1gina}\par
1258     painter.drawImage(logoRect, logo);\par
1259 \par
1260     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
1261     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
1262 \par
1263     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
1264     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
1265 \par
1266     QFontMetrics fmPrincipal(fontePrincipal);\par
1267     QFontMetrics fmSubtexto(fonteSubtexto);\par
1268 \par
1269     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
1270     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
1271 \par
1272     painter.setFont(fontePrincipal);\par
1273     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
1274 \par
1275     painter.setFont(fonteSubtexto);\par
1276     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
1277 \par
1278     printer->newPage();\par
1279 \par
1280     {\cf20 // Desenha a imagem na p\'E1gina}\par
1281     painter.drawImage(logoRect, logo);\par
1282 \par
1283     QString TituloBarras = {\cf22 "Barras"};\par
1284 \par
1285 \par
1286     painter.setFont(fontePrincipal);\par
1287     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
1288 \par
1289     printer->newPage();\par
1290 \par
1291 \par
1292 \par
1293     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1294     QRectF logoMenorRect(20, 20, 100, 19);\par
1295 \par
1296     {\cf20 // Desenha a imagem na p\'E1gina}\par
1297     painter.drawImage(logoMenorRect, logo);\par
1298 \par
1299     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
1300     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
1301 \par
1302     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
1303     gradient.setColorAt(0, QColor(180, 235, 249));\par
1304     gradient.setColorAt(1, QColor(30, 56, 91));\par
1305     painter.setBrush(QBrush(gradient));\par
1306     {\cf20 //estilo da fonte do header}\par
1307     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
1308 \par
1309     {\cf20 // Define o estilo da fonte}\par
1310     QFont fontConteudo({\cf22 "Roboto"},12);\par
1311 \par
1312     {\cf18 int} inicioItem = 100;\par
1313 \par
1314 \par
1315     {\cf19 for} ({\cf18 int} i = inicio; i <= fim; i++) \{\par
1316 \par
1317         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
1318             printer->newPage();\par
1319             inicioItem = 100;\par
1320             painter.drawImage(logoMenorRect, logo);\par
1321 \par
1322         \}\par
1323 \par
1324         QLabel* labelHeader = {\cf17 new} QLabel();\par
1325         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1326         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1327         labelHeader->setFont(fontHeader);\par
1328         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1329         labelHeader->setTextFormat(Qt::RichText);\par
1330 \par
1331         {\cf20 // Cria a QString atributos com a tag <html>}\par
1332         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1333 \par
1334         {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
1335             atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
1336                 QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
1337             atributos = atributos.arg(tensao);\par
1338         \}\par
1339 \par
1340         {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
1341             atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
1342                 QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
1343             atributos = atributos.arg(tensaoNominal);\par
1344         \}\par
1345 \par
1346         {\cf19 if} (FiltrosBarra::thdv) \{\par
1347             (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
1348             QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
1349             atributos = atributos.arg(thdv);\par
1350         \}\par
1351 \par
1352         {\cf19 if}(FiltrosBarra::dit)\{\par
1353             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1354                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
1355                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
1356                 atributos = atributos.arg(j);\par
1357                 atributos = atributos.arg(tdi);\par
1358             \}\par
1359         \}\par
1360 \par
1361         {\cf19 if}(FiltrosBarra::ditPercent)\{\par
1362             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1363                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
1364                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
1365                 atributos = atributos.arg(j);\par
1366                 atributos = atributos.arg(tdi);\par
1367             \}\par
1368         \}\par
1369 \par
1370         {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
1371             atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
1372             QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
1373             atributos = atributos.arg(tensaoEficaz);\par
1374         \}\par
1375 \par
1376         {\cf20 // Fecha a tag </div> e </html>}\par
1377         atributos += {\cf22 "</div></html>"};\par
1378 \par
1379         {\cf20 // Cria a QLabel com os atributos}\par
1380         QLabel* labelAtributos = {\cf17 new} QLabel();\par
1381         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
1382         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1383         labelAtributos->setFont(fontConteudo);\par
1384         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1385         labelAtributos->setTextFormat(Qt::RichText);\par
1386         labelAtributos->setText(atributos);\par
1387 \par
1388         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
1389         QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
1390         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1391         painter.setFont(fontHeader);\par
1392         painter.setPen(QPen(Qt::white));\par
1393         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1394 \par
1395         {\cf20 // Desenha a QLabel na imagem}\par
1396         QPixmap pixmap = labelAtributos->grab();\par
1397         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
1398 \par
1399         inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
1400 \par
1401     \}\par
1402 \par
1403     printer->newPage();\par
1404 \par
1405     {\cf20 // Desenha a imagem na p\'E1gina}\par
1406     painter.drawImage(logoRect, logo);\par
1407 \par
1408     QString TituloLinhas = {\cf22 "Linhas"};\par
1409 \par
1410     painter.setPen(QPen());\par
1411     painter.setFont(fontePrincipal);\par
1412     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
1413 \par
1414 \par
1415     printer->newPage();\par
1416 \par
1417     {\cf20 // Desenha a imagem na p\'E1gina}\par
1418     painter.drawImage(logoMenorRect, logo);\par
1419 \par
1420     inicioItem = 100;\par
1421 \par
1422     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1423         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
1424         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
1425             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
1426                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
1427                     printer->newPage();\par
1428                     inicioItem = 100;\par
1429                     painter.drawImage(logoMenorRect, logo);\par
1430 \par
1431                 \}\par
1432 \par
1433                 QLabel* labelHeader = {\cf17 new} QLabel();\par
1434                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1435                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1436                 labelHeader->setFont(fontHeader);\par
1437                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1438                 labelHeader->setTextFormat(Qt::RichText);\par
1439 \par
1440 \par
1441                 {\cf20 // Cria a QString atributos com a tag <html>}\par
1442                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1443 \par
1444                 {\cf19 if}(FiltroLinha::correntePu)\{\par
1445                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
1446                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
1447                     atributos = atributos.arg(corrente);\par
1448                 \}\par
1449                 {\cf19 if}(FiltroLinha::dht)\{\par
1450                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
1451                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
1452                     atributos = atributos.arg(dht);\par
1453                 \}\par
1454                 {\cf19 if}(FiltroLinha::dit)\{\par
1455                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1456                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
1457                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
1458                         atributos = atributos.arg(j);\par
1459                         atributos = atributos.arg(tdi);\par
1460                     \}\par
1461                 \}\par
1462                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
1463                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1464                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
1465                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
1466                         atributos = atributos.arg(j);\par
1467                         atributos = atributos.arg(tdiPercent);\par
1468                     \}\par
1469                 \}\par
1470                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
1471                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
1472                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
1473                     atributos = atributos.arg(correnteEficaz);\par
1474                 \}\par
1475                 {\cf19 if}(FiltroLinha::resistencia)\{\par
1476                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
1477                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
1478                     atributos = atributos.arg(resistencia);\par
1479                 \}\par
1480                 {\cf19 if}(FiltroLinha::perdas)\{\par
1481                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1482                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
1483                     atributos = atributos.arg(perdas);\par
1484                 \}\par
1485                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
1486                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1487                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
1488                     atributos = atributos.arg(perdasEficaz);\par
1489                 \}\par
1490 \par
1491                 {\cf20 // Fecha a tag </div> e </html>}\par
1492                 atributos += {\cf22 "</div></html>"};\par
1493 \par
1494                 {\cf20 // Cria a QLabel com os atributos}\par
1495                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
1496                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
1497                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1498                 labelAtributos->setFont(fontConteudo);\par
1499                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1500                 labelAtributos->setTextFormat(Qt::RichText);\par
1501                 labelAtributos->setText(atributos);\par
1502 \par
1503                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
1504                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
1505                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
1506                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
1507 \par
1508 \par
1509                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1510                 painter.setFont(fontHeader);\par
1511                 painter.setPen(QPen(Qt::white));\par
1512                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1513 \par
1514                 {\cf20 // Desenha a QLabel na imagem}\par
1515                 QPixmap pixmap = labelAtributos->grab();\par
1516                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
1517 \par
1518                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
1519             \}\par
1520         \}\par
1521     \}\par
1522 \par
1523     painter.end();\par
1524 \}\par
}
}
{\xe \v ContInterBarrasTodL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:ContInterBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ContInterBarrasTodL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1525                                                               \{\par
1526     QPainter painter(printer);\par
1527     painter.begin(printer);\par
1528     {\cf18 int} w = painter.device()->width();\par
1529     {\cf18 int} h = painter.device()->height();\par
1530 \par
1531     {\cf20 // Carrega a imagem do arquivo}\par
1532     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
1533 \par
1534     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1535     QRectF logoRect(20, 20, 300, 56);\par
1536 \par
1537     {\cf20 // Desenha a imagem na p\'E1gina}\par
1538     painter.drawImage(logoRect, logo);\par
1539 \par
1540     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
1541     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
1542 \par
1543     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
1544     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
1545 \par
1546     QFontMetrics fmPrincipal(fontePrincipal);\par
1547     QFontMetrics fmSubtexto(fonteSubtexto);\par
1548 \par
1549     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
1550     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
1551 \par
1552     painter.setFont(fontePrincipal);\par
1553     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
1554 \par
1555     painter.setFont(fonteSubtexto);\par
1556     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
1557 \par
1558     printer->newPage();\par
1559 \par
1560     {\cf20 // Desenha a imagem na p\'E1gina}\par
1561     painter.drawImage(logoRect, logo);\par
1562 \par
1563     QString TituloBarras = {\cf22 "Barras"};\par
1564 \par
1565 \par
1566     painter.setFont(fontePrincipal);\par
1567     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
1568 \par
1569     printer->newPage();\par
1570 \par
1571 \par
1572 \par
1573     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1574     QRectF logoMenorRect(20, 20, 100, 19);\par
1575 \par
1576     {\cf20 // Desenha a imagem na p\'E1gina}\par
1577     painter.drawImage(logoMenorRect, logo);\par
1578 \par
1579     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
1580     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
1581 \par
1582     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
1583     gradient.setColorAt(0, QColor(180, 235, 249));\par
1584     gradient.setColorAt(1, QColor(30, 56, 91));\par
1585     painter.setBrush(QBrush(gradient));\par
1586     {\cf20 //estilo da fonte do header}\par
1587     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
1588 \par
1589     {\cf20 // Define o estilo da fonte}\par
1590     QFont fontConteudo({\cf22 "Roboto"},12);\par
1591 \par
1592     {\cf18 int} inicioItem = 100;\par
1593 \par
1594 \par
1595     {\cf19 for} ({\cf18 int} i = inicio; i <= fim; i++) \{\par
1596 \par
1597         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
1598              printer->newPage();\par
1599             inicioItem = 100;\par
1600              painter.drawImage(logoMenorRect, logo);\par
1601 \par
1602         \}\par
1603 \par
1604         QLabel* labelHeader = {\cf17 new} QLabel();\par
1605         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1606         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1607         labelHeader->setFont(fontHeader);\par
1608         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1609         labelHeader->setTextFormat(Qt::RichText);\par
1610 \par
1611         {\cf20 // Cria a QString atributos com a tag <html>}\par
1612         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1613 \par
1614         {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
1615             atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
1616                 QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
1617             atributos = atributos.arg(tensao);\par
1618         \}\par
1619 \par
1620         {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
1621             atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
1622                 QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
1623             atributos = atributos.arg(tensaoNominal);\par
1624         \}\par
1625 \par
1626         {\cf19 if} (FiltrosBarra::thdv) \{\par
1627             (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
1628                 QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
1629             atributos = atributos.arg(thdv);\par
1630         \}\par
1631 \par
1632         {\cf19 if}(FiltrosBarra::dit)\{\par
1633             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1634                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
1635                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
1636                 atributos = atributos.arg(j);\par
1637                 atributos = atributos.arg(tdi);\par
1638             \}\par
1639         \}\par
1640 \par
1641         {\cf19 if}(FiltrosBarra::ditPercent)\{\par
1642             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1643                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
1644                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
1645                 atributos = atributos.arg(j);\par
1646                 atributos = atributos.arg(tdi);\par
1647             \}\par
1648         \}\par
1649 \par
1650         {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
1651             atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
1652             QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
1653             atributos = atributos.arg(tensaoEficaz);\par
1654         \}\par
1655 \par
1656         {\cf20 // Fecha a tag </div> e </html>}\par
1657         atributos += {\cf22 "</div></html>"};\par
1658 \par
1659         {\cf20 // Cria a QLabel com os atributos}\par
1660         QLabel* labelAtributos = {\cf17 new} QLabel();\par
1661         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
1662         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1663         labelAtributos->setFont(fontConteudo);\par
1664         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1665         labelAtributos->setTextFormat(Qt::RichText);\par
1666         labelAtributos->setText(atributos);\par
1667 \par
1668         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
1669         QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
1670         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1671         painter.setFont(fontHeader);\par
1672         painter.setPen(QPen(Qt::white));\par
1673         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1674 \par
1675         {\cf20 // Desenha a QLabel na imagem}\par
1676         QPixmap pixmap = labelAtributos->grab();\par
1677         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
1678 \par
1679         inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
1680 \par
1681     \}\par
1682 \par
1683     printer->newPage();\par
1684 \par
1685     {\cf20 // Desenha a imagem na p\'E1gina}\par
1686     painter.drawImage(logoRect, logo);\par
1687 \par
1688     QString TituloLinhas = {\cf22 "Linhas"};\par
1689 \par
1690     painter.setPen(QPen());\par
1691     painter.setFont(fontePrincipal);\par
1692     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
1693 \par
1694 \par
1695     printer->newPage();\par
1696 \par
1697     {\cf20 // Desenha a imagem na p\'E1gina}\par
1698     painter.drawImage(logoMenorRect, logo);\par
1699 \par
1700     inicioItem = 100;\par
1701 \par
1702     {\cf19 for}({\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1703 \par
1704         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
1705             printer->newPage();\par
1706             inicioItem = 100;\par
1707             painter.drawImage(logoMenorRect, logo);\par
1708 \par
1709         \}\par
1710 \par
1711         QLabel* labelHeader = {\cf17 new} QLabel();\par
1712         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1713         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1714         labelHeader->setFont(fontHeader);\par
1715         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1716         labelHeader->setTextFormat(Qt::RichText);\par
1717 \par
1718 \par
1719         {\cf20 // Cria a QString atributos com a tag <html>}\par
1720         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1721 \par
1722         {\cf19 if}(FiltroLinha::correntePu)\{\par
1723             atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
1724                 QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
1725             atributos = atributos.arg(corrente);\par
1726         \}\par
1727         {\cf19 if}(FiltroLinha::dht)\{\par
1728             atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
1729             QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
1730             atributos = atributos.arg(dht);\par
1731         \}\par
1732         {\cf19 if}(FiltroLinha::dit)\{\par
1733             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1734                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
1735                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
1736                 atributos = atributos.arg(j);\par
1737                 atributos = atributos.arg(tdi);\par
1738             \}\par
1739         \}\par
1740         {\cf19 if}(FiltroLinha::ditPercent)\{\par
1741             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1742                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
1743                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
1744                 atributos = atributos.arg(j);\par
1745                 atributos = atributos.arg(tdiPercent);\par
1746             \}\par
1747         \}\par
1748         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
1749             atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
1750             QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
1751             atributos = atributos.arg(correnteEficaz);\par
1752         \}\par
1753         {\cf19 if}(FiltroLinha::resistencia)\{\par
1754             atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
1755             QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
1756             atributos = atributos.arg(resistencia);\par
1757         \}\par
1758         {\cf19 if}(FiltroLinha::perdas)\{\par
1759             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1760             QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
1761             atributos = atributos.arg(perdas);\par
1762         \}\par
1763         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
1764             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1765             QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
1766             atributos = atributos.arg(perdasEficaz);\par
1767         \}\par
1768 \par
1769         {\cf20 // Fecha a tag </div> e </html>}\par
1770         atributos += {\cf22 "</div></html>"};\par
1771 \par
1772         {\cf20 // Cria a QLabel com os atributos}\par
1773         QLabel* labelAtributos = {\cf17 new} QLabel();\par
1774         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
1775         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1776         labelAtributos->setFont(fontConteudo);\par
1777         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1778         labelAtributos->setTextFormat(Qt::RichText);\par
1779         labelAtributos->setText(atributos);\par
1780 \par
1781         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
1782         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
1783         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
1784         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
1785 \par
1786 \par
1787         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1788         painter.setFont(fontHeader);\par
1789         painter.setPen(QPen(Qt::white));\par
1790         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1791 \par
1792         {\cf20 // Desenha a QLabel na imagem}\par
1793         QPixmap pixmap = labelAtributos->grab();\par
1794         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
1795 \par
1796         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
1797 \par
1798     \}\par
1799 \par
1800     painter.end();\par
1801 \}\par
}
}
{\xe \v ContInterBInterL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:ContInterBInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ContInterBInterL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 683                                                              \{\par
684     QPainter painter(printer);\par
685     painter.begin(printer);\par
686     {\cf18 int} w = painter.device()->width();\par
687     {\cf18 int} h = painter.device()->height();\par
688 \par
689     {\cf20 // Carrega a imagem do arquivo}\par
690     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
691 \par
692     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
693     QRectF logoRect(20, 20, 300, 56);\par
694 \par
695     {\cf20 // Desenha a imagem na p\'E1gina}\par
696     painter.drawImage(logoRect, logo);\par
697 \par
698     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
699     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
700 \par
701     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
702     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
703 \par
704     QFontMetrics fmPrincipal(fontePrincipal);\par
705     QFontMetrics fmSubtexto(fonteSubtexto);\par
706 \par
707     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
708     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
709 \par
710     painter.setFont(fontePrincipal);\par
711     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
712 \par
713     painter.setFont(fonteSubtexto);\par
714     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
715 \par
716     printer->newPage();\par
717 \par
718     {\cf20 // Desenha a imagem na p\'E1gina}\par
719     painter.drawImage(logoRect, logo);\par
720 \par
721     QString TituloBarras = {\cf22 "Barras"};\par
722 \par
723 \par
724     painter.setFont(fontePrincipal);\par
725     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
726 \par
727     printer->newPage();\par
728 \par
729 \par
730 \par
731     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
732     QRectF logoMenorRect(20, 20, 100, 19);\par
733 \par
734     {\cf20 // Desenha a imagem na p\'E1gina}\par
735     painter.drawImage(logoMenorRect, logo);\par
736 \par
737     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
738     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
739 \par
740     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
741     gradient.setColorAt(0, QColor(180, 235, 249));\par
742     gradient.setColorAt(1, QColor(30, 56, 91));\par
743     painter.setBrush(QBrush(gradient));\par
744     {\cf20 //estilo da fonte do header}\par
745     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
746 \par
747     {\cf20 // Define o estilo da fonte}\par
748     QFont fontConteudo({\cf22 "Roboto"},12);\par
749 \par
750     {\cf18 int} inicioItem = 100;\par
751 \par
752 \par
753     {\cf19 for} ({\cf18 int} i = inicio; i <= fim; i++) \{\par
754 \par
755         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
756             printer->newPage();\par
757             inicioItem = 100;\par
758             painter.drawImage(logoMenorRect, logo);\par
759 \par
760         \}\par
761 \par
762         QLabel* labelHeader = {\cf17 new} QLabel();\par
763         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
764         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
765         labelHeader->setFont(fontHeader);\par
766         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
767         labelHeader->setTextFormat(Qt::RichText);\par
768 \par
769         {\cf20 // Cria a QString atributos com a tag <html>}\par
770         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
771 \par
772         {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
773             atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
774                 QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
775             atributos = atributos.arg(tensao);\par
776         \}\par
777 \par
778         {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
779             atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
780                 QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
781             atributos = atributos.arg(tensaoNominal);\par
782         \}\par
783 \par
784         {\cf19 if} (FiltrosBarra::thdv) \{\par
785             (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
786             QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
787             atributos = atributos.arg(thdv);\par
788         \}\par
789 \par
790         {\cf19 if}(FiltrosBarra::dit)\{\par
791             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
792                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
793                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
794                 atributos = atributos.arg(j);\par
795                 atributos = atributos.arg(tdi);\par
796             \}\par
797         \}\par
798 \par
799         {\cf19 if}(FiltrosBarra::ditPercent)\{\par
800             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
801                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
802                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
803                 atributos = atributos.arg(j);\par
804                 atributos = atributos.arg(tdi);\par
805             \}\par
806         \}\par
807 \par
808         {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
809             atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
810             QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
811             atributos = atributos.arg(tensaoEficaz);\par
812         \}\par
813 \par
814         {\cf20 // Fecha a tag </div> e </html>}\par
815         atributos += {\cf22 "</div></html>"};\par
816 \par
817         {\cf20 // Cria a QLabel com os atributos}\par
818         QLabel* labelAtributos = {\cf17 new} QLabel();\par
819         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
820         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
821         labelAtributos->setFont(fontConteudo);\par
822         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
823         labelAtributos->setTextFormat(Qt::RichText);\par
824         labelAtributos->setText(atributos);\par
825 \par
826         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
827         QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
828         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
829         painter.setFont(fontHeader);\par
830         painter.setPen(QPen(Qt::white));\par
831         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
832 \par
833         {\cf20 // Desenha a QLabel na imagem}\par
834         QPixmap pixmap = labelAtributos->grab();\par
835         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
836 \par
837         inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
838 \par
839     \}\par
840 \par
841     printer->newPage();\par
842 \par
843     {\cf20 // Desenha a imagem na p\'E1gina}\par
844     painter.drawImage(logoRect, logo);\par
845 \par
846     QString TituloLinhas = {\cf22 "Linhas"};\par
847 \par
848     painter.setPen(QPen());\par
849     painter.setFont(fontePrincipal);\par
850     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
851 \par
852 \par
853     printer->newPage();\par
854 \par
855     {\cf20 // Desenha a imagem na p\'E1gina}\par
856     painter.drawImage(logoMenorRect, logo);\par
857 \par
858     inicioItem = 100;\par
859 \par
860     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
861         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
862         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
863         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
864             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
865                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
866                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
867                         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
868                             printer->newPage();\par
869                             inicioItem = 100;\par
870                             painter.drawImage(logoMenorRect, logo);\par
871                         \}\par
872 \par
873                         QLabel* labelHeader = {\cf17 new} QLabel();\par
874                         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
875                         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
876                         labelHeader->setFont(fontHeader);\par
877                         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
878                         labelHeader->setTextFormat(Qt::RichText);\par
879 \par
880 \par
881                         {\cf20 // Cria a QString atributos com a tag <html>}\par
882                         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
883 \par
884                         {\cf19 if}(FiltroLinha::correntePu)\{\par
885                         atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
886                         QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
887                         atributos = atributos.arg(corrente);\par
888                         \}\par
889                         {\cf19 if}(FiltroLinha::dht)\{\par
890                         atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
891                         QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
892                         atributos = atributos.arg(dht);\par
893                         \}\par
894                         {\cf19 if}(FiltroLinha::dit)\{\par
895                         {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
896                                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
897                                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
898                                 atributos = atributos.arg(j);\par
899                                 atributos = atributos.arg(tdi);\par
900                         \}\par
901                         \}\par
902                         {\cf19 if}(FiltroLinha::ditPercent)\{\par
903                         {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
904                                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
905                                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
906                                 atributos = atributos.arg(j);\par
907                                 atributos = atributos.arg(tdiPercent);\par
908                         \}\par
909                         \}\par
910                         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
911                         atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
912                         QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
913                         atributos = atributos.arg(correnteEficaz);\par
914                         \}\par
915                         {\cf19 if}(FiltroLinha::resistencia)\{\par
916                         atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
917                         QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
918                         atributos = atributos.arg(resistencia);\par
919                         \}\par
920                         {\cf19 if}(FiltroLinha::perdas)\{\par
921                         atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
922                         QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
923                         atributos = atributos.arg(perdas);\par
924                         \}\par
925                         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
926                         atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
927                         QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
928                         atributos = atributos.arg(perdasEficaz);\par
929                         \}\par
930 \par
931                         {\cf20 // Fecha a tag </div> e </html>}\par
932                         atributos += {\cf22 "</div></html>"};\par
933 \par
934                         {\cf20 // Cria a QLabel com os atributos}\par
935                         QLabel* labelAtributos = {\cf17 new} QLabel();\par
936                         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
937                         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
938                         labelAtributos->setFont(fontConteudo);\par
939                         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
940                         labelAtributos->setTextFormat(Qt::RichText);\par
941                         labelAtributos->setText(atributos);\par
942 \par
943                         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
944                         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
945                         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
946                         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
947 \par
948 \par
949                         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
950                         painter.setFont(fontHeader);\par
951                         painter.setPen(QPen(Qt::white));\par
952                         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
953 \par
954                         {\cf20 // Desenha a QLabel na imagem}\par
955                         QPixmap pixmap = labelAtributos->grab();\par
956                         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
957 \par
958                         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
959                     \}\par
960                 \}\par
961             \}\par
962         \}\par
963     \}\par
964 \par
965     painter.end();\par
966 \}\par
}
}
{\xe \v ContInterBInterL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:ContInterBInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ContInterBInterL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 967                                                            \{\par
968     QPainter painter(printer);\par
969     painter.begin(printer);\par
970     {\cf18 int} w = painter.device()->width();\par
971     {\cf18 int} h = painter.device()->height();\par
972 \par
973     {\cf20 // Carrega a imagem do arquivo}\par
974     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
975 \par
976     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
977     QRectF logoRect(20, 20, 300, 56);\par
978 \par
979     {\cf20 // Desenha a imagem na p\'E1gina}\par
980     painter.drawImage(logoRect, logo);\par
981 \par
982     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
983     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
984 \par
985     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
986     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
987 \par
988     QFontMetrics fmPrincipal(fontePrincipal);\par
989     QFontMetrics fmSubtexto(fonteSubtexto);\par
990 \par
991     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
992     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
993 \par
994     painter.setFont(fontePrincipal);\par
995     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
996 \par
997     painter.setFont(fonteSubtexto);\par
998     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
999 \par
1000     printer->newPage();\par
1001 \par
1002     {\cf20 // Desenha a imagem na p\'E1gina}\par
1003     painter.drawImage(logoRect, logo);\par
1004 \par
1005     QString TituloBarras = {\cf22 "Barras"};\par
1006 \par
1007 \par
1008     painter.setFont(fontePrincipal);\par
1009     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
1010 \par
1011     printer->newPage();\par
1012 \par
1013 \par
1014 \par
1015     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1016     QRectF logoMenorRect(20, 20, 100, 19);\par
1017 \par
1018     {\cf20 // Desenha a imagem na p\'E1gina}\par
1019     painter.drawImage(logoMenorRect, logo);\par
1020 \par
1021     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
1022     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
1023 \par
1024     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
1025     gradient.setColorAt(0, QColor(180, 235, 249));\par
1026     gradient.setColorAt(1, QColor(30, 56, 91));\par
1027     painter.setBrush(QBrush(gradient));\par
1028     {\cf20 //estilo da fonte do header}\par
1029     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
1030 \par
1031     {\cf20 // Define o estilo da fonte}\par
1032     QFont fontConteudo({\cf22 "Roboto"},12);\par
1033 \par
1034     {\cf18 int} inicioItem = 100;\par
1035 \par
1036 \par
1037     {\cf19 for} ({\cf18 int} i = inicio; i <= fim; i++) \{\par
1038 \par
1039         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
1040             printer->newPage();\par
1041             inicioItem = 100;\par
1042             painter.drawImage(logoMenorRect, logo);\par
1043 \par
1044         \}\par
1045 \par
1046         QLabel* labelHeader = {\cf17 new} QLabel();\par
1047         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1048         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1049         labelHeader->setFont(fontHeader);\par
1050         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1051         labelHeader->setTextFormat(Qt::RichText);\par
1052 \par
1053         {\cf20 // Cria a QString atributos com a tag <html>}\par
1054         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1055 \par
1056         {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
1057             atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
1058                 QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
1059             atributos = atributos.arg(tensao);\par
1060         \}\par
1061 \par
1062         {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
1063             atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
1064                 QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
1065             atributos = atributos.arg(tensaoNominal);\par
1066         \}\par
1067 \par
1068         {\cf19 if} (FiltrosBarra::thdv) \{\par
1069             (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
1070             QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
1071             atributos = atributos.arg(thdv);\par
1072         \}\par
1073 \par
1074         {\cf19 if}(FiltrosBarra::dit)\{\par
1075             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1076                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
1077                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
1078                 atributos = atributos.arg(j);\par
1079                 atributos = atributos.arg(tdi);\par
1080             \}\par
1081         \}\par
1082 \par
1083         {\cf19 if}(FiltrosBarra::ditPercent)\{\par
1084             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1085                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
1086                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
1087                 atributos = atributos.arg(j);\par
1088                 atributos = atributos.arg(tdi);\par
1089             \}\par
1090         \}\par
1091 \par
1092         {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
1093             atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
1094             QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
1095             atributos = atributos.arg(tensaoEficaz);\par
1096         \}\par
1097 \par
1098         {\cf20 // Fecha a tag </div> e </html>}\par
1099         atributos += {\cf22 "</div></html>"};\par
1100 \par
1101         {\cf20 // Cria a QLabel com os atributos}\par
1102         QLabel* labelAtributos = {\cf17 new} QLabel();\par
1103         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
1104         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1105         labelAtributos->setFont(fontConteudo);\par
1106         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1107         labelAtributos->setTextFormat(Qt::RichText);\par
1108         labelAtributos->setText(atributos);\par
1109 \par
1110         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
1111         QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
1112         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1113         painter.setFont(fontHeader);\par
1114         painter.setPen(QPen(Qt::white));\par
1115         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1116 \par
1117         {\cf20 // Desenha a QLabel na imagem}\par
1118         QPixmap pixmap = labelAtributos->grab();\par
1119         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
1120 \par
1121         inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
1122 \par
1123     \}\par
1124 \par
1125     printer->newPage();\par
1126 \par
1127     {\cf20 // Desenha a imagem na p\'E1gina}\par
1128     painter.drawImage(logoRect, logo);\par
1129 \par
1130     QString TituloLinhas = {\cf22 "Linhas"};\par
1131 \par
1132     painter.setPen(QPen());\par
1133     painter.setFont(fontePrincipal);\par
1134     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
1135 \par
1136 \par
1137     printer->newPage();\par
1138 \par
1139     {\cf20 // Desenha a imagem na p\'E1gina}\par
1140     painter.drawImage(logoMenorRect, logo);\par
1141 \par
1142     inicioItem = 100;\par
1143     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1144         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
1145         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
1146             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
1147                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
1148                     printer->newPage();\par
1149                     inicioItem = 100;\par
1150                     painter.drawImage(logoMenorRect, logo);\par
1151                 \}\par
1152 \par
1153                 QLabel* labelHeader = {\cf17 new} QLabel();\par
1154                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1155                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1156                 labelHeader->setFont(fontHeader);\par
1157                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1158                 labelHeader->setTextFormat(Qt::RichText);\par
1159 \par
1160 \par
1161                 {\cf20 // Cria a QString atributos com a tag <html>}\par
1162                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1163 \par
1164                 {\cf19 if}(FiltroLinha::correntePu)\{\par
1165                 atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
1166                 QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
1167                 atributos = atributos.arg(corrente);\par
1168                 \}\par
1169                 {\cf19 if}(FiltroLinha::dht)\{\par
1170                 atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
1171                 QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
1172                 atributos = atributos.arg(dht);\par
1173                 \}\par
1174                 {\cf19 if}(FiltroLinha::dit)\{\par
1175                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1176                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
1177                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
1178                         atributos = atributos.arg(j);\par
1179                         atributos = atributos.arg(tdi);\par
1180                 \}\par
1181                 \}\par
1182                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
1183                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1184                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
1185                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
1186                         atributos = atributos.arg(j);\par
1187                         atributos = atributos.arg(tdiPercent);\par
1188                 \}\par
1189                 \}\par
1190                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
1191                 atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
1192                 QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
1193                 atributos = atributos.arg(correnteEficaz);\par
1194                 \}\par
1195                 {\cf19 if}(FiltroLinha::resistencia)\{\par
1196                 atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
1197                 QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
1198                 atributos = atributos.arg(resistencia);\par
1199                 \}\par
1200                 {\cf19 if}(FiltroLinha::perdas)\{\par
1201                 atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1202                 QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
1203                 atributos = atributos.arg(perdas);\par
1204                 \}\par
1205                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
1206                 atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1207                 QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
1208                 atributos = atributos.arg(perdasEficaz);\par
1209                 \}\par
1210 \par
1211                 {\cf20 // Fecha a tag </div> e </html>}\par
1212                 atributos += {\cf22 "</div></html>"};\par
1213 \par
1214                 {\cf20 // Cria a QLabel com os atributos}\par
1215                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
1216                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
1217                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1218                 labelAtributos->setFont(fontConteudo);\par
1219                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1220                 labelAtributos->setTextFormat(Qt::RichText);\par
1221                 labelAtributos->setText(atributos);\par
1222 \par
1223                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
1224                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
1225                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
1226                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
1227 \par
1228 \par
1229                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1230                 painter.setFont(fontHeader);\par
1231                 painter.setPen(QPen(Qt::white));\par
1232                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1233 \par
1234                 {\cf20 // Desenha a QLabel na imagem}\par
1235                 QPixmap pixmap = labelAtributos->grab();\par
1236                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
1237 \par
1238                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
1239             \}\par
1240         \}\par
1241     \}\par
1242 \par
1243     painter.end();\par
1244 \}\par
}
}
{\xe \v criaArquivo\:FrameExportar}
{\xe \v FrameExportar\:criaArquivo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * FrameExportar::criaArquivo ()}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5223                                  \{\par
5224     {\cf20 //Configura-se um filtro para pesquisa do diretorio}\par
5225     QFile *arquivoSaida = {\cf17 new} QFile();\par
5226     QString filtro={\cf22 "Arquivos separados por virgula (*.csv)"};\par
5227     QString localSalvamento =QFileDialog::getSaveFileName({\cf17 this},{\cf22 "Salvar Arquivo"},QDir::homePath(),filtro);\par
5228     arquivoSaida->setFileName(localSalvamento);\par
5229     {\cf19 if}(!arquivoSaida->open(QFile::WriteOnly | QFile::Text))\{\par
5230         {\cf19 if}(arquivoSaida->error() == QFile::OpenError)\{  {\cf20 //verifica se o usuario nao selecionou nenhuma}\par
5231             {\cf19 return} {\cf17 nullptr};\par
5232         \}\par
5233         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Arquivo n\'E3o p\'F4de ser savo"}); {\cf20 //caso tenha selecionado e n\'E3o tenha conseguido abrir \'E9 enviado uma messagem de erro}\par
5234         {\cf19 return} {\cf17 nullptr};\par
5235     \}\par
5236 \par
5237     {\cf19 return} arquivoSaida;\par
5238 \par
5239 \}\par
}
}
{\xe \v criaPlanilha\:FrameExportar}
{\xe \v FrameExportar\:criaPlanilha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QXlsx::Document * FrameExportar::criaPlanilha ()}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4214                                           \{\par
4215         QXlsx::Document* planilha = {\cf17 new} QXlsx::Document;\par
4216         {\cf19 return} planilha;\par
4217 \}\par
}
}
{\xe \v CsvCompBarrasaTodL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:CsvCompBarrasaTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvCompBarrasaTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5170                                             \{\par
5171     QFile *arquivoSaida = criaArquivo();\par
5172     QTextStream saida(arquivoSaida);\par
5173     CsvEscreveBarrasComp(&saida);\par
5174     CsvEscreveLTodL1TodL2(&saida);\par
5175 \par
5176 \par
5177     arquivoSaida->flush();\par
5178     arquivoSaida->close();\par
5179 \}\par
}
}
{\xe \v CsvCompBarrasInterL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:CsvCompBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvCompBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5149                                              \{\par
5150     QFile *arquivoSaida = criaArquivo();\par
5151     QTextStream saida(arquivoSaida);\par
5152     CsvEscreveBarrasComp(&saida);\par
5153     CsvEscreveLInterL1TodL2(&saida);\par
5154 \par
5155 \par
5156     arquivoSaida->flush();\par
5157     arquivoSaida->close();\par
5158 \}\par
}
}
{\xe \v CsvCompBarrasInterL2InterL2\:FrameExportar}
{\xe \v FrameExportar\:CsvCompBarrasInterL2InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvCompBarrasInterL2InterL2 ()}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5140                                                \{\par
5141     QFile *arquivoSaida = criaArquivo();\par
5142     QTextStream saida(arquivoSaida);\par
5143     CsvEscreveBarrasComp(&saida);\par
5144     CsvEscreveLInterL1InterL2(&saida);\par
5145     {\cf20 //Linhas}\par
5146     arquivoSaida->flush();\par
5147     arquivoSaida->close();\par
5148 \}\par
}
}
{\xe \v CsvCompBarrasTodL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:CsvCompBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvCompBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5159                                              \{\par
5160     QFile *arquivoSaida = criaArquivo();\par
5161     QTextStream saida(arquivoSaida);\par
5162     CsvEscreveBarrasComp(&saida);\par
5163     CsvEscreveLTodL1InterL2(&saida);\par
5164 \par
5165 \par
5166     arquivoSaida->flush();\par
5167     arquivoSaida->close();\par
5168 \par
5169 \}\par
}
}
{\xe \v CsvEscreveBarrasComp\:FrameExportar}
{\xe \v FrameExportar\:CsvEscreveBarrasComp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvEscreveBarrasComp (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5295                                                           \{\par
5296     *saida << {\cf22 "Barra"};\par
5297     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
5298         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
5299             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
5300                 *saida << {\cf22 ","}+QString::number(i+1);\par
5301                 {\cf19 break};\par
5302             \}\par
5303         \}\par
5304     \}\par
5305     *saida << Qt::endl;\par
5306 \par
5307     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
5308         *saida << {\cf22 "Tensao na Barra[pu]"} ;\par
5309         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
5310             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
5311                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
5312                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
5313                 {\cf19 break};\par
5314                 \}\par
5315             \}\par
5316         \}\par
5317         *saida << Qt::endl;\par
5318     \}\par
5319     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
5320         *saida << {\cf22 "Tensao Nominal[kV]"} ;\par
5321         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
5322             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
5323                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
5324                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
5325                 {\cf19 break};\par
5326                 \}\par
5327             \}\par
5328         \}\par
5329         *saida << Qt::endl;\par
5330     \}\par
5331     {\cf19 if}(FiltrosBarra::thdv)\{\par
5332         *saida << {\cf22 "THDV[%]"} ;\par
5333         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
5334             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
5335                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
5336                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
5337                 {\cf19 break};\par
5338                 \}\par
5339             \}\par
5340         \}\par
5341         *saida << Qt::endl;\par
5342     \}\par
5343     {\cf19 if}(FiltrosBarra::dit)\{\par
5344         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
5345             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[pu]"} ;\par
5346             {\cf19 for}({\cf18 int} k = 0 ; k < FrameTensoes::numeroDeBarras ; k++)\{\par
5347                 {\cf19 for}({\cf18 int} p = 0 ; p < FiltrosBarra::indiceBarrasEscolhidas.size() ; p++)\{\par
5348                     {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(p).toInt()-1) == k )\{\par
5349                             *saida << {\cf22 ","}+QString::number(FrameBarras::barras[k].getDti().find(j)->second.first.first,{\cf23 'f'},5);\par
5350                             {\cf19 break};\par
5351                     \}\par
5352                 \}\par
5353             \}\par
5354             *saida << Qt::endl;\par
5355         \}\par
5356     \}\par
5357 \par
5358     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
5359         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
5360             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"} ;\par
5361             {\cf19 for}({\cf18 int} k = 0 ; k < FrameTensoes::numeroDeBarras ; k++)\{\par
5362                 {\cf19 for}({\cf18 int} p = 0 ; p < FiltrosBarra::indiceBarrasEscolhidas.size() ; p++)\{\par
5363                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(p).toInt()-1) == k )\{\par
5364                         *saida << {\cf22 ","}+QString::number(FrameBarras::barras[k].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
5365                         {\cf19 break};\par
5366                 \}\par
5367                 \}\par
5368             \}\par
5369             *saida << Qt::endl;\par
5370         \}\par
5371     \}\par
5372 \par
5373     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
5374         *saida << {\cf22 "Tensao Eficaz[pu]"} ;\par
5375         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
5376             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
5377                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
5378                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
5379                 {\cf19 break};\par
5380                 \}\par
5381             \}\par
5382         \}\par
5383         *saida << Qt::endl;\par
5384     \}\par
5385 \par
5386 \par
5387 \}\par
}
}
{\xe \v CsvEscreveBarrasInfec\:FrameExportar}
{\xe \v FrameExportar\:CsvEscreveBarrasInfec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvEscreveBarrasInfec (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5389                                                            \{\par
5390     *saida << {\cf22 "Barra"};\par
5391     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
5392         {\cf18 bool} infectada = {\cf17 false};\par
5393         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
5394             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
5395                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
5396                 infectada = {\cf17 true};\par
5397                 {\cf19 break};\par
5398                 \}\par
5399             \}\par
5400         \}{\cf19 else}\{\par
5401             infectada = {\cf17 true};\par
5402         \}\par
5403         {\cf19 if}(infectada)\{\par
5404             *saida << {\cf22 ","}+QString::number(i+1);\par
5405         \}\par
5406     \}\par
5407     *saida << Qt::endl;\par
5408     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
5409         *saida << {\cf22 "Tensao na Barra[pu]"} ;\par
5410         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
5411             {\cf18 bool} infectada = {\cf17 false};\par
5412             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
5413                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
5414                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
5415                         infectada = {\cf17 true};\par
5416                         {\cf19 break};\par
5417                 \}\par
5418                 \}\par
5419             \}{\cf19 else}\{\par
5420                 infectada = {\cf17 true};\par
5421             \}\par
5422             {\cf19 if}(infectada)\{\par
5423                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
5424             \}\par
5425         \}\par
5426         *saida << Qt::endl;\par
5427     \}\par
5428     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
5429         *saida << {\cf22 "Tensao Nominal[kV]"} ;\par
5430         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
5431             {\cf18 bool} infectada = {\cf17 false};\par
5432             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
5433                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
5434                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
5435                         infectada = {\cf17 true};\par
5436                         {\cf19 break};\par
5437                 \}\par
5438                 \}\par
5439             \}{\cf19 else}\{\par
5440                 infectada = {\cf17 true};\par
5441             \}\par
5442             {\cf19 if}(infectada)\{\par
5443                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
5444             \}\par
5445         \}\par
5446         *saida << Qt::endl;\par
5447     \}\par
5448     {\cf19 if}(FiltrosBarra::thdv)\{\par
5449         *saida << {\cf22 "THDV[%]"} ;\par
5450         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
5451             {\cf18 bool} infectada = {\cf17 false};\par
5452             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
5453                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
5454                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
5455                         infectada = {\cf17 true};\par
5456                         {\cf19 break};\par
5457                 \}\par
5458                 \}\par
5459             \}{\cf19 else}\{\par
5460                 infectada = {\cf17 true};\par
5461             \}\par
5462             {\cf19 if}(infectada)\{\par
5463                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
5464             \}\par
5465         \}\par
5466         *saida << Qt::endl;\par
5467     \}\par
5468     {\cf19 if}(FiltrosBarra::dit)\{\par
5469         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
5470             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[pu]"} ;\par
5471             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
5472                 {\cf18 bool} infectada = {\cf17 false};\par
5473                 {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
5474                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
5475                         {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
5476                             infectada = {\cf17 true};\par
5477                             {\cf19 break};\par
5478                         \}\par
5479                 \}\par
5480                 \}{\cf19 else}\{\par
5481                 infectada = {\cf17 true};\par
5482                 \}\par
5483                 {\cf19 if}(infectada)\{\par
5484                     *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'f'},5);\par
5485                 \}\par
5486             \}\par
5487             *saida << Qt::endl;\par
5488         \}\par
5489     \}\par
5490     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
5491         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
5492             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"} ;\par
5493             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
5494                 {\cf18 bool} infectada = {\cf17 false};\par
5495                 {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
5496                     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
5497                         {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
5498                             infectada = {\cf17 true};\par
5499                             {\cf19 break};\par
5500                         \}\par
5501                     \}\par
5502                 \}{\cf19 else}\{\par
5503                     infectada = {\cf17 true};\par
5504                 \}\par
5505                 {\cf19 if}(infectada)\{\par
5506                     *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
5507                 \}\par
5508             \}\par
5509             *saida << Qt::endl;\par
5510         \}\par
5511     \}\par
5512     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
5513         *saida << {\cf22 "THDV[%]"} ;\par
5514         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
5515             {\cf18 bool} infectada = {\cf17 false};\par
5516             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
5517                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
5518                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
5519                         infectada = {\cf17 true};\par
5520                         {\cf19 break};\par
5521                     \}\par
5522                 \}\par
5523             \}{\cf19 else}\{\par
5524                 infectada = {\cf17 true};\par
5525             \}\par
5526             {\cf19 if}(infectada)\{\par
5527                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
5528             \}\par
5529         \}\par
5530         *saida << Qt::endl;\par
5531     \}\par
5532 \}\par
}
}
{\xe \v CsvEscreveBarrasIntervalo\:FrameExportar}
{\xe \v FrameExportar\:CsvEscreveBarrasIntervalo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvEscreveBarrasIntervalo (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5241                                                                \{\par
5242     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
5243     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
5244     {\cf20 //Barras}\par
5245     *saida << {\cf22 "Barra"} ;\par
5246     {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
5247         *saida << {\cf22 ","}+QString::number(i+1);\par
5248     \} *saida << Qt::endl;\par
5249     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
5250         *saida << {\cf22 "Tensao na Barra[pu]"} ;\par
5251         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
5252             *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
5253         \} *saida << Qt::endl;\par
5254     \}\par
5255     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
5256         *saida << {\cf22 "Tensao Nominal[kV]"} ;\par
5257         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
5258             *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
5259         \} *saida << Qt::endl;\par
5260     \}\par
5261     {\cf19 if}(FiltrosBarra::thdv)\{\par
5262         *saida << {\cf22 "THDV[%]"} ;\par
5263         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
5264             *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
5265         \} *saida << Qt::endl;\par
5266     \}\par
5267     {\cf19 if}(FiltrosBarra::dit)\{\par
5268         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
5269             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[pu]"} ;\par
5270             {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
5271                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'f'},5);\par
5272             \} *saida << Qt::endl;\par
5273         \}\par
5274     \}\par
5275     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
5276         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
5277             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"} ;\par
5278             {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
5279                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
5280             \} *saida << Qt::endl;\par
5281         \}\par
5282     \}\par
5283     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
5284         *saida << {\cf22 "Tensao Eficaz[pu]"} ;\par
5285         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
5286             *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
5287         \} *saida << Qt::endl;\par
5288     \}\par
5289 \par
5290     {\cf19 for}({\cf18 int} i = 0 ; i < 4 ; i++)\{\par
5291         *saida << Qt::endl;\par
5292     \}\par
5293 \}\par
}
}
{\xe \v CsvEscreveLInterL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:CsvEscreveLInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvEscreveLInterL1InterL2 (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5534                                                                \{\par
5535     *saida << {\cf22 "Linha"} ;\par
5536     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5537         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5538         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5539         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5540             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5541                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5542                       {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5543                           *saida << {\cf22 ","}+QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino);\par
5544                       \}\par
5545                 \}\par
5546             \}\par
5547         \}\par
5548     \}\par
5549     *saida << Qt::endl;\par
5550     {\cf19 if}(FiltroLinha::correntePu)\{\par
5551         *saida << {\cf22 "Corrente[pu]"};\par
5552         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5553             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5554             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5555             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5556                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5557                       {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5558                           {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5559                               *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
5560                           \}\par
5561                       \}\par
5562                 \}\par
5563             \}\par
5564         \}\par
5565     \}\par
5566     *saida << Qt::endl;\par
5567     {\cf19 if}(FiltroLinha::dht)\{\par
5568         *saida << {\cf22 "DHT[%]"};\par
5569         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5570             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5571             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5572             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5573                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5574                       {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5575                           {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5576                               *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
5577                           \}\par
5578                       \}\par
5579                 \}\par
5580             \}\par
5581         \}\par
5582     \}\par
5583     *saida <<Qt::endl;\par
5584     {\cf19 if}(FiltroLinha::dit)\{\par
5585         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
5586             *saida << {\cf22 "DHT"}+QString::number(p);\par
5587             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5588                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5589                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5590                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5591                       {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5592                           {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5593                               {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5594                                   *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5);\par
5595                               \}\par
5596                           \}\par
5597                       \}\par
5598                 \}\par
5599             \}\par
5600             *saida <<Qt::endl;\par
5601         \}\par
5602     \}\par
5603     {\cf19 if}(FiltroLinha::ditPercent)\{\par
5604         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
5605             *saida << {\cf22 "DHT"}+QString::number(p)+{\cf22 "[%]"};\par
5606             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5607                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5608                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5609                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5610                       {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5611                           {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5612                               {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5613                                   *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5);\par
5614                               \}\par
5615                           \}\par
5616                       \}\par
5617                 \}\par
5618             \}\par
5619             *saida <<Qt::endl;\par
5620         \}\par
5621     \}\par
5622     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
5623         *saida << {\cf22 "Corrente Eficaz[pu]"};\par
5624         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5625             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5626             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5627             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5628                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5629                       {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5630                           {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5631                               *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
5632                           \}\par
5633                       \}\par
5634                 \}\par
5635             \}\par
5636         \}\par
5637     \}\par
5638     *saida << Qt::endl;\par
5639     {\cf19 if}(FiltroLinha::resistencia)\{\par
5640         *saida << {\cf22 "Resistencia[ohm]"};\par
5641         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5642             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5643             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5644             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5645                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5646                       {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5647                           {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5648                               *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
5649                           \}\par
5650                       \}\par
5651                 \}\par
5652             \}\par
5653         \}\par
5654     \}\par
5655     *saida << Qt::endl;\par
5656 \par
5657     {\cf19 if}(FiltroLinha::perdas)\{\par
5658         *saida << {\cf22 "Perdas[pu]"};\par
5659         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5660             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5661             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5662             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5663                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5664                       {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5665                           {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5666                               *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
5667                           \}\par
5668                       \}\par
5669                 \}\par
5670             \}\par
5671         \}\par
5672     \}\par
5673     *saida << Qt::endl;\par
5674 \par
5675     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
5676         *saida << {\cf22 "Perdas[pu]"};\par
5677         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5678             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5679             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5680             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5681                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5682                       {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5683                           {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5684                               *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
5685                           \}\par
5686                       \}\par
5687                 \}\par
5688             \}\par
5689         \}\par
5690     \}\par
5691     *saida << Qt::endl;\par
5692 \par
5693 \}\par
}
}
{\xe \v CsvEscreveLInterL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:CsvEscreveLInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvEscreveLInterL1TodL2 (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5695                                                              \{\par
5696     *saida << {\cf22 "Linha"} ;\par
5697     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5698         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5699         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5700         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5701             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5702                 *saida << {\cf22 ","}+QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino,{\cf23 'f'},5);\par
5703             \}\par
5704         \}\par
5705     \}\par
5706     *saida << Qt::endl;\par
5707     {\cf19 if}(FiltroLinha::correntePu)\{\par
5708         *saida << {\cf22 "Corrente[pu]"};\par
5709         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5710             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5711             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5712                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5713                       *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
5714                 \}\par
5715             \}\par
5716         \}\par
5717     \}\par
5718     *saida << Qt::endl;\par
5719     {\cf19 if}(FiltroLinha::dht)\{\par
5720         *saida << {\cf22 "DHT[%]"};\par
5721         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5722             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5723             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5724                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5725                       *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
5726                 \}\par
5727             \}\par
5728         \}\par
5729     \}\par
5730     *saida <<Qt::endl;\par
5731     {\cf19 if}(FiltroLinha::dit)\{\par
5732         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
5733             *saida << {\cf22 "DHT"}+QString::number(p);\par
5734             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5735                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5736                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5737                       {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5738                           *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5);\par
5739                       \}\par
5740                 \}\par
5741             \}\par
5742             *saida <<Qt::endl;\par
5743         \}\par
5744     \}\par
5745     {\cf19 if}(FiltroLinha::ditPercent)\{\par
5746         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
5747             *saida << {\cf22 "DHT"}+QString::number(p)+{\cf22 "[%]"};\par
5748             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5749                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5750                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5751                       {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5752                           *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5);\par
5753                       \}\par
5754                 \}\par
5755             \}\par
5756             *saida <<Qt::endl;\par
5757         \}\par
5758     \}\par
5759     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
5760         *saida << {\cf22 "Corrente Eficaz[pu]"};\par
5761         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5762             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5763             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5764                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5765                       *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
5766                 \}\par
5767             \}\par
5768         \}\par
5769     \}\par
5770     *saida << Qt::endl;\par
5771     {\cf19 if}(FiltroLinha::resistencia)\{\par
5772         *saida << {\cf22 "Resistencia[ohm]"};\par
5773         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5774             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5775             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5776                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5777                       *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
5778                 \}\par
5779             \}\par
5780         \}\par
5781     \}\par
5782     *saida << Qt::endl;\par
5783 \par
5784     {\cf19 if}(FiltroLinha::perdas)\{\par
5785         *saida << {\cf22 "Perdas[pu]"};\par
5786         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5787             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5788             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5789                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5790                       *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
5791                 \}\par
5792             \}\par
5793         \}\par
5794     \}\par
5795     *saida << Qt::endl;\par
5796 \par
5797     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
5798         *saida << {\cf22 "Perdas[pu]"};\par
5799         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5800             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5801             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
5802                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
5803                       *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
5804                 \}\par
5805             \}\par
5806         \}\par
5807     \}\par
5808     *saida << Qt::endl;\par
5809 \par
5810 \}\par
}
}
{\xe \v CsvEscreveLTodL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:CsvEscreveLTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvEscreveLTodL1InterL2 (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5812                                                              \{\par
5813     *saida << {\cf22 "Linha"} ;\par
5814     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5815         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5816         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5817         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5818             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5819                 *saida << {\cf22 ","}+QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino);\par
5820             \}\par
5821         \}\par
5822     \}\par
5823     *saida << Qt::endl;\par
5824     {\cf19 if}(FiltroLinha::correntePu)\{\par
5825         *saida << {\cf22 "Corrente[pu]"};\par
5826         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5827             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5828             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5829                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5830                       *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
5831                 \}\par
5832             \}\par
5833         \}\par
5834     \}\par
5835     *saida << Qt::endl;\par
5836     {\cf19 if}(FiltroLinha::dht)\{\par
5837         *saida << {\cf22 "DHT[%]"};\par
5838         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5839             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5840             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5841                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5842                       *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
5843                 \}\par
5844             \}\par
5845         \}\par
5846     \}\par
5847     *saida <<Qt::endl;\par
5848     {\cf19 if}(FiltroLinha::dit)\{\par
5849         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
5850             *saida << {\cf22 "DHT"}+QString::number(p);\par
5851             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5852                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5853                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5854                       {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5855                           *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5);\par
5856                       \}\par
5857                 \}\par
5858             \}\par
5859             *saida <<Qt::endl;\par
5860         \}\par
5861     \}\par
5862     {\cf19 if}(FiltroLinha::ditPercent)\{\par
5863         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
5864             *saida << {\cf22 "DHT"}+QString::number(p)+{\cf22 "[%]"};\par
5865             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5866                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5867                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5868                       {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5869                           *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5);\par
5870                       \}\par
5871                 \}\par
5872             \}\par
5873             *saida <<Qt::endl;\par
5874         \}\par
5875     \}\par
5876     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
5877         *saida << {\cf22 "Corrente Eficaz[pu]"};\par
5878         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5879             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5880             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5881                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5882                       *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
5883                 \}\par
5884             \}\par
5885         \}\par
5886     \}\par
5887     *saida << Qt::endl;\par
5888     {\cf19 if}(FiltroLinha::resistencia)\{\par
5889         *saida << {\cf22 "Resistencia[ohm]"};\par
5890         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5891             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5892             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5893                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5894                       *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
5895                 \}\par
5896             \}\par
5897         \}\par
5898     \}\par
5899     *saida << Qt::endl;\par
5900 \par
5901     {\cf19 if}(FiltroLinha::perdas)\{\par
5902         *saida << {\cf22 "Perdas[pu]"};\par
5903         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5904             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5905             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5906                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5907                       *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
5908                 \}\par
5909             \}\par
5910         \}\par
5911     \}\par
5912     *saida << Qt::endl;\par
5913 \par
5914     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
5915         *saida << {\cf22 "Perdas[pu]"};\par
5916         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5917             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5918             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
5919                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
5920                       *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
5921                 \}\par
5922             \}\par
5923         \}\par
5924     \}\par
5925     *saida << Qt::endl;\par
5926 \}\par
}
}
{\xe \v CsvEscreveLTodL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:CsvEscreveLTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvEscreveLTodL1TodL2 (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5928                                                            \{\par
5929     *saida << {\cf22 "Linha"} ;\par
5930     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5931         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5932         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5933         *saida << {\cf22 ","}+QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino);\par
5934     \}\par
5935     *saida << Qt::endl;\par
5936     {\cf19 if}(FiltroLinha::correntePu)\{\par
5937         *saida << {\cf22 "Corrente[pu]"};\par
5938         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5939             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
5940         \}\par
5941     \}\par
5942     *saida << Qt::endl;\par
5943     {\cf19 if}(FiltroLinha::dht)\{\par
5944         *saida << {\cf22 "DHT[%]"};\par
5945         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5946             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
5947         \}\par
5948     \}\par
5949     *saida <<Qt::endl;\par
5950     {\cf19 if}(FiltroLinha::dit)\{\par
5951         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
5952             *saida << {\cf22 "DHT"}+QString::number(p);\par
5953             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5954                 *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5);\par
5955             \}\par
5956             *saida <<Qt::endl;\par
5957         \}\par
5958     \}\par
5959     {\cf19 if}(FiltroLinha::ditPercent)\{\par
5960         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
5961             *saida << {\cf22 "DHT"}+QString::number(p)+{\cf22 "[%]"};\par
5962             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5963                 *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5);\par
5964             \}\par
5965             *saida <<Qt::endl;\par
5966         \}\par
5967     \}\par
5968     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
5969         *saida << {\cf22 "Corrente Eficaz[pu]"};\par
5970         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5971             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
5972         \}\par
5973     \}\par
5974     *saida << Qt::endl;\par
5975     {\cf19 if}(FiltroLinha::resistencia)\{\par
5976         *saida << {\cf22 "Resistencia[ohm]"};\par
5977         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5978             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
5979         \}\par
5980     \}\par
5981     *saida << Qt::endl;\par
5982 \par
5983     {\cf19 if}(FiltroLinha::perdas)\{\par
5984         *saida << {\cf22 "Perdas[pu]"};\par
5985         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5986             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
5987         \}\par
5988     \}\par
5989     *saida << Qt::endl;\par
5990 \par
5991     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
5992         *saida << {\cf22 "Perdas[pu]"};\par
5993         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5994             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
5995         \}\par
5996     \}\par
5997     *saida << Qt::endl;\par
5998 \}\par
}
}
{\xe \v CsvInfecBarrasInterL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:CsvInfecBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvInfecBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5181                                                 \{\par
5182     QFile *arquivoSaida = criaArquivo();\par
5183     QTextStream saida(arquivoSaida);\par
5184     CsvEscreveBarrasInfec(&saida);\par
5185     CsvEscreveLInterL1InterL2(&saida);\par
5186 \par
5187 \par
5188     arquivoSaida->flush();\par
5189     arquivoSaida->close();\par
5190 \}\par
}
}
{\xe \v CsvInfecBarrasInterL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:CsvInfecBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvInfecBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5191                                               \{\par
5192     QFile *arquivoSaida = criaArquivo();\par
5193     QTextStream saida(arquivoSaida);\par
5194     CsvEscreveBarrasInfec(&saida);\par
5195     CsvEscreveLInterL1TodL2(&saida);\par
5196 \par
5197 \par
5198     arquivoSaida->flush();\par
5199     arquivoSaida->close();\par
5200 \}\par
}
}
{\xe \v CsvInfecBarrasTodL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:CsvInfecBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvInfecBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5201                                               \{\par
5202     QFile *arquivoSaida = criaArquivo();\par
5203     QTextStream saida(arquivoSaida);\par
5204     CsvEscreveBarrasInfec(&saida);\par
5205     CsvEscreveLTodL1InterL2(&saida);\par
5206 \par
5207 \par
5208     arquivoSaida->flush();\par
5209     arquivoSaida->close();\par
5210 \}\par
}
}
{\xe \v CsvInfecBarrasTodL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:CsvInfecBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvInfecBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5211                                             \{\par
5212     QFile *arquivoSaida = criaArquivo();\par
5213     QTextStream saida(arquivoSaida);\par
5214     CsvEscreveBarrasInfec(&saida);\par
5215     CsvEscreveLTodL1TodL2(&saida);\par
5216 \par
5217 \par
5218     arquivoSaida->flush();\par
5219     arquivoSaida->close();\par
5220 \}\par
}
}
{\xe \v CsvInterBarrasInterL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:CsvInterBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvInterBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5095                                                 \{\par
5096 \par
5097         QFile *arquivoSaida = criaArquivo();\par
5098         QTextStream saida(arquivoSaida);\par
5099         CsvEscreveBarrasIntervalo(&saida);\par
5100         CsvEscreveLInterL1InterL2(&saida);\par
5101         {\cf20 //Linhas}\par
5102         arquivoSaida->flush();\par
5103         arquivoSaida->close();\par
5104 \}\par
}
}
{\xe \v CsvInterBarrasInterL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:CsvInterBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvInterBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5105                                               \{\par
5106         QFile *arquivoSaida = criaArquivo();\par
5107         QTextStream saida(arquivoSaida);\par
5108         CsvEscreveBarrasIntervalo(&saida);\par
5109         CsvEscreveLInterL1TodL2(&saida);\par
5110 \par
5111 \par
5112         arquivoSaida->flush();\par
5113         arquivoSaida->close();\par
5114 \}\par
}
}
{\xe \v CsvInterBarrasTodL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:CsvInterBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvInterBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5115                                               \{\par
5116         QFile *arquivoSaida = criaArquivo();\par
5117         QTextStream saida(arquivoSaida);\par
5118         CsvEscreveBarrasIntervalo(&saida);\par
5119         CsvEscreveLTodL1InterL2(&saida);\par
5120 \par
5121 \par
5122     arquivoSaida->flush();\par
5123     arquivoSaida->close();\par
5124 \par
5125 \par
5126 \}\par
}
}
{\xe \v CsvInterBarrasTodL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:CsvInterBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::CsvInterBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5127                                             \{\par
5128 \par
5129     QFile *arquivoSaida = criaArquivo();\par
5130     QTextStream saida(arquivoSaida);\par
5131     CsvEscreveBarrasIntervalo(&saida);\par
5132     CsvEscreveLTodL1TodL2(&saida);\par
5133 \par
5134 \par
5135     arquivoSaida->flush();\par
5136     arquivoSaida->close();\par
5137 \par
5138 \}\par
}
}
{\xe \v ExcelCompBarrasaTodL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelCompBarrasaTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelCompBarrasaTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4161                                               \{\par
4162     QXlsx::Document* planilha = criaPlanilha();\par
4163     {\cf18 int}* linha = {\cf17 new} int;\par
4164     ExcelEscreveBarrasComp(planilha, linha);\par
4165     ExcelPulaLinha(linha);\par
4166     ExcelEscreveLTodL1TodL2(planilha, linha);\par
4167     salvaPlanilha(planilha);\par
4168     {\cf17 delete} planilha;\par
4169     {\cf17 delete} linha;\par
4170 \}\par
}
}
{\xe \v ExcelCompBarrasInterL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelCompBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelCompBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4141                                                \{\par
4142     QXlsx::Document* planilha = criaPlanilha();\par
4143     {\cf18 int}* linha = {\cf17 new} int;\par
4144     ExcelEscreveBarrasComp(planilha, linha);\par
4145     ExcelPulaLinha(linha);\par
4146     ExcelEscreveLInterL1TodL2(planilha, linha);\par
4147     salvaPlanilha(planilha);\par
4148     {\cf17 delete} planilha;\par
4149     {\cf17 delete} linha;\par
4150 \}\par
}
}
{\xe \v ExcelCompBarrasInterL2InterL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelCompBarrasInterL2InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelCompBarrasInterL2InterL2 ()}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4131                                                  \{\par
4132     QXlsx::Document* planilha = criaPlanilha();\par
4133     {\cf18 int}* linha = {\cf17 new} int;\par
4134     ExcelEscreveBarrasComp(planilha, linha);\par
4135     ExcelPulaLinha(linha);\par
4136     ExcelEscreveLInterL1InterL2(planilha, linha);\par
4137     salvaPlanilha(planilha);\par
4138     {\cf17 delete} planilha;\par
4139     {\cf17 delete} linha;\par
4140 \}\par
}
}
{\xe \v ExcelCompBarrasTodL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelCompBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelCompBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4151                                                \{\par
4152     QXlsx::Document* planilha = criaPlanilha();\par
4153     {\cf18 int}* linha = {\cf17 new} int;\par
4154     ExcelEscreveBarrasComp(planilha, linha);\par
4155     ExcelPulaLinha(linha);\par
4156     ExcelEscreveLTodL1InterL2(planilha, linha);\par
4157     salvaPlanilha(planilha);\par
4158     {\cf17 delete} planilha;\par
4159     {\cf17 delete} linha;\par
4160 \}\par
}
}
{\xe \v ExcelEscreveBarrasComp\:FrameExportar}
{\xe \v FrameExportar\:ExcelEscreveBarrasComp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelEscreveBarrasComp (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4301                                                                           \{\par
4302 \par
4303     saida->write({\cf22 "A1"},{\cf22 "Barra"});\par
4304         {\cf18 int} pos = 1;\par
4305     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
4306         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
4307             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
4308                     saida->write(QString(numeroParaLetra(pos+1))+{\cf22 "1"},QString::number(i+1));\par
4309                     pos++;\par
4310                     {\cf19 break};\par
4311             \}\par
4312         \}\par
4313     \}\par
4314     *linha = 2;\par
4315     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
4316         pos = 1 ;\par
4317         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o na Barra[pu]"});\par
4318         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
4319             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
4320                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
4321                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5));\par
4322                     pos++;\par
4323                     {\cf19 break};\par
4324                 \}\par
4325             \}\par
4326         \}\par
4327         (*linha)++;\par
4328     \}\par
4329     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
4330         pos = 1 ;\par
4331         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o Nominal[kV]"});\par
4332         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
4333             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
4334                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
4335                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5));\par
4336                     pos++;\par
4337                     {\cf19 break};\par
4338                 \}\par
4339             \}\par
4340         \}\par
4341         (*linha)++;\par
4342     \}\par
4343     {\cf19 if}(FiltrosBarra::thdv)\{\par
4344         pos = 1 ;\par
4345         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "THDV[%]"});\par
4346         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
4347             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
4348                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
4349                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5));\par
4350                     pos++;\par
4351                     {\cf19 break};\par
4352                 \}\par
4353             \}\par
4354         \}\par
4355         (*linha)++;\par
4356     \}\par
4357     {\cf19 if}(FiltrosBarra::dit)\{\par
4358         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
4359             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j));\par
4360             pos = 1;\par
4361             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
4362                 {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
4363                     {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
4364                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'f'},5));\par
4365                         pos++;\par
4366                         {\cf19 break};\par
4367                     \}\par
4368                 \}\par
4369             \}\par
4370             (*linha)++;\par
4371         \}\par
4372     \}\par
4373     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
4374         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
4375             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"});\par
4376             pos = 1;\par
4377             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
4378                 {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
4379                     {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
4380                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5));\par
4381                         pos++;\par
4382                         {\cf19 break};\par
4383                     \}\par
4384                 \}\par
4385             \}\par
4386             (*linha)++;\par
4387         \}\par
4388     \}\par
4389     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
4390         pos = 1 ;\par
4391         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tensao Eficaz[pu]"});\par
4392         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
4393             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
4394                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
4395                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5));\par
4396                     pos++;\par
4397                     {\cf19 break};\par
4398                 \}\par
4399             \}\par
4400         \}\par
4401         (*linha)++;\par
4402     \}\par
4403 \par
4404 \}\par
}
}
{\xe \v ExcelEscreveBarrasInfec\:FrameExportar}
{\xe \v FrameExportar\:ExcelEscreveBarrasInfec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelEscreveBarrasInfec (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4406                                                                            \{\par
4407     saida->write({\cf22 "A1"},{\cf22 "Barra"});\par
4408     {\cf18 int} pos = 1 ;\par
4409     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
4410         {\cf18 bool} infectada = {\cf17 false};\par
4411         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
4412             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
4413                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
4414                     infectada = {\cf17 true};\par
4415                     {\cf19 break};\par
4416                 \}\par
4417             \}\par
4418         \}{\cf19 else}\{\par
4419             infectada = {\cf17 true};\par
4420         \}\par
4421         {\cf19 if}(infectada)\{\par
4422             saida->write(QString(numeroParaLetra(pos+1))+{\cf22 "1"},QString::number(i+1));\par
4423             pos++;\par
4424         \}\par
4425     \}\par
4426     *linha = 2;\par
4427     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
4428         pos = 1 ;\par
4429         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o na Barra[pu]"});\par
4430         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
4431             {\cf18 bool} infectada = {\cf17 false};\par
4432             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
4433                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
4434                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
4435                         infectada = {\cf17 true};\par
4436                         {\cf19 break};\par
4437                     \}\par
4438                 \}\par
4439             \}{\cf19 else}\{\par
4440                 infectada = {\cf17 true};\par
4441             \}\par
4442             {\cf19 if}(infectada)\{\par
4443                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5));\par
4444                 pos++;\par
4445             \}\par
4446         \}\par
4447         (*linha)++;\par
4448     \}\par
4449     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
4450         pos = 1 ;\par
4451         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o Nominal[kV]"});\par
4452             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
4453             {\cf18 bool} infectada = {\cf17 false};\par
4454             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
4455                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
4456                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
4457                         infectada = {\cf17 true};\par
4458                         {\cf19 break};\par
4459                     \}\par
4460                 \}\par
4461             \}{\cf19 else}\{\par
4462                 infectada = {\cf17 true};\par
4463             \}\par
4464             {\cf19 if}(infectada)\{\par
4465                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5));\par
4466                 pos++;\par
4467             \}\par
4468         \}\par
4469         (*linha)++;\par
4470     \}\par
4471     {\cf19 if}(FiltrosBarra::thdv)\{\par
4472         pos = 1 ;\par
4473         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "THDV[%]"});\par
4474         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
4475             {\cf18 bool} infectada = {\cf17 false};\par
4476             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
4477                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
4478                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
4479                         infectada = {\cf17 true};\par
4480                         {\cf19 break};\par
4481                     \}\par
4482                 \}\par
4483             \}{\cf19 else}\{\par
4484                 infectada = {\cf17 true};\par
4485             \}\par
4486             {\cf19 if}(infectada)\{\par
4487                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5));\par
4488                 pos++;\par
4489             \}\par
4490         \}\par
4491         (*linha)++;\par
4492     \}\par
4493     {\cf19 if}(FiltrosBarra::dit)\{\par
4494         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
4495             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j));\par
4496             pos = 1;\par
4497             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
4498                 {\cf18 bool} infectada = {\cf17 false};\par
4499                 {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
4500                     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
4501                         {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
4502                             infectada = {\cf17 true};\par
4503                             {\cf19 break};\par
4504                         \}\par
4505                     \}\par
4506                 \}{\cf19 else}\{\par
4507                     infectada = {\cf17 true};\par
4508                 \}\par
4509                 {\cf19 if}(infectada)\{\par
4510                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'f'},5));\par
4511                     pos++;\par
4512                 \}\par
4513             \}\par
4514             (*linha)++;\par
4515         \}\par
4516     \}\par
4517     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
4518         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
4519             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"});\par
4520             pos = 1;\par
4521             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
4522                 {\cf18 bool} infectada = {\cf17 false};\par
4523                 {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
4524                     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
4525                         {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
4526                             infectada = {\cf17 true};\par
4527                             {\cf19 break};\par
4528                         \}\par
4529                     \}\par
4530                 \}{\cf19 else}\{\par
4531                     infectada = {\cf17 true};\par
4532                 \}\par
4533                 {\cf19 if}(infectada)\{\par
4534                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5));\par
4535                     pos++;\par
4536                 \}\par
4537             \}\par
4538             (*linha)++;\par
4539         \}\par
4540     \}\par
4541     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
4542         pos = 1 ;\par
4543         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tensao Eficaz[pu]"});\par
4544         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
4545             {\cf18 bool} infectada = {\cf17 false};\par
4546             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
4547                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
4548                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
4549                         infectada = {\cf17 true};\par
4550                         {\cf19 break};\par
4551                     \}\par
4552                 \}\par
4553             \}{\cf19 else}\{\par
4554                 infectada = {\cf17 true};\par
4555             \}\par
4556             {\cf19 if}(infectada)\{\par
4557                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5));\par
4558                 pos++;\par
4559             \}\par
4560         \}\par
4561         (*linha)++;\par
4562     \}\par
4563 \}\par
}
}
{\xe \v ExcelEscreveBarrasIntervalo\:FrameExportar}
{\xe \v FrameExportar\:ExcelEscreveBarrasIntervalo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelEscreveBarrasIntervalo (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4231                                                                                 \{\par
4232         {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
4233         {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
4234         {\cf20 //Barras}\par
4235         saida->write({\cf22 "A1"},{\cf22 "Barra"});\par
4236         {\cf19 for}({\cf18 int} i= inicio , pos = 1 ; i <= fim ; i++, pos++)\{\par
4237             saida->write(QString(numeroParaLetra(pos+1))+{\cf22 "1"},QString::number(i+1));\par
4238         \}\par
4239         *linha = 2;\par
4240         {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
4241             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o na Barra[pu]"});\par
4242             {\cf18 int} pos =1 ;\par
4243             {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
4244                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5));\par
4245                     pos++;\par
4246             \}\par
4247             (*linha)++;\par
4248         \}\par
4249         {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
4250             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o Nominal[kV]"});\par
4251                 {\cf18 int} pos =1 ;\par
4252             {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
4253                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5));\par
4254                 pos++;\par
4255             \}\par
4256             (*linha)++;\par
4257         \}\par
4258         {\cf19 if}(FiltrosBarra::thdv)\{\par
4259             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "THDV[%]"});\par
4260                 {\cf18 int} pos =1 ;\par
4261             {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
4262                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5));\par
4263                 pos++;\par
4264             \}\par
4265             (*linha)++;\par
4266         \}\par
4267         {\cf19 if}(FiltrosBarra::dit)\{\par
4268             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
4269                 saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j));\par
4270                 {\cf18 int} pos =1 ;\par
4271                 {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
4272                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'f'},5));\par
4273                     pos++;\par
4274                 \}\par
4275                 (*linha)++;\par
4276             \}\par
4277         \}\par
4278         {\cf19 if}(FiltrosBarra::ditPercent)\{\par
4279             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
4280                 saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"});\par
4281                 {\cf18 int} pos =1 ;\par
4282                 {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
4283                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5));\par
4284                     pos++;\par
4285                 \}\par
4286                 (*linha)++;\par
4287             \}\par
4288         \}\par
4289         {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
4290             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tensao Eficaz[pu]"});\par
4291             {\cf18 int} pos =1 ;\par
4292             {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
4293                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5));\par
4294                 pos++;\par
4295             \}\par
4296             (*linha)++;\par
4297         \}\par
4298 \par
4299 \}\par
}
}
{\xe \v ExcelEscreveLInterL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelEscreveLInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelEscreveLInterL1InterL2 (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4565                                                                                \{\par
4566     saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Linha"});\par
4567     {\cf18 int} pos =1;\par
4568     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4569         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4570         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4571         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4572             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4573                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4574                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4575                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino));\par
4576                         pos++;\par
4577                     \}\par
4578                 \}\par
4579             \}\par
4580         \}\par
4581     \}\par
4582     (*linha)++;\par
4583     {\cf19 if}(FiltroLinha::correntePu)\{\par
4584         pos =1 ;\par
4585         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente[pu]"});\par
4586         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4587             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4588             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4589             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4590                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4591                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4592                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4593                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrente()));\par
4594                             pos++;\par
4595                         \}\par
4596                     \}\par
4597                 \}\par
4598             \}\par
4599         \}\par
4600         (*linha)++;\par
4601     \}\par
4602     {\cf19 if}(FiltroLinha::dht)\{\par
4603         pos =1 ;\par
4604         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "DHT[%]"});\par
4605         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4606             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4607             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4608             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4609                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4610                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4611                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4612                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDhtPercent()));\par
4613                             pos++;\par
4614                         \}\par
4615                     \}\par
4616                 \}\par
4617             \}\par
4618         \}\par
4619         (*linha)++;\par
4620     \}\par
4621     {\cf19 if}(FiltroLinha::dit)\{\par
4622         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
4623             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p));\par
4624             pos =1 ;\par
4625             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4626                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4627                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4628                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4629                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4630                         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4631                             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4632                                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5));\par
4633                                 pos++;\par
4634                             \}\par
4635                         \}\par
4636                     \}\par
4637                 \}\par
4638             \}\par
4639             (*linha)++;\par
4640         \}\par
4641     \}\par
4642     {\cf19 if}(FiltroLinha::ditPercent)\{\par
4643         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
4644             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p)+{\cf22 "[%]"});\par
4645             pos =1 ;\par
4646             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4647                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4648                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4649                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4650                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4651                         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4652                             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4653                                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5));\par
4654                                 pos++;\par
4655                             \}\par
4656                         \}\par
4657                     \}\par
4658                 \}\par
4659             \}\par
4660             (*linha)++;\par
4661         \}\par
4662     \}\par
4663     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
4664         pos =1 ;\par
4665         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente Eficaz[pu]"});\par
4666         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4667             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4668             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4669             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4670                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4671                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4672                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4673                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrenteEficaz()));\par
4674                             pos++;\par
4675                         \}\par
4676                     \}\par
4677                 \}\par
4678             \}\par
4679         \}\par
4680         (*linha)++;\par
4681     \}\par
4682     {\cf19 if}(FiltroLinha::resistencia)\{\par
4683         pos =1 ;\par
4684         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Resistencia[ohm]"});\par
4685         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4686             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4687             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4688             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4689                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4690                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4691                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4692                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getResistencia()));\par
4693                             pos++;\par
4694                         \}\par
4695                     \}\par
4696                 \}\par
4697             \}\par
4698         \}\par
4699         (*linha)++;\par
4700     \}\par
4701     {\cf19 if}(FiltroLinha::perdas)\{\par
4702         pos =1 ;\par
4703         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas[pu]"});\par
4704         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4705             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4706             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4707             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4708                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4709                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4710                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4711                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdas()));\par
4712                             pos++;\par
4713                         \}\par
4714                     \}\par
4715                 \}\par
4716             \}\par
4717         \}\par
4718         (*linha)++;\par
4719     \}\par
4720     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
4721         pos =1 ;\par
4722         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas Eficaz[pu]"});\par
4723         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4724             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4725             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4726             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4727                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4728                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4729                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4730                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdasEficaz()));\par
4731                             pos++;\par
4732                         \}\par
4733                     \}\par
4734                 \}\par
4735             \}\par
4736         \}\par
4737         (*linha)++;\par
4738     \}\par
4739 \par
4740 \}\par
}
}
{\xe \v ExcelEscreveLInterL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelEscreveLInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelEscreveLInterL1TodL2 (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4742                                                                              \{\par
4743     saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Linha"});\par
4744     {\cf18 int} pos = 1;\par
4745     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4746         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4747         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4748         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4749             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4750                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino));\par
4751                 pos++;\par
4752             \}\par
4753         \}\par
4754     \}\par
4755     (*linha)++;\par
4756     {\cf19 if}(FiltroLinha::correntePu)\{\par
4757         pos = 1;\par
4758         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente[pu]"});\par
4759         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4760             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4761             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4762                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4763                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrente()));\par
4764                     pos++;\par
4765                 \}\par
4766             \}\par
4767         \}\par
4768         (*linha)++;\par
4769     \}\par
4770     {\cf19 if}(FiltroLinha::dht)\{\par
4771         pos = 1;\par
4772         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "DHT[%]"});\par
4773         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4774             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4775             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4776                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4777                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDhtPercent()));\par
4778                     pos++;\par
4779                 \}\par
4780             \}\par
4781         \}\par
4782         (*linha)++;\par
4783     \}\par
4784     {\cf19 if}(FiltroLinha::dit)\{\par
4785         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
4786             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p));\par
4787             pos =1 ;\par
4788             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4789                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4790                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4791                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4792                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5));\par
4793                         pos++;\par
4794                     \}\par
4795                 \}\par
4796             \}\par
4797             (*linha)++;\par
4798         \}\par
4799     \}\par
4800     {\cf19 if}(FiltroLinha::ditPercent)\{\par
4801         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
4802             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p)+{\cf22 "[%]"});\par
4803             pos =1 ;\par
4804             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4805                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4806                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4807                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4808                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5));\par
4809                         pos++;\par
4810                     \}\par
4811                 \}\par
4812             \}\par
4813             (*linha)++;\par
4814         \}\par
4815     \}\par
4816     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
4817         pos = 1;\par
4818         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente Eficaz[pu]"});\par
4819         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4820             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4821             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4822                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4823                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrenteEficaz()));\par
4824                     pos++;\par
4825                 \}\par
4826             \}\par
4827         \}\par
4828         (*linha)++;\par
4829     \}\par
4830     {\cf19 if}(FiltroLinha::resistencia)\{\par
4831         pos = 1;\par
4832         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Resistencia[ohm]"});\par
4833         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4834             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4835             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4836                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4837                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getResistencia()));\par
4838                     pos++;\par
4839                 \}\par
4840             \}\par
4841         \}\par
4842         (*linha)++;\par
4843     \}\par
4844     {\cf19 if}(FiltroLinha::perdas)\{\par
4845         pos = 1;\par
4846         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas[pu]"});\par
4847         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4848             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4849             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4850                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4851                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdas()));\par
4852                     pos++;\par
4853                 \}\par
4854             \}\par
4855         \}\par
4856         (*linha)++;\par
4857     \}\par
4858     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
4859         pos = 1;\par
4860         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas Eficaz[pu]"});\par
4861         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4862             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4863             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
4864                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
4865                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdasEficaz()));\par
4866                     pos++;\par
4867                 \}\par
4868             \}\par
4869         \}\par
4870         (*linha)++;\par
4871     \}\par
4872 \}\par
}
}
{\xe \v ExcelEscreveLTodL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelEscreveLTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelEscreveLTodL1InterL2 (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4874                                                                              \{\par
4875     saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Linha"});\par
4876     {\cf18 int} pos = 1;\par
4877     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4878         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
4879         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4880         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4881             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4882                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino));\par
4883                 pos++;\par
4884             \}\par
4885         \}\par
4886     \}\par
4887     (*linha)++;\par
4888     {\cf19 if}(FiltroLinha::correntePu)\{\par
4889         pos = 1 ;\par
4890         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente[pu]"});\par
4891         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4892             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4893             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4894                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4895                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrente()));\par
4896                     pos++;\par
4897                 \}\par
4898             \}\par
4899         \}\par
4900         (*linha)++;\par
4901     \}\par
4902     {\cf19 if}(FiltroLinha::dht)\{\par
4903         pos =1 ;\par
4904         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "DHT[%]"});\par
4905         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4906             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4907             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4908                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4909                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDhtPercent()));\par
4910                     pos++;\par
4911                 \}\par
4912             \}\par
4913         \}\par
4914         (*linha)++;\par
4915     \}\par
4916     {\cf19 if}(FiltroLinha::dit)\{\par
4917         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
4918             pos =1 ;\par
4919             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p));\par
4920             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4921                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4922                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4923                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4924                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5));\par
4925                         pos++;                    \}\par
4926                 \}\par
4927             \}\par
4928             (*linha)++;\par
4929         \}\par
4930     \}\par
4931     {\cf19 if}(FiltroLinha::ditPercent)\{\par
4932         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
4933             pos =1 ;\par
4934             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p)+{\cf22 "[%]"});\par
4935             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4936                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4937                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4938                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4939                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5));\par
4940                         pos++;\par
4941                     \}\par
4942                 \}\par
4943             \}\par
4944             (*linha)++;\par
4945         \}\par
4946     \}\par
4947     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
4948         pos = 1;\par
4949         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente Eficaz[pu]"});\par
4950         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4951             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4952             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4953                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4954                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrenteEficaz()));\par
4955                     pos++;\par
4956                 \}\par
4957             \}\par
4958         \}\par
4959         (*linha)++;\par
4960     \}\par
4961     {\cf19 if}(FiltroLinha::resistencia)\{\par
4962         pos = 1;\par
4963         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Resistencia[ohm]"});\par
4964         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4965             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4966             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4967                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4968                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getResistencia()));\par
4969                     pos++;\par
4970                 \}\par
4971             \}\par
4972         \}\par
4973         (*linha)++;\par
4974     \}\par
4975     {\cf19 if}(FiltroLinha::perdas)\{\par
4976         pos = 1;\par
4977         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas[pu]"});\par
4978         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4979             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4980             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4981                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4982                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdas()));\par
4983                     pos++;\par
4984                 \}\par
4985             \}\par
4986         \}\par
4987         (*linha)++;\par
4988     \}\par
4989     {\cf19 if}(FiltroLinha::perdas)\{\par
4990         pos = 1;\par
4991         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas Eficaz[pu]"});\par
4992         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
4993             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
4994             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
4995                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
4996                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdasEficaz()));\par
4997                     pos++;\par
4998                 \}\par
4999             \}\par
5000         \}\par
5001         (*linha)++;\par
5002     \}\par
5003 \}\par
}
}
{\xe \v ExcelEscreveLTodL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelEscreveLTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelEscreveLTodL1TodL2 (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5005                                                                            \{\par
5006     saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Linha"});\par
5007     {\cf18 int} pos = 1;\par
5008     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5009         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
5010         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
5011         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino));\par
5012         pos++;\par
5013     \}\par
5014     (*linha)++;\par
5015     {\cf19 if}(FiltroLinha::correntePu)\{\par
5016         pos = 1;\par
5017         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente[pu]"});\par
5018         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5019             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrente()));\par
5020             pos++;\par
5021         \}\par
5022         (*linha)++;\par
5023     \}\par
5024     {\cf19 if}(FiltroLinha::dht)\{\par
5025         pos = 1;\par
5026         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "DHT[%]"});\par
5027         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5028             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDhtPercent()));\par
5029             pos++;\par
5030         \}\par
5031         (*linha)++;\par
5032     \}\par
5033     {\cf19 if}(FiltroLinha::dit)\{\par
5034         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
5035             pos = 1 ;\par
5036             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p));\par
5037             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5038                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first));\par
5039                 pos++;\par
5040             \}\par
5041             (*linha)++;\par
5042         \}\par
5043     \}\par
5044     {\cf19 if}(FiltroLinha::ditPercent)\{\par
5045         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
5046             pos = 1 ;\par
5047             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p)+{\cf22 "[%]"});\par
5048             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5049                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second));\par
5050                 pos++;\par
5051             \}\par
5052             (*linha)++;\par
5053         \}\par
5054     \}\par
5055     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
5056         pos = 1;\par
5057         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente Eficaz[pu]"});\par
5058         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5059             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrenteEficaz()));\par
5060             pos++;\par
5061         \}\par
5062         (*linha)++;\par
5063     \}\par
5064     {\cf19 if}(FiltroLinha::resistencia)\{\par
5065         pos = 1;\par
5066         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Resistencia[ohm]"});\par
5067         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5068             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getResistencia()));\par
5069             pos++;\par
5070         \}\par
5071         (*linha)++;\par
5072     \}\par
5073     {\cf19 if}(FiltroLinha::perdas)\{\par
5074         pos = 1;\par
5075         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas[pu]"});\par
5076         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5077             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdas()));\par
5078             pos++;\par
5079         \}\par
5080         (*linha)++;\par
5081     \}\par
5082     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
5083         pos = 1;\par
5084         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas Eficaz[pu]"});\par
5085         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
5086             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdasEficaz()));\par
5087             pos++;\par
5088         \}\par
5089         (*linha)++;\par
5090     \}\par
5091 \}\par
}
}
{\xe \v ExcelInfecBarrasInterL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelInfecBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelInfecBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4172                                                   \{\par
4173     QXlsx::Document* planilha = criaPlanilha();\par
4174     {\cf18 int}* linha = {\cf17 new} int;\par
4175     ExcelEscreveBarrasInfec(planilha, linha);\par
4176     ExcelPulaLinha(linha);\par
4177     ExcelEscreveLInterL1InterL2(planilha, linha);\par
4178     salvaPlanilha(planilha);\par
4179     {\cf17 delete} planilha;\par
4180     {\cf17 delete} linha;\par
4181 \}\par
}
}
{\xe \v ExcelInfecBarrasInterL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelInfecBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelInfecBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4182                                                 \{\par
4183     QXlsx::Document* planilha = criaPlanilha();\par
4184     {\cf18 int}* linha = {\cf17 new} int;\par
4185     ExcelEscreveBarrasInfec(planilha, linha);\par
4186     ExcelPulaLinha(linha);\par
4187     ExcelEscreveLInterL1TodL2(planilha, linha);\par
4188     salvaPlanilha(planilha);\par
4189     {\cf17 delete} planilha;\par
4190     {\cf17 delete} linha;\par
4191 \}\par
}
}
{\xe \v ExcelInfecBarrasTodL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelInfecBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelInfecBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4192                                                 \{\par
4193     QXlsx::Document* planilha = criaPlanilha();\par
4194     {\cf18 int}* linha = {\cf17 new} int;\par
4195     ExcelEscreveBarrasInfec(planilha, linha);\par
4196     ExcelPulaLinha(linha);\par
4197     ExcelEscreveLTodL1InterL2(planilha, linha);\par
4198     salvaPlanilha(planilha);\par
4199     {\cf17 delete} planilha;\par
4200     {\cf17 delete} linha;\par
4201 \}\par
}
}
{\xe \v ExcelInfecBarrasTodL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelInfecBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelInfecBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4202                                               \{\par
4203     QXlsx::Document* planilha = criaPlanilha();\par
4204     {\cf18 int}* linha = {\cf17 new} int;\par
4205     ExcelEscreveBarrasInfec(planilha, linha);\par
4206     ExcelPulaLinha(linha);\par
4207     ExcelEscreveLTodL1TodL2(planilha, linha);\par
4208     salvaPlanilha(planilha);\par
4209     {\cf17 delete} planilha;\par
4210     {\cf17 delete} linha;\par
4211 \}\par
}
}
{\xe \v ExcelInterBarrasTodL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelInterBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelInterBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4110                                                 \{\par
4111     QXlsx::Document* planilha = criaPlanilha();\par
4112     {\cf18 int}* linha = {\cf17 new} int;\par
4113     ExcelEscreveBarrasIntervalo(planilha ,linha);\par
4114     ExcelPulaLinha(linha);\par
4115     ExcelEscreveLTodL1InterL2(planilha , linha);\par
4116     salvaPlanilha(planilha);\par
4117     {\cf17 delete} planilha;\par
4118     {\cf17 delete} linha;\par
4119 \}\par
}
}
{\xe \v ExcelInterBarrasTodL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelInterBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelInterBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4120                                               \{\par
4121     QXlsx::Document* planilha = criaPlanilha();\par
4122     {\cf18 int}* linha = {\cf17 new} int;\par
4123     ExcelEscreveBarrasIntervalo(planilha, linha);\par
4124     ExcelPulaLinha(linha);\par
4125     ExcelEscreveLTodL1TodL2(planilha, linha);\par
4126     salvaPlanilha(planilha);\par
4127     {\cf17 delete} planilha;\par
4128     {\cf17 delete} linha;\par
4129 \}\par
}
}
{\xe \v ExcelInterBInterL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelInterBInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelInterBInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4090                                              \{\par
4091     QXlsx::Document* planilha = criaPlanilha();\par
4092     {\cf18 int}* linha = {\cf17 new} int;\par
4093     ExcelEscreveBarrasIntervalo(planilha , linha);\par
4094     ExcelPulaLinha(linha);\par
4095     ExcelEscreveLInterL1InterL2(planilha , linha);\par
4096     salvaPlanilha(planilha);\par
4097     {\cf17 delete} planilha;\par
4098     {\cf17 delete} linha;\par
4099 \}\par
}
}
{\xe \v ExcelInterBInterL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:ExcelInterBInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelInterBInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4100                                            \{\par
4101     QXlsx::Document* planilha = criaPlanilha();\par
4102     {\cf18 int}* linha = {\cf17 new} int;\par
4103     ExcelEscreveBarrasIntervalo(planilha , linha);\par
4104     ExcelPulaLinha(linha);\par
4105     ExcelEscreveLInterL1TodL2(planilha , linha);\par
4106     salvaPlanilha(planilha);\par
4107     {\cf17 delete} planilha;\par
4108     {\cf17 delete} linha;\par
4109 \}\par
}
}
{\xe \v ExcelPulaLinha\:FrameExportar}
{\xe \v FrameExportar\:ExcelPulaLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExcelPulaLinha (int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4219                                             \{\par
4220         {\cf19 for}({\cf18 int} i = 0 ; i < 4 ; i++)\{\par
4221         (*linha)++;\par
4222         \}\par
4223 \}\par
}
}
{\xe \v imprimirPdfBarrasInfectadas\:FrameExportar}
{\xe \v FrameExportar\:imprimirPdfBarrasInfectadas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::imprimirPdfBarrasInfectadas ()}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 342                                                \{\par
343     QString nome = QDir::currentPath()+{\cf22 "/arquivo.pdf"};\par
344     QPrinter printer;\par
345     printer.setOutputFormat(QPrinter::PdfFormat);\par
346     printer.setOutputFileName(nome);\par
347     QPainter painter;\par
348     {\cf19 if}(!painter.begin(&printer))\{\par
349         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Arquivo n\'E3o p\'F4de ser criado "}); {\cf20 //caso tenha selecionado e n\'E3o tenha conseguido abrir \'E9 enviado uma messagem de erro}\par
350         {\cf19 return};\par
351     \}\par
352     {\cf18 int} linha = 25;\par
353     {\cf18 int} coluna = 25;\par
354     {\cf18 bool} infectada;\par
355     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
356         infectada = {\cf17 false};\par
357         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
358             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
359                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
360                         infectada = {\cf17 true};\par
361                         {\cf19 break};\par
362                 \}\par
363             \}\par
364         \}{\cf19 else}\{\par
365             infectada = {\cf17 true};\par
366         \}\par
367         {\cf19 if}(infectada)\{\par
368             painter.drawText(coluna,linha,{\cf22 "Barra "}+QString::number(i+1));\par
369             linha +=20;\par
370             {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
371                 painter.drawText(coluna+40,linha,{\cf22 "Tens\'E3o na Barra [pu] : "}+QString::number(FrameBarras::barras[i].getTensaoPu()));\par
372                 linha +=20;\par
373             \}\par
374             {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
375                 painter.drawText(coluna+40,linha,{\cf22 "Tens\'E3o Nominal [kV] : "}+QString::number(FrameBarras::barras[i].getTensaoNominalKv()));\par
376                 linha +=20;\par
377             \}\par
378             {\cf19 if}(FiltrosBarra::thdv)\{\par
379                 painter.drawText(coluna+40,linha,{\cf22 "THDV[%] : "}+QString::number(FrameBarras::barras[i].getThdvPercent()));\par
380                 linha +=20;\par
381             \}\par
382             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
383                 {\cf19 if}(FiltrosBarra::dit)\{\par
384                     painter.drawText(coluna+40,linha,{\cf22 "DIT"}+QString::number(j)+{\cf22 " : "}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first));\par
385                     linha +=20;\par
386                 \}\par
387             \}\par
388             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
389                 {\cf19 if}(FiltrosBarra::ditPercent)\{\par
390                     painter.drawText(coluna+40,linha,{\cf22 "DIT"}+QString::number(j)+{\cf22 "[%] : "}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second));\par
391                     linha +=20;\par
392                 \}\par
393             \}\par
394             {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
395                 painter.drawText(coluna+40,linha,{\cf22 "Tensao Eficaz : "}+QString::number(FrameBarras::barras[i].getTensaoEficaz()));\par
396             \}\par
397             linha+=20;\par
398             painter.drawText(coluna+40,linha,{\cf22 "Observa\'E7\'F5es : "});\par
399             linha+=20;\par
400             {\cf19 if}(FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
401                 {\cf19 if}(FrameBarras::barras[i].getTensaoNominalKv() < 2.3)\{\par
402                     painter.drawText(coluna+120,linha,{\cf22 "THDV[%] acima do limite regulamentado pelo Prodist , limite m\'E1ximo de 10% para este n\'EDvel de tens\'E3o "});\par
403                     linha+=20;\par
404                 \}{\cf19 else} {\cf19 if}(FrameBarras::barras[i].getTensaoNominalKv() >= 2.3 && FrameBarras::barras[i].getTensaoNominalKv() < 69)\{\par
405                     painter.drawText(coluna+120,linha,{\cf22 "THDV[%] acima do limite regulamentado pelo Prodist , limite m\'E1ximo de 8% para este n\'EDvel de tens\'E3o "});\par
406                     linha+=20;\par
407                 \}{\cf19 else}\{\par
408                     painter.drawText(coluna+120,linha,{\cf22 "THDV[%] acima do limite regulamentado pelo Prodist , limite m\'E1ximo de 5% para este n\'EDvel de tens\'E3o "});\par
409                     linha+=20;                    \}\par
410             \}{\cf19 else}\{\par
411                 painter.drawText(coluna+120,linha,{\cf22 "THDV[%] dentro dos limites regulamentados pelo Prodist"});\par
412                 linha+=20;\par
413             \}\par
414             {\cf19 if}(FiltrosBarra::ditPercent || FiltrosBarra::dit)\{\par
415                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2 )\{\par
416                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
417                         painter.drawText(coluna+120,linha,{\cf22 "TDI"}+QString::number(j)+{\cf22 "[%] acima do limite regulamentado pelo Prodist , limite m\'E1ximo de "}+QString::number(FrameBarras::getLimitesDti()[FrameBarras::barras[i].getClasseTensaoThdv()][j])+{\cf22 "% para este n\'EDvel de tens\'E3o "});\par
418                     \}{\cf19 else}\{\par
419                         painter.drawText(coluna+120,linha,{\cf22 "TDI"}+QString::number(j)+{\cf22 "[%] dentro dos limites regulamentados pelo Prodist"});\par
420                 \}\par
421                 linha +=20;\par
422                 \}\par
423             \}\par
424 \par
425         \}\par
426 \par
427     \}\par
428         painter.end();\par
429         QDesktopServices::openUrl(QUrl({\cf22 "file:///"}+nome));\par
430 \par
431 \par
432 \par
433 \}\par
}
}
{\xe \v imprimirPdfCombonentesBarras\:FrameExportar}
{\xe \v FrameExportar\:imprimirPdfCombonentesBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::imprimirPdfCombonentesBarras ()}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 262                                                 \{\par
263 \par
264     QString nome = QDir::currentPath()+{\cf22 "/arquivo.pdf"};\par
265     QPrinter printer;\par
266     printer.setOutputFormat(QPrinter::PdfFormat);\par
267     printer.setOutputFileName(nome);\par
268     QPainter painter;\par
269     {\cf19 if}(!painter.begin(&printer))\{\par
270         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Arquivo n\'E3o p\'F4de ser criado "}); {\cf20 //caso tenha selecionado e n\'E3o tenha conseguido abrir \'E9 enviado uma messagem de erro}\par
271         {\cf19 return};\par
272     \}\par
273     {\cf18 int} linha = 25;\par
274     {\cf18 int} coluna = 25;\par
275     {\cf18 int} i ;\par
276     {\cf19 for} ({\cf17 auto} it = FiltrosBarra::indiceBarrasEscolhidas.begin(); it != FiltrosBarra::indiceBarrasEscolhidas.end(); it++) \{\par
277         QString barra = *it;\par
278         i = barra.toInt()-1;\par
279         painter.drawText(coluna,linha,{\cf22 "Barra "}+QString::number(i+1));\par
280         linha +=20;\par
281         {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
282             painter.drawText(coluna+40,linha,{\cf22 "Tens\'E3o na Barra [pu] : "}+QString::number(FrameBarras::barras[i].getTensaoPu()));\par
283             linha +=20;\par
284         \}\par
285         {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
286             painter.drawText(coluna+40,linha,{\cf22 "Tens\'E3o Nominal [kV] : "}+QString::number(FrameBarras::barras[i].getTensaoNominalKv()));\par
287             linha +=20;\par
288         \}\par
289         {\cf19 if}(FiltrosBarra::thdv)\{\par
290             painter.drawText(coluna+40,linha,{\cf22 "THDV[%] : "}+QString::number(FrameBarras::barras[i].getThdvPercent()));\par
291             linha +=20;\par
292         \}\par
293         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
294             {\cf19 if}(FiltrosBarra::dit)\{\par
295                 painter.drawText(coluna+40,linha,{\cf22 "DIT"}+QString::number(j)+{\cf22 " : "}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first));\par
296                 linha +=20;\par
297             \}\par
298         \}\par
299         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
300             {\cf19 if}(FiltrosBarra::ditPercent)\{\par
301                 painter.drawText(coluna+40,linha,{\cf22 "DIT"}+QString::number(j)+{\cf22 "[%] : "}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second));\par
302                 linha +=20;\par
303             \}\par
304         \}\par
305         {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
306             painter.drawText(coluna+40,linha,{\cf22 "Tensao Eficaz : "}+QString::number(FrameBarras::barras[i].getTensaoEficaz()));\par
307         \}\par
308         linha+=20;\par
309         painter.drawText(coluna+40,linha,{\cf22 "Observa\'E7\'F5es : "});\par
310         linha+=20;\par
311         {\cf19 if}(FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
312             {\cf19 if}(FrameBarras::barras[i].getTensaoNominalKv() < 2.3)\{\par
313                 painter.drawText(coluna+120,linha,{\cf22 "THDV[%] acima do limite regulamentado pelo Prodist , limite m\'E1ximo de 10% para este n\'EDvel de tens\'E3o "});\par
314                 linha+=20;\par
315             \}{\cf19 else} {\cf19 if}(FrameBarras::barras[i].getTensaoNominalKv() >= 2.3 && FrameBarras::barras[i].getTensaoNominalKv() < 69)\{\par
316                 painter.drawText(coluna+120,linha,{\cf22 "THDV[%] acima do limite regulamentado pelo Prodist , limite m\'E1ximo de 8% para este n\'EDvel de tens\'E3o "});\par
317                 linha+=20;\par
318             \}{\cf19 else}\{\par
319                 painter.drawText(coluna+120,linha,{\cf22 "THDV[%] acima do limite regulamentado pelo Prodist , limite m\'E1ximo de 5% para este n\'EDvel de tens\'E3o "});\par
320                 linha+=20;                    \}\par
321         \}{\cf19 else}\{\par
322             painter.drawText(coluna+120,linha,{\cf22 "THDV[%] dentro dos limites regulamentados pelo Prodist"});\par
323             linha+=20;\par
324         \}\par
325         {\cf19 if}(FiltrosBarra::ditPercent || FiltrosBarra::dit)\{\par
326             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2 )\{\par
327                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
328                     painter.drawText(coluna+120,linha,{\cf22 "TDI"}+QString::number(j)+{\cf22 "[%] acima do limite regulamentado pelo Prodist , limite m\'E1ximo de "}+QString::number(FrameBarras::getLimitesDti()[FrameBarras::barras[i].getClasseTensaoThdv()][j])+{\cf22 "% para este n\'EDvel de tens\'E3o "});\par
329                 \}{\cf19 else}\{\par
330                     painter.drawText(coluna+120,linha,{\cf22 "TDI"}+QString::number(j)+{\cf22 "[%] dentro dos limites regulamentados pelo Prodist"});\par
331             \}\par
332             linha +=20;\par
333             \}\par
334         \}\par
335 \par
336     \}\par
337     painter.end();\par
338     QDesktopServices::openUrl(QUrl({\cf22 "file:///"}+nome));\par
339 \par
340 \par
341 \}\par
}
}
{\xe \v imprimirPdfIntervaloBarras\:FrameExportar}
{\xe \v FrameExportar\:imprimirPdfIntervaloBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::imprimirPdfIntervaloBarras ()}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 183                                               \{\par
184     QString nome = QDir::currentPath()+{\cf22 "/arquivo.pdf"};\par
185     QPrinter printer;\par
186     printer.setOutputFormat(QPrinter::PdfFormat);\par
187     printer.setOutputFileName(nome);\par
188     QPainter painter;\par
189     {\cf19 if}(!painter.begin(&printer))\{\par
190         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Arquivo n\'E3o p\'F4de ser criado "}); {\cf20 //caso tenha selecionado e n\'E3o tenha conseguido abrir \'E9 enviado uma messagem de erro}\par
191         {\cf19 return};\par
192     \}\par
193     {\cf18 int} linha = 25;\par
194     {\cf18 int} coluna = 25;\par
195     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
196     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
197 \par
198     {\cf19 for}({\cf18 int} i = inicio ; i < fim ; i++)\{\par
199         painter.drawText(coluna,linha,{\cf22 "Barra "}+QString::number(i+1));\par
200         linha +=20;\par
201         {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
202             painter.drawText(coluna+40,linha,{\cf22 "Tens\'E3o na Barra [pu] : "}+QString::number(FrameBarras::barras[i].getTensaoPu()));\par
203             linha +=20;\par
204         \}\par
205         {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
206             painter.drawText(coluna+40,linha,{\cf22 "Tens\'E3o Nominal [kV] : "}+QString::number(FrameBarras::barras[i].getTensaoNominalKv()));\par
207             linha +=20;\par
208         \}\par
209         {\cf19 if}(FiltrosBarra::thdv)\{\par
210             painter.drawText(coluna+40,linha,{\cf22 "THDV[%] : "}+QString::number(FrameBarras::barras[i].getThdvPercent()));\par
211             linha +=20;\par
212         \}\par
213         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
214             {\cf19 if}(FiltrosBarra::dit)\{\par
215                 painter.drawText(coluna+40,linha,{\cf22 "DIT"}+QString::number(j)+{\cf22 " : "}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first));\par
216                 linha +=20;\par
217             \}\par
218         \}\par
219         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
220             {\cf19 if}(FiltrosBarra::ditPercent)\{\par
221                 painter.drawText(coluna+40,linha,{\cf22 "DIT"}+QString::number(j)+{\cf22 "[%] : "}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second));\par
222                 linha +=20;\par
223             \}\par
224         \}\par
225         {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
226             painter.drawText(coluna+40,linha,{\cf22 "Tensao Eficaz : "}+QString::number(FrameBarras::barras[i].getTensaoEficaz()));\par
227         \}\par
228         linha+=20;\par
229         painter.drawText(coluna+40,linha,{\cf22 "Observa\'E7\'F5es : "});\par
230         linha+=20;\par
231         {\cf19 if}(FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
232             {\cf19 if}(FrameBarras::barras[i].getTensaoNominalKv() < 2.3)\{\par
233                 painter.drawText(coluna+120,linha,{\cf22 "THDV[%] acima do limite regulamentado pelo Prodist , limite m\'E1ximo de 10% para este n\'EDvel de tens\'E3o "});\par
234                 linha+=20;\par
235             \}{\cf19 else} {\cf19 if}(FrameBarras::barras[i].getTensaoNominalKv() >= 2.3 && FrameBarras::barras[i].getTensaoNominalKv() < 69)\{\par
236                 painter.drawText(coluna+120,linha,{\cf22 "THDV[%] acima do limite regulamentado pelo Prodist , limite m\'E1ximo de 8% para este n\'EDvel de tens\'E3o "});\par
237                 linha+=20;\par
238             \}{\cf19 else}\{\par
239                 painter.drawText(coluna+120,linha,{\cf22 "THDV[%] acima do limite regulamentado pelo Prodist , limite m\'E1ximo de 5% para este n\'EDvel de tens\'E3o "});\par
240                 linha+=20;                    \}\par
241         \}{\cf19 else}\{\par
242             painter.drawText(coluna+120,linha,{\cf22 "THDV[%] dentro dos limites regulamentados pelo Prodist"});\par
243             linha+=20;\par
244         \}\par
245         {\cf19 if}(FiltrosBarra::ditPercent || FiltrosBarra::dit)\{\par
246             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2 )\{\par
247                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
248                     painter.drawText(coluna+120,linha,{\cf22 "TDI"}+QString::number(j)+{\cf22 "[%] acima do limite regulamentado pelo Prodist , limite m\'E1ximo de "}+QString::number(FrameBarras::getLimitesDti()[FrameBarras::barras[i].getClasseTensaoThdv()][j])+{\cf22 "% para este n\'EDvel de tens\'E3o "});\par
249                 \}{\cf19 else}\{\par
250                     painter.drawText(coluna+120,linha,{\cf22 "TDI"}+QString::number(j)+{\cf22 "[%] dentro dos limites regulamentados pelo Prodist"});\par
251             \}\par
252             linha +=20;\par
253             \}\par
254         \}\par
255 \par
256     \}\par
257     painter.end();\par
258     QDesktopServices::openUrl(QUrl({\cf22 "file:///"}+nome));\par
259 \par
260 \par
261 \}\par
}
}
{\xe \v inicializaFrame\:FrameExportar}
{\xe \v FrameExportar\:inicializaFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::inicializaFrame ()}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                                    \{\par
43     inserirQssFrame();\par
44 \}\par
}
}
{\xe \v inserirQssBtn\:FrameExportar}
{\xe \v FrameExportar\:inserirQssBtn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::inserirQssBtn ()}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                  \{\par
63     Style style;\par
64     ui->btnExportar->setStyleSheet(style.cssBtn);\par
65     ui->btnExportar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/exportar.png"}));\par
66     ui->btnExportar->setLayoutDirection(Qt::RightToLeft);\par
67     ui->btnVoltar->setStyleSheet(style.cssBtn);\par
68     ui->btnVoltar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/anterior.png"}));\par
69 \}\par
}
}
{\xe \v inserirQssFrame\:FrameExportar}
{\xe \v FrameExportar\:inserirQssFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::inserirQssFrame ()}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 45                                    \{\par
46     inserirQssImg();\par
47     inserirQssRadioButton();\par
48     inserirQssBtn();\par
49 \}\par
}
}
{\xe \v inserirQssImg\:FrameExportar}
{\xe \v FrameExportar\:inserirQssImg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::inserirQssImg ()}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50                                  \{\par
51     Style style;\par
52     ui->img->setPixmap(QPixmap({\cf22 ":/imgExportar/imgs/descritiva/relatorio.png"}));\par
53     ui->img->setStyleSheet(style.cssImgExportar);\par
54 \}\par
}
}
{\xe \v inserirQssRadioButton\:FrameExportar}
{\xe \v FrameExportar\:inserirQssRadioButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::inserirQssRadioButton ()}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 55                                          \{\par
56     Style style;\par
57     ui->radioButtonCsv->setStyleSheet(style.cssRadioButton);\par
58     ui->radioButtonPDF->setChecked({\cf17 true});\par
59     ui->radioButtonExcel->setStyleSheet(style.cssRadioButton);\par
60     ui->radioButtonPDF->setStyleSheet(style.cssRadioButton);\par
61 \}\par
}
}
{\xe \v numeroParaLetra\:FrameExportar}
{\xe \v FrameExportar\:numeroParaLetra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString FrameExportar::numeroParaLetra (int  {\i numero})}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6000                                                  \{\par
6001 \par
6002     QString coluna = {\cf22 ""};\par
6003     {\cf18 int} resto;\par
6004 \par
6005     {\cf19 while} (numero > 0) \{\par
6006         resto = (numero - 1) % 26;\par
6007         coluna.prepend(QChar(resto + {\cf23 'A'}));\par
6008         numero = (numero - resto - 1) / 26;\par
6009     \}\par
6010 \par
6011     {\cf19 return} coluna;\par
6012 \}\par
}
}
{\xe \v PdfCompBarrasaTodL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:PdfCompBarrasaTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::PdfCompBarrasaTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 584                                             \{\par
585     QPrinter printer;\par
586     printer.setPrinterName({\cf22 "PDF"});\par
587 \par
588 \par
589     QString filename = QFileDialog::getSaveFileName({\cf17 this}, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
590 \par
591     {\cf19 if} (filename.isEmpty()) \{\par
592         {\cf19 return};\par
593     \}\par
594 \par
595     printer.setOutputFormat(QPrinter::PdfFormat);\par
596     printer.setOutputFileName(filename);\par
597 \par
598 \par
599     ContCompBarrasaTodL1TodL2(&printer);\par
600 \par
601 \par
602     QDesktopServices::openUrl(QUrl(filename));\par
603 \}\par
}
}
{\xe \v PdfCompBarrasInterL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:PdfCompBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::PdfCompBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 523                                                \{\par
524     QPrinter printer;\par
525     printer.setPrinterName({\cf22 "PDF"});\par
526 \par
527 \par
528 \par
529     QString filename = QFileDialog::getSaveFileName({\cf17 this}, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
530 \par
531     {\cf19 if} (filename.isEmpty()) \{\par
532         {\cf19 return};\par
533     \}\par
534 \par
535     printer.setOutputFormat(QPrinter::PdfFormat);\par
536     printer.setOutputFileName(filename);\par
537 \par
538 \par
539     ContCompBarrasInterL1InterL2(&printer);\par
540 \par
541 \par
542     QDesktopServices::openUrl(QUrl(filename));\par
543 \}\par
}
}
{\xe \v PdfCompBarrasInterL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:PdfCompBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::PdfCompBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 544                                              \{\par
545     QPrinter printer;\par
546     printer.setPrinterName({\cf22 "PDF"});\par
547 \par
548 \par
549 \par
550     QString filename = QFileDialog::getSaveFileName({\cf17 this}, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
551 \par
552     {\cf19 if} (filename.isEmpty()) \{\par
553         {\cf19 return};\par
554     \}\par
555 \par
556     printer.setOutputFormat(QPrinter::PdfFormat);\par
557     printer.setOutputFileName(filename);\par
558 \par
559     ContCompBarrasInterL1TodL2(&printer);\par
560 \par
561     QDesktopServices::openUrl(QUrl(filename));\par
562 \}\par
}
}
{\xe \v PdfCompBarrasTodL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:PdfCompBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::PdfCompBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 563                                              \{\par
564     QPrinter printer;\par
565     printer.setPrinterName({\cf22 "PDF"});\par
566 \par
567 \par
568 \par
569     QString filename = QFileDialog::getSaveFileName({\cf17 this}, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
570 \par
571     {\cf19 if} (filename.isEmpty()) \{\par
572         {\cf19 return};\par
573     \}\par
574 \par
575     printer.setOutputFormat(QPrinter::PdfFormat);\par
576     printer.setOutputFileName(filename);\par
577 \par
578 \par
579     ContCompBarrasTodL1InterL2(&printer);\par
580 \par
581 \par
582     QDesktopServices::openUrl(QUrl(filename));\par
583 \}\par
}
}
{\xe \v PdfInfecBarrasInterL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:PdfInfecBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::PdfInfecBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 605                                                 \{\par
606     QPrinter printer;\par
607     printer.setPrinterName({\cf22 "PDF"});\par
608 \par
609 \par
610     QString filename = QFileDialog::getSaveFileName({\cf17 this}, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
611 \par
612     {\cf19 if} (filename.isEmpty()) \{\par
613         {\cf19 return};\par
614     \}\par
615 \par
616     printer.setOutputFormat(QPrinter::PdfFormat);\par
617     printer.setOutputFileName(filename);\par
618 \par
619 \par
620     ContInfecBarrasInterL1InterL2(&printer);\par
621 \par
622 \par
623     QDesktopServices::openUrl(QUrl(filename));\par
624 \}\par
}
}
{\xe \v PdfInfecBarrasInterL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:PdfInfecBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::PdfInfecBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 625                                               \{\par
626     QPrinter printer;\par
627     printer.setPrinterName({\cf22 "PDF"});\par
628 \par
629 \par
630 \par
631     QString filename = QFileDialog::getSaveFileName({\cf17 this}, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
632 \par
633     {\cf19 if} (filename.isEmpty()) \{\par
634         {\cf19 return};\par
635     \}\par
636 \par
637     printer.setOutputFormat(QPrinter::PdfFormat);\par
638     printer.setOutputFileName(filename);\par
639 \par
640     ContInfecBarrasInterL1TodL2(&printer);\par
641 \par
642 \par
643     QDesktopServices::openUrl(QUrl(filename));\par
644 \}\par
}
}
{\xe \v PdfInfecBarrasTodL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:PdfInfecBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::PdfInfecBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 645                                               \{\par
646     QPrinter printer;\par
647     printer.setPrinterName({\cf22 "PDF"});\par
648 \par
649 \par
650 \par
651     QString filename = QFileDialog::getSaveFileName({\cf17 this}, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
652 \par
653     {\cf19 if} (filename.isEmpty()) \{\par
654         {\cf19 return};\par
655     \}\par
656 \par
657     printer.setOutputFormat(QPrinter::PdfFormat);\par
658     printer.setOutputFileName(filename);\par
659 \par
660     ContInfecBarrasTodL1InterL2(&printer);\par
661 \par
662     QDesktopServices::openUrl(QUrl(filename));\par
663 \}\par
}
}
{\xe \v PdfInfecBarrasTodL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:PdfInfecBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::PdfInfecBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 664                                             \{\par
665     QPrinter printer;\par
666     printer.setPrinterName({\cf22 "PDF"});\par
667 \par
668     QString filename = QFileDialog::getSaveFileName({\cf17 this}, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
669 \par
670     {\cf19 if} (filename.isEmpty()) \{\par
671         {\cf19 return};\par
672     \}\par
673 \par
674     printer.setOutputFormat(QPrinter::PdfFormat);\par
675     printer.setOutputFileName(filename);\par
676 \par
677     ContInfecBarrasTodL1TodL2(&printer);\par
678 \par
679     QDesktopServices::openUrl(QUrl(filename));\par
680 \}\par
}
}
{\xe \v PdfInterBarrasTodL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:PdfInterBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::PdfInterBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 479                                               \{\par
480     QPrinter printer;\par
481     printer.setPrinterName({\cf22 "PDF"});\par
482 \par
483 \par
484 \par
485     QString filename = QFileDialog::getSaveFileName({\cf17 this}, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
486 \par
487     {\cf19 if} (filename.isEmpty()) \{\par
488         {\cf19 return};\par
489     \}\par
490 \par
491     printer.setOutputFormat(QPrinter::PdfFormat);\par
492     printer.setOutputFileName(filename);\par
493 \par
494 \par
495     ContInterBarrasTodL1InterL2(&printer);\par
496 \par
497 \par
498 \par
499     QDesktopServices::openUrl(QUrl(filename));\par
500 \}\par
}
}
{\xe \v PdfInterBarrasTodL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:PdfInterBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::PdfInterBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 501                                             \{\par
502     QPrinter printer;\par
503     printer.setPrinterName({\cf22 "PDF"});\par
504 \par
505 \par
506 \par
507     QString filename = QFileDialog::getSaveFileName({\cf17 this}, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
508 \par
509     {\cf19 if} (filename.isEmpty()) \{\par
510         {\cf19 return};\par
511     \}\par
512 \par
513     printer.setOutputFormat(QPrinter::PdfFormat);\par
514     printer.setOutputFileName(filename);\par
515 \par
516     ContInterBarrasTodL1TodL2(&printer);\par
517 \par
518 \par
519 \par
520     QDesktopServices::openUrl(QUrl(filename));\par
521 \}\par
}
}
{\xe \v PdfInterBInterL1InterL2\:FrameExportar}
{\xe \v FrameExportar\:PdfInterBInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::PdfInterBInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 438                                            \{\par
439         QPrinter printer;\par
440         printer.setPrinterName({\cf22 "PDF"});\par
441 \par
442 \par
443 \par
444         QString filename = QFileDialog::getSaveFileName({\cf17 this}, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
445 \par
446         {\cf19 if} (filename.isEmpty()) \{\par
447         {\cf19 return};\par
448         \}\par
449 \par
450         printer.setOutputFormat(QPrinter::PdfFormat);\par
451         printer.setOutputFileName(filename);\par
452 \par
453         ContInterBInterL1InterL2(&printer);\par
454 \par
455         QDesktopServices::openUrl(QUrl(filename));\par
456 \}\par
}
}
{\xe \v PdfInterBInterL1TodL2\:FrameExportar}
{\xe \v FrameExportar\:PdfInterBInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::PdfInterBInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 457                                          \{\par
458     QPrinter printer;\par
459     printer.setPrinterName({\cf22 "PDF"});\par
460 \par
461 \par
462 \par
463     QString filename = QFileDialog::getSaveFileName({\cf17 this}, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
464 \par
465     {\cf19 if} (filename.isEmpty()) \{\par
466         {\cf19 return};\par
467     \}\par
468 \par
469     printer.setOutputFormat(QPrinter::PdfFormat);\par
470     printer.setOutputFileName(filename);\par
471 \par
472 \par
473     ContInterBInterL1TodL2(&printer);\par
474 \par
475 \par
476 \par
477     QDesktopServices::openUrl(QUrl(filename));\par
478 \}\par
}
}
{\xe \v QtdLinhasInfoBarra\:FrameExportar}
{\xe \v FrameExportar\:QtdLinhasInfoBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameExportar::QtdLinhasInfoBarra ()}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4059                                      \{\par
4060     {\cf18 int} linhas = 0 ;\par
4061 \par
4062     linhas += (int)FiltrosBarra::tensaoPu;\par
4063     linhas += (int)FiltrosBarra::tensaoNominal;\par
4064     linhas += (int)FiltrosBarra::thdv;\par
4065     linhas += (int)FiltrosBarra::dit * (FrameBarras::quantidadeDeComponentesHarm);\par
4066     linhas += (int)FiltrosBarra::ditPercent * (FrameBarras::quantidadeDeComponentesHarm);\par
4067     linhas += (int)FiltrosBarra::tensaoEficaz;\par
4068 \par
4069     {\cf19 return} linhas;\par
4070 \}\par
}
}
{\xe \v QtdLinhasInfoLinha\:FrameExportar}
{\xe \v FrameExportar\:QtdLinhasInfoLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameExportar::QtdLinhasInfoLinha ()}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4072                                      \{\par
4073     {\cf18 int} linhas = 0 ;\par
4074 \par
4075     linhas += (int) FiltroLinha::correntePu;\par
4076     linhas += (int) FiltroLinha::dht;\par
4077     linhas += (int) FiltroLinha::dit * (FrameBarras::quantidadeDeComponentesHarm);\par
4078     linhas += (int) FiltroLinha::ditPercent * (FrameBarras::quantidadeDeComponentesHarm);\par
4079     linhas += (int) FiltroLinha::correnteEficaz;\par
4080     linhas += (int) FiltroLinha::resistencia;\par
4081     linhas += (int) FiltroLinha::perdas;\par
4082     linhas += (int) FiltroLinha::perdasEficaz;\par
4083 \par
4084     {\cf19 return} linhas;\par
4085 \}\par
}
}
{\xe \v salvaPlanilha\:FrameExportar}
{\xe \v FrameExportar\:salvaPlanilha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::salvaPlanilha (QXlsx::Document *  {\i saida})}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4225                                                      \{\par
4226     QString filtro={\cf22 "Arquivo de planilha Excel. (*.xlsx)"};\par
4227     QString localSalvamento =QFileDialog::getSaveFileName({\cf17 this},{\cf22 "Salvar Arquivo"},QDir::homePath(),filtro);\par
4228     saida->saveAs(localSalvamento);\par
4229 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b frameexportar.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b frameexportar.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe FrameTensoes\par \pard\plain 
{\tc\tcl2 \v FrameTensoes}
{\xe \v FrameTensoes}
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
\par
{
{\f2 #include <frametensoes.h>}}\par
Diagrama de hierarquia para FrameTensoes:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_frame_tensoes.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FrameTensoes} (QWidget *parent=nullptr, Ui::MainWindow *mw=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FrameTensoes} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b quantidadeDeBarras} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b verificaAvanco} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBotaoAvancar} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssImportar} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnVoltar} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnLixeira} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnSalvar} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssFrame} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereTableTensoes} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssFrameTensoes} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Est\'E1ticos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QList< double > {\b tensoesNominais}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b numeroDeBarras}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v FrameTensoes\:FrameTensoes}
{\xe \v FrameTensoes\:FrameTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameTensoes::FrameTensoes (QWidget *  {\i parent} = {\f2 nullptr}, Ui::MainWindow *  {\i mw} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                                            :\par
18     QFrame(parent),\par
19 \par
20     ui({\cf17 new} Ui::FrameTensoes)\par
21 \{\par
22     ui->setupUi({\cf17 this});\par
23     Style style;\par
24     numeroDeBarras=quantidadeDeBarras();\par
25     frameMain = mw; {\cf20 // define um ponteiro que aponte para onde ficam as informa\'E7\'F5es do frame anterior}\par
26     insereQssFrameTensoes();\par
27 \}\par
}
}
{\xe \v ~FrameTensoes\:FrameTensoes}
{\xe \v FrameTensoes\:~FrameTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameTensoes::~FrameTensoes ()}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30 \{\par
31     {\cf17 delete} ui;\par
32 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v insereQssBotaoAvancar\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssBotaoAvancar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssBotaoAvancar ()}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 45                                         \{\par
46     Style style;\par
47     ui->btnAvancar->setStyleSheet(style.cssBtn);\par
48     ui->btnAvancar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/proximo.png"})); {\cf20 //insere um icon ao bot\'E3o}\par
49     ui->btnAvancar->setLayoutDirection(Qt::RightToLeft); {\cf20 //define que o icon ser\'E1 colocado ap\'F3s o texto}\par
50 \}\par
}
}
{\xe \v insereQssBtnLixeira\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssBtnLixeira}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssBtnLixeira ()}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 63                                       \{\par
64     {\cf20 //bot\'E3o Lixeira(apagar)}\par
65     Style style;\par
66     ui->btnLixeira->hide();\par
67     ui->btnLixeira->setStyleSheet(style.cssBtnLixeira);\par
68     ui->btnLixeira->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"}));\par
69 \}\par
}
}
{\xe \v insereQssBtnSalvar\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssBtnSalvar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssBtnSalvar ()}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 70                                      \{\par
71     Style style;\par
72     {\cf20 //Bot\'E3o Salvar Tabela}\par
73     ui->btnSalvarTabela->setStyleSheet(style.cssBtn);\par
74     ui->btnSalvarTabela->setIcon(QIcon({\cf22 ":/icons/imgs/icons/salve-.png"}));\par
75 \}\par
}
}
{\xe \v insereQssBtnVoltar\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssBtnVoltar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssBtnVoltar ()}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 57                                      \{\par
58     Style style;\par
59     {\cf20 //Bot\'E3o Voltar}\par
60     ui->btnVoltar->setStyleSheet(style.cssBtn);\par
61     ui->btnVoltar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/anterior.png"}));\par
62 \}\par
}
}
{\xe \v insereQssFrame\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssFrame (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 76                                         \{\par
77     Style style;\par
78     this->setStyleSheet(style.cssFrameArq); {\cf20 //Nova frame}\par
79 \};\par
}
}
{\xe \v insereQssFrameTensoes\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssFrameTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssFrameTensoes ()}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34                                         \{\par
35     insereQssBotaoAvancar();\par
36     insereQssImportar();\par
37     insereQssBtnVoltar();\par
38     insereQssBtnLixeira();\par
39     insereQssBtnSalvar();\par
40     insereQssFrame();\par
41     insereTableTensoes();\par
42 \par
43 \}\par
}
}
{\xe \v insereQssImportar\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssImportar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssImportar ()}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 51                                     \{\par
52     Style style;\par
53     ui->btnImportar->setStyleSheet(style.cssBtn);\par
54     ui->lineEditImportar->setStyleSheet(style.cssLineEdit);\par
55 \par
56 \}\par
}
}
{\xe \v insereTableTensoes\:FrameTensoes}
{\xe \v FrameTensoes\:insereTableTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereTableTensoes ()}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 81                                      \{\par
82     Style style;\par
83     {\cf20 //Tabela de tens\'F5es}\par
84     ui->tableTensoes->setColumnCount(2);\par
85     ui->tableTensoes->setRowCount(numeroDeBarras);\par
86     QStringList cabecalhos=\{{\cf22 "Barra"},{\cf22 "Tens\'E3o [Kv]"}\}; {\cf20 //insere cabe\'E7alho \'E0 tabe}\par
87     ui->tableTensoes->setHorizontalHeaderLabels(cabecalhos);\par
88     ui->tableTensoes->setColumnWidth(0,100);\par
89     {\cf20 //configura o width da segunda coluna para um determinado numero de barras, devido ao espa\'E7o disponibilizado apara oa scrool bar}\par
90     (numeroDeBarras <=17 ) ?  ui->tableTensoes->setColumnWidth(1,358) : ui->tableTensoes->setColumnWidth(1,346);\par
91 \par
92     ui->tableTensoes->verticalHeader()->setVisible({\cf17 false});\par
93     ui->tableTensoes->verticalScrollBar()->setVisible({\cf17 true});{\cf20 //torna visivel a scrool bar, mesmo que possa ficar pequena com poucas barras devido ao QSS}\par
94     ui->tableTensoes->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);\par
95     ui->tableTensoes->setStyleSheet(style.csstabelaTensoes); {\cf20 //insere QSS na tabela}\par
96     ui->tableTensoes->horizontalHeader()->setStyleSheet(style.cssHeaderTabela); {\cf20 //insere QSS no header da tabela}\par
97     ui->tableTensoes->setAlternatingRowColors({\cf17 true}); {\cf20 //aplica anternacia de cores na tabela}\par
98 \par
99     {\cf20 //insere um numero de linhas \'E0 tabela correspondente ao numero de Barras}\par
100     {\cf19 for} ({\cf18 int} i = 0; i < numeroDeBarras; i++) \{\par
101         QTableWidgetItem* item = {\cf17 new} QTableWidgetItem(QString::number(i+1));\par
102         item->setFlags(item->flags() & ~Qt::ItemIsEditable);\par
103         ui->tableTensoes->setItem(i, 0, item); {\cf20 //\'E9 inserido na primeira linha da Tabela o indice de cada barra}\par
104     \}\par
105 \}\par
}
}
{\xe \v quantidadeDeBarras\:FrameTensoes}
{\xe \v FrameTensoes\:quantidadeDeBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameTensoes::quantidadeDeBarras ()}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                     \{\par
117     QFile *arq1 = MainWindow::arquivoThdv; {\cf20 //cria um ponteiro para realizar a leitura de um arquivo}\par
118     {\cf20 //O arquivo thdv possui uma linha de informa~\'E7\'E3o para cada barra -- por isso foi selecionado}\par
119     {\cf20 //realiza o procedimento de abertura do arquivo e alerta caso aconte\'E7a algum erro -- Conforme explicado no mainwindow.cpp}\par
120     {\cf19 if}(!arq1->open(QFile::ReadOnly|QFile::Text))\{\par
121         {\cf19 if}(arq1->error() == QFile::OpenError)\{\par
122             {\cf19 return} 0 ;\par
123         \}\par
124         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
125         {\cf19 return} 0 ;\par
126     \}\par
127     {\cf18 int} contador=0; {\cf20 // declara e inicia um contador}\par
128     QTextStream entrada(arq1); {\cf20 //declara um}\par
129     {\cf19 while}(!arq1->atEnd())\{\par
130         arq1->readLine(); {\cf20 // faz a leitura de cada linha}\par
131         contador++; {\cf20 // realiza a contagem da quantidade de linhas do arquivo}\par
132     \}\par
133     arq1->close(); {\cf20 //fecha o arquivo}\par
134     {\cf19 return} (contador-3); {\cf20 // o numero de barras \'E9 igual ao numero de linhas menos 3 linhas de texto sobre o software e uma vazia}\par
135 \par
136 \par
137 \}\par
}
}
{\xe \v verificaAvanco\:FrameTensoes}
{\xe \v FrameTensoes\:verificaAvanco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FrameTensoes::verificaAvanco ()}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 261                                  \{\par
262     {\cf18 int} numeroDeBarras = quantidadeDeBarras();\par
263     {\cf19 for}({\cf18 int} i = 0 ; i < numeroDeBarras ; i++)\{\par
264          {\cf19 if}(ui->tableTensoes->item(i,1)=={\cf17 nullptr})\{\par
265             {\cf19 return} {\cf17 false};\par
266          \}\par
267     \}\par
268     {\cf19 return} {\cf17 true};\par
269 \par
270 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v numeroDeBarras\:FrameTensoes}
{\xe \v FrameTensoes\:numeroDeBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameTensoes::numeroDeBarras{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tensoesNominais\:FrameTensoes}
{\xe \v FrameTensoes\:tensoesNominais}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< double > FrameTensoes::tensoesNominais{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b frametensoes.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b frametensoes.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Linha\par \pard\plain 
{\tc\tcl2 \v Linha}
{\xe \v Linha}
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
\par
{
{\f2 #include <Linha.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getOrigem} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOrigem} (int origem)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getDestino} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDestino} (int destino)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getCorrente} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCorrente} (double corrente)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getDhtPercent} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDhtPercent} (double dhtPercent)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getResistencia} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setResistencia} (double resistencia)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getPerdas} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPerdas} (double perdas)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getCorrenteEficaz} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCorrenteEficaz} (double correnteEficaz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getPerdasEficaz} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPerdasEficaz} (double perdasEficaz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getLinhaInfectadaDht} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLinhaInfectadaDht} (bool infectada)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< int, std::pair< double, double > > {\b getDti} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDti} (int key1, double dAbsolut, double dPercent)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getCorrente\:Linha}
{\xe \v Linha\:getCorrente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getCorrente (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                          \{\par
27         {\cf19 return} corrente;\par
28     \}\par
}
}
{\xe \v getCorrenteEficaz\:Linha}
{\xe \v Linha\:getCorrenteEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getCorrenteEficaz (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58                                \{\par
59         {\cf19 return} correnteEficaz;\par
60     \}\par
}
}
{\xe \v getDestino\:Linha}
{\xe \v Linha\:getDestino}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Linha::getDestino (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18                      \{\par
19         {\cf19 return} destino;\par
20     \}\par
}
}
{\xe \v getDhtPercent\:Linha}
{\xe \v Linha\:getDhtPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getDhtPercent (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34                            \{\par
35         {\cf19 return} dhtPercent;\par
36     \}\par
}
}
{\xe \v getDti\:Linha}
{\xe \v Linha\:getDti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::map< int, std::pair< double, double > > Linha::getDti (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 82                                                  \{\par
83         {\cf19 return} dti;\par
84     \}\par
}
}
{\xe \v getLinhaInfectadaDht\:Linha}
{\xe \v Linha\:getLinhaInfectadaDht}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Linha::getLinhaInfectadaDht (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 74                                 \{\par
75         {\cf19 return} linhaInfectadaDht;\par
76     \}\par
}
}
{\xe \v getOrigem\:Linha}
{\xe \v Linha\:getOrigem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Linha::getOrigem (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                     \{\par
11         {\cf19 return} origem;\par
12     \}\par
}
}
{\xe \v getPerdas\:Linha}
{\xe \v Linha\:getPerdas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getPerdas (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50                        \{\par
51         {\cf19 return} perdas;\par
52     \}\par
}
}
{\xe \v getPerdasEficaz\:Linha}
{\xe \v Linha\:getPerdasEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getPerdasEficaz (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 66                              \{\par
67         {\cf19 return} perdasEficaz;\par
68     \}\par
}
}
{\xe \v getResistencia\:Linha}
{\xe \v Linha\:getResistencia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getResistencia (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                             \{\par
43         {\cf19 return} resistencia;\par
44     \}\par
}
}
{\xe \v setCorrente\:Linha}
{\xe \v Linha\:setCorrente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setCorrente (double  {\i corrente}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30                                       \{\par
31         this->corrente = corrente;\par
32     \}\par
}
}
{\xe \v setCorrenteEficaz\:Linha}
{\xe \v Linha\:setCorrenteEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setCorrenteEficaz (double  {\i correnteEficaz}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                                   \{\par
63         this->correnteEficaz = correnteEficaz;\par
64     \}\par
}
}
{\xe \v setDestino\:Linha}
{\xe \v Linha\:setDestino}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setDestino (int  {\i destino}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 22                                  \{\par
23         this->destino = destino;\par
24     \}\par
}
}
{\xe \v setDhtPercent\:Linha}
{\xe \v Linha\:setDhtPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setDhtPercent (double  {\i dhtPercent}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 38                                           \{\par
39         this->dhtPercent = dhtPercent;\par
40     \}\par
}
}
{\xe \v setDti\:Linha}
{\xe \v Linha\:setDti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setDti (int  {\i key1}, double  {\i dAbsolut}, double  {\i dPercent}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 86                                                               \{\par
87         this->dti.insert(\{key1,\{dAbsolut,dPercent\}\});\par
88     \}\par
}
}
{\xe \v setLinhaInfectadaDht\:Linha}
{\xe \v Linha\:setLinhaInfectadaDht}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setLinhaInfectadaDht (bool  {\i infectada}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 78                                               \{\par
79         linhaInfectadaDht = infectada;\par
80     \}\par
}
}
{\xe \v setOrigem\:Linha}
{\xe \v Linha\:setOrigem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setOrigem (int  {\i origem}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14                                \{\par
15         this->origem = origem;\par
16     \}\par
}
}
{\xe \v setPerdas\:Linha}
{\xe \v Linha\:setPerdas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setPerdas (double  {\i perdas}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 54                                   \{\par
55         this->perdas = perdas;\par
56     \}\par
}
}
{\xe \v setPerdasEficaz\:Linha}
{\xe \v Linha\:setPerdasEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setPerdasEficaz (double  {\i perdasEficaz}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 70                                               \{\par
71         this->perdasEficaz = perdasEficaz;\par
72     \}\par
}
}
{\xe \v setResistencia\:Linha}
{\xe \v Linha\:setResistencia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setResistencia (double  {\i resistencia}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 46                                             \{\par
47         this->resistencia = resistencia;\par
48     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b Linha.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe MainWindow\par \pard\plain 
{\tc\tcl2 \v MainWindow}
{\xe \v MainWindow}
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela Principal do Programa. }}\par
{
{\f2 #include <mainwindow.h>}}\par
Diagrama de hierarquia para MainWindow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_main_window.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getStatusDePreenchimento} (int posicao)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setStatusDePreenchimento} (int posicao, bool status)\par
}
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::MainWindow\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b MainWindow}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MainWindow} (QWidget *parent=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::~MainWindow\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b MainWindow} \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~MainWindow} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereCssMainWindow()\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar m\'E9todos que ir\'E3o inserir Qss na interface do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereCssMainWindow} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereIcon\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir o Icon do programa, diretamente do arquivo de recursos, al\'E9m de inserir o nome do programa\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereIcon} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssBarraDeStatus\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no frame da barra de status e seus labels, que correspondem em que frame a aplica\'E7\'E3o est\'E1 rodando.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBarraDeStatus} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssTitulosLineEdit\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no frame que recebe endere\'E7o dos arquivos e seus labels, que correspondem ao titulo de cada arquivo.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssTitulosLineEdit} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssLineEdit\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos LineEdits do frame que recebe endere\'E7o dos arquivos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssLineEdit} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssPlaceHolderLineEdit\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir PlaceHolder nos LineEdits do frame que recebe endere\'E7o dos arquivos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssPlaceHolderLineEdit} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssBtnArquivos\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos bot\'F5es de buscar endere\'E7o dos arquivos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnArquivos} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssBtnAvancar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel pro inserir Qss no bot\'E3o de Avan\'E7ar. Insere Qss no bot\'E3o para iniciar com aspecto de bloqueado. Insere um icone dentro do bot\'E3o demonstrando tendencia de seguir em frente, esse icon fica \'E1 direita do texto do bot\'E3o Bot\'E3o inicia bloqueado, j\'E1 que s\'F3 ser\'E1 liberado com a inser\'E7\'E3o de todos os arquivos nos LineEdits\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnAvancar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssBtnLixeira\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o de apagar dados j\'E1 inseridos no LineEdit. Nesse bot\'E3o h\'E1 a inser\'E7\'E3o de um icone de lixeira, al\'E9m do Qss para que seu fundo seja vermelho, indicando uma remo\'E7\'E3o. O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnLixeira} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssLblVerifica\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por garantir, que os labels respons\'E1veis por indicar que as etapas do Frame de status foram cumpridas, iniciem ocultos.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssLblVerifica} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::inicializaFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primeiro m\'E9todo a ser chamada no construtor, respons\'E1vel por chamar os m\'E9todos subsequ\'EAntes que modelam a Interface do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaFrame} ()\par
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b atualizarStatus} (Ui::MainWindow *ui)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Est\'E1ticos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoVsoln} = new QFile()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicializando as vari\'E1veis est\'E1ticas respons\'E1veis por apontar para os arquivos que ser\'E3o inseridos. A classifica\'E7\'E3o de armazenamento dessas v\'E1riaveis foi definida como static pela necessidade dessa vari\'E1vel ser acessada em outros frames para abertura dos arquivos. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoIsoln} = new QFile()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoThdi} = new QFile()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoThdv} = new QFile()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoLdat} = new QFile()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoTensoes} = new QFile()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b frameAtual} =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
//Inicializando a vari\'E1vel est\'E1tica que identifica em que frame a aplica\'E7\'E3o est\'E1 rodando. Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
MainWindow::setaFileNameNosArq\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Conecta o FileName dos ponteiros dos arquivos para o que estiver escrito no lineEdit correpondente de cada um\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b verificarAvanco} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setaFileNameNosArq} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela Principal do Programa. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos @reentrant Essa janela foi construida com 2 frames, um com o intuito de funcionar como uma barra de status do andamento da aplica\'E7\'E3o(tendo 4 labels como sinalizadores) e o outro possui componentes repons\'E1veis por receber endere\'E7o de arquivos que ser\'E3o utilizados nos proximos frames para trataemnto de dados. \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v MainWindow\:MainWindow}
{\xe \v MainWindow\:MainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MainWindow::MainWindow (QWidget *  {\i parent} = {\f2 nullptr})}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 51     : QMainWindow(parent)\par
52     , ui({\cf17 new} Ui::MainWindow)\par
53 \{\par
54     ui->setupUi({\cf17 this});\par
55     QCoreApplication::addLibraryPath({\cf22 "C:/Qt/6.5.0/mingw_64/plugins"});\par
56     inicializaFrame();\par
57 \par
58 \}\par
}
}
{\xe \v ~MainWindow\:MainWindow}
{\xe \v MainWindow\:~MainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MainWindow::~MainWindow ()}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65 \{\par
66     {\cf17 delete} ui;\par
67 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v atualizarStatus\:MainWindow}
{\xe \v MainWindow\:atualizarStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void MainWindow::atualizarStatus (Ui::MainWindow *  {\i ui}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                                  \{\par
25         Style style;\par
26         {\cf19 switch}(frameAtual)\{\par
27         {\cf19 case} 0:\par
28             ui->txtCarregarArquivos->setStyleSheet(style.cssTxtSelected);\par
29             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
30             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
31             ui->txtExportar->setStyleSheet(style.cssTxt);\par
32             ui->lblVerifica1->hide();\par
33             ui->lblVerifica2->hide();\par
34             ui->lblVerifica3->hide();\par
35             ui->lblVerifica4->hide();\par
36             {\cf19 break};\par
37         {\cf19 case} 1:\par
38             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
39             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxtSelected);\par
40             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
41             ui->txtExportar->setStyleSheet(style.cssTxt);\par
42             ui->lblVerifica1->show();\par
43             ui->lblVerifica2->hide();\par
44             ui->lblVerifica3->hide();\par
45             ui->lblVerifica4->hide();\par
46             {\cf19 break};\par
47         {\cf19 case} 2:\par
48             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
49             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
50             ui->txtPrepararSaida->setStyleSheet(style.cssTxtSelected);\par
51             ui->txtExportar->setStyleSheet(style.cssTxt);\par
52             ui->lblVerifica1->show();\par
53             ui->lblVerifica2->show();\par
54             ui->lblVerifica3->hide();\par
55             ui->lblVerifica4->hide();\par
56             {\cf19 break};\par
57         {\cf19 case} 3:\par
58             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
59             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
60             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
61             ui->txtExportar->setStyleSheet(style.cssTxtSelected);\par
62             ui->lblVerifica1->show();\par
63             ui->lblVerifica2->show();\par
64             ui->lblVerifica3->show();\par
65             ui->lblVerifica4->hide();\par
66             {\cf19 break};\par
67         \}\par
68     \}\par
}
}
{\xe \v getStatusDePreenchimento\:MainWindow}
{\xe \v MainWindow\:getStatusDePreenchimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MainWindow::getStatusDePreenchimento (int  {\i posicao}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 91                                               \{\par
92         {\cf19 if}(posicao < 5 && posicao >=0)\{\par
93             {\cf19 return} statusDePreenchimento[posicao];\par
94         \}\par
95         {\cf19 else}\{\par
96             {\cf19 return} {\cf17 false};\par
97         \}\par
98     \}\par
}
}
{\xe \v inicializaFrame\:MainWindow}
{\xe \v MainWindow\:inicializaFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::inicializaFrame ()}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 74                                 \{\par
75     insereCssMainWindow();\par
76 \}\par
}
}
{\xe \v insereCssMainWindow\:MainWindow}
{\xe \v MainWindow\:insereCssMainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereCssMainWindow ()}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 83                                     \{\par
84     insereIcon();\par
85     insereQssBarraDeStatus();\par
86     insereQssTitulosLineEdit();\par
87     insereQssLineEdit();\par
88     insereQssPlaceHolderLineEdit();\par
89     insereQssBtnArquivos();\par
90     insereQssBtnAvancar();\par
91     insereQssBtnLixeira();\par
92     insereQssLblVerifica();\par
93 \}\par
}
}
{\xe \v insereIcon\:MainWindow}
{\xe \v MainWindow\:insereIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereIcon ()}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 100                            \{\par
101     setWindowIcon(QIcon({\cf22 ":/icons/imgs/icons/engrenagem.png"}));\par
102     setWindowTitle({\cf22 "EletricData 1.0"});\par
103 \}\par
}
}
{\xe \v insereQssBarraDeStatus\:MainWindow}
{\xe \v MainWindow\:insereQssBarraDeStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssBarraDeStatus ()}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 110                                        \{\par
111     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
112 \par
113     ui->txtCarregarArquivos->setStyleSheet(style.cssTxtSelected); {\cf20 //Insere Qss Selecionado no item da barra de Status ( 1. Carregar Arquivos)}\par
114     ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt); {\cf20 //Insere Qss no item da barra de Status ( 2. Tens\'F5es nas Barras)}\par
115     ui->txtPrepararSaida->setStyleSheet(style.cssTxt); {\cf20 //Insere Qss no item da barra de Status ( 3. Preparar Saida)}\par
116     ui->txtExportar->setStyleSheet(style.cssTxt); {\cf20 //Insere Qss  no item da barra de Status ( 4. Exportar)}\par
117     ui->statusFrame->setStyleSheet(style.cssStatusFrame); {\cf20 // Insere Qss no Frame da Barra de Status}\par
118 \}\par
}
}
{\xe \v insereQssBtnArquivos\:MainWindow}
{\xe \v MainWindow\:insereQssBtnArquivos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssBtnArquivos ()}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 176                                      \{\par
177     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
178 \par
179     ui->btnVsoln->setStyleSheet(style.cssBtn); {\cf20 //Insere Qss no Bot\'E3o de busca do arquivo Vsoln}\par
180     ui->btnThdv->setStyleSheet(style.cssBtn); {\cf20 //Insere Qss no Bot\'E3o de busca do arquivo Thdv}\par
181     ui->btnThdi->setStyleSheet(style.cssBtn); {\cf20 //Insere Qss no Bot\'E3o de busca do arquivo Thdi}\par
182     ui->btnIsoln->setStyleSheet(style.cssBtn); {\cf20 //Insere Qss no Bot\'E3o de busca do arquivo Isoln}\par
183     ui->btnLdat->setStyleSheet(style.cssBtn); {\cf20 //Insere Qss no Bot\'E3o de busca do arquivo Ldat}\par
184 \}\par
}
}
{\xe \v insereQssBtnAvancar\:MainWindow}
{\xe \v MainWindow\:insereQssBtnAvancar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssBtnAvancar ()}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 194                                     \{\par
195     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
196 \par
197     ui->btnAvancar->setStyleSheet(style.cssBtnTransition); {\cf20 // Inserindo Qss no bot\'E3o avan\'E7ar}\par
198     ui->btnAvancar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/proximo.png"})); {\cf20 //Inser\'E7\'E3o do icon diretamente do arquivo de recursos}\par
199     ui->btnAvancar->setLayoutDirection(Qt::RightToLeft); {\cf20 // Icone \'E9 inserido a direita do texto}\par
200     ui->btnAvancar->setEnabled({\cf17 false}); {\cf20 // Bot\'E3o inicia desabilitado}\par
201 \}\par
}
}
{\xe \v insereQssBtnLixeira\:MainWindow}
{\xe \v MainWindow\:insereQssBtnLixeira}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssBtnLixeira ()}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 210                                     \{\par
211     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
212 \par
213     {\cf20 //Bot\'F5es de Checked e lixeira para cada arquivo}\par
214     ui->btnLixeiraVsoln->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"})); {\cf20 //Inser\'E7\'E3o do icon diretamente do arquivo de recursos}\par
215     ui->btnLixeiraVsoln->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
216     ui->btnLixeiraVsoln->hide();{\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit}\par
217 \par
218     ui->btnLixeiraThdv->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"}));\par
219     ui->btnLixeiraThdv->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
220     ui->btnLixeiraThdv->hide();{\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit}\par
221 \par
222     ui->btnLixeiraThdi->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"}));\par
223     ui->btnLixeiraThdi->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
224     ui->btnLixeiraThdi->hide();{\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit}\par
225 \par
226     ui->btnLixeiraIsoln->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"}));\par
227     ui->btnLixeiraIsoln->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
228     ui->btnLixeiraIsoln->hide();{\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit}\par
229 \par
230     ui->btnLixeiraLdat->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"}));\par
231     ui->btnLixeiraLdat->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
232     ui->btnLixeiraLdat->hide();{\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit}\par
233 \}\par
}
}
{\xe \v insereQssLblVerifica\:MainWindow}
{\xe \v MainWindow\:insereQssLblVerifica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssLblVerifica ()}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 240                                      \{\par
241     {\cf20 //os labels de Checked iniciam escondidos j\'E1 que nada foi realizado ainda}\par
242     ui->lblVerifica1->hide();\par
243     ui->lblVerifica2->hide();\par
244     ui->lblVerifica3->hide();\par
245     ui->lblVerifica4->hide();\par
246 \}\par
}
}
{\xe \v insereQssLineEdit\:MainWindow}
{\xe \v MainWindow\:insereQssLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssLineEdit ()}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 141                                   \{\par
142     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
143 \par
144     ui->lineEditVsoln->setStyleSheet(style.cssLineEdit); {\cf20 //Insere Qss No LineEdit Vsoln}\par
145     ui->lineEditThdv->setStyleSheet(style.cssLineEdit); {\cf20 //Insere Qss No LineEdit Thdv}\par
146     ui->lineEditThdi->setStyleSheet(style.cssLineEdit); {\cf20 //Insere Qss No LineEdit Thdi}\par
147     ui->lineEditIsoln->setStyleSheet(style.cssLineEdit); {\cf20 //Insere Qss No LineEdit Isoln}\par
148     ui->lineEditLdat->setStyleSheet(style.cssLineEdit); {\cf20 //Insere Qss No LineEdit Ldat}\par
149     ui->lineEditVsoln->setEnabled({\cf17 false});   {\cf20 //Desativa altera\'E7\'E3o no lineEditVsoln para que s\'F3 possa ser alterado pela inser\'E7\'E3o de texto no bot\'E3o buscar}\par
150     ui->lineEditThdv->setEnabled({\cf17 false});    {\cf20 //Desativa altera\'E7\'E3o no lineEditThdv para que s\'F3 possa ser alterado pela inser\'E7\'E3o de texto no bot\'E3o buscar}\par
151     ui->lineEditThdi->setEnabled({\cf17 false});    {\cf20 //Desativa altera\'E7\'E3o no lineEditThdi para que s\'F3 possa ser alterado pela inser\'E7\'E3o de texto no bot\'E3o buscar}\par
152     ui->lineEditIsoln->setEnabled({\cf17 false});   {\cf20 //Desativa altera\'E7\'E3o no lineEditIsoln para que s\'F3 possa ser alterado pela inser\'E7\'E3o de texto no bot\'E3o buscar}\par
153     ui->lineEditLdat->setEnabled({\cf17 false});    {\cf20 //Desativa altera\'E7\'E3o no lineEditLdat para que s\'F3 possa ser alterado pela inser\'E7\'E3o de texto no bot\'E3o buscar}\par
154 \}\par
}
}
{\xe \v insereQssPlaceHolderLineEdit\:MainWindow}
{\xe \v MainWindow\:insereQssPlaceHolderLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssPlaceHolderLineEdit ()}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 161                                              \{\par
162     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
163 \par
164     ui->lineEditVsoln->setPlaceholderText({\cf22 "Clique em buscar para inserir o caminho do arquivo"}); {\cf20 //Insere Place Holder no LineEdit do Vsoln}\par
165     ui->lineEditThdv->setPlaceholderText({\cf22 "Clique em buscar para inserir o caminho do arquivo"}); {\cf20 //Insere Place Holder no LineEdit do Thdv}\par
166     ui->lineEditThdi->setPlaceholderText({\cf22 "Clique em buscar para inserir o caminho do arquivo"}); {\cf20 //Insere Place Holder no LineEdit do Thdi}\par
167     ui->lineEditIsoln->setPlaceholderText({\cf22 "Clique em buscar para inserir o caminho do arquivo"}); {\cf20 //Insere Place Holder no LineEdit do Isoln}\par
168     ui->lineEditLdat->setPlaceholderText({\cf22 "Clique em buscar para inserir o caminho do arquivo"}); {\cf20 //Insere Place Holder no LineEdit do Ldat}\par
169 \}\par
}
}
{\xe \v insereQssTitulosLineEdit\:MainWindow}
{\xe \v MainWindow\:insereQssTitulosLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssTitulosLineEdit ()}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 125                                          \{\par
126     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
127 \par
128     ui->txtVsoln->setStyleSheet(style.cssTxtArquivos); {\cf20 // Insere Qss No titulo acima do LineEdit Vsoln}\par
129     ui->txtThdv->setStyleSheet(style.cssTxtArquivos); {\cf20 // Insere Qss No titulo acima do LineEdit Thdv}\par
130     ui->txtThdi->setStyleSheet(style.cssTxtArquivos); {\cf20 // Insere Qss No titulo acima do LineEdit Thdi}\par
131     ui->txtIsoln->setStyleSheet(style.cssTxtArquivos); {\cf20 // Insere Qss No titulo acima do LineEdit Isoln}\par
132     ui->txtLdat->setStyleSheet(style.cssTxtArquivos); {\cf20 // Insere Qss No titulo acima do LineEdit Ldat}\par
133     ui->frameArquivos->setStyleSheet(style.cssFrameArq); {\cf20 // Insere Qss no Frame da Barra Arquivos}\par
134 \}\par
}
}
{\xe \v setaFileNameNosArq\:MainWindow}
{\xe \v MainWindow\:setaFileNameNosArq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::setaFileNameNosArq ()}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 253                                    \{\par
254     arquivoVsoln->setFileName(ui->lineEditVsoln->text());   {\cf20 //seta FileName no arquivoVsoln}\par
255     arquivoThdi->setFileName(ui->lineEditThdi->text());     {\cf20 //seta FileName no arquivoThdi}\par
256     arquivoThdv->setFileName(ui->lineEditThdv->text());     {\cf20 //seta FileName no arquivoThdv}\par
257     arquivoIsoln->setFileName(ui->lineEditIsoln->text());   {\cf20 //seta FileName no arquivoIsoln}\par
258     arquivoLdat->setFileName(ui->lineEditLdat->text());     {\cf20 //seta FileName no arquivoLdat}\par
259 \}\par
}
}
{\xe \v setStatusDePreenchimento\:MainWindow}
{\xe \v MainWindow\:setStatusDePreenchimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::setStatusDePreenchimento (int  {\i posicao}, bool  {\i status}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 99                                                            \{\par
100         {\cf19 if}(posicao < 5 && posicao >=0)\{\par
101             statusDePreenchimento[posicao]=status;\par
102         \}\par
103     \}\par
}
}
{\xe \v verificarAvanco\:MainWindow}
{\xe \v MainWindow\:verificarAvanco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::verificarAvanco ()}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 491                                 \{\par
492 \par
493      {\cf19 for} ({\cf18 int} i = 0 ; i < 5; i++ ) \{\par
494          {\cf19 if}(!this->getStatusDePreenchimento(i))\{\par
495             {\cf19 return};\par
496          \}\par
497      \}\par
498      ui->btnAvancar->setEnabled({\cf17 true});\par
499 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v arquivoIsoln\:MainWindow}
{\xe \v MainWindow\:arquivoIsoln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoIsoln = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v arquivoLdat\:MainWindow}
{\xe \v MainWindow\:arquivoLdat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoLdat = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v arquivoTensoes\:MainWindow}
{\xe \v MainWindow\:arquivoTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoTensoes = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v arquivoThdi\:MainWindow}
{\xe \v MainWindow\:arquivoThdi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoThdi = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v arquivoThdv\:MainWindow}
{\xe \v MainWindow\:arquivoThdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoThdv = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v arquivoVsoln\:MainWindow}
{\xe \v MainWindow\:arquivoVsoln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoVsoln = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Inicializando as vari\'E1veis est\'E1ticas respons\'E1veis por apontar para os arquivos que ser\'E3o inseridos. A classifica\'E7\'E3o de armazenamento dessas v\'E1riaveis foi definida como static pela necessidade dessa vari\'E1vel ser acessada em outros frames para abertura dos arquivos. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable {\b MainWindow::arquivoVsoln} @variable {\b MainWindow::arquivoIsoln} @variable {\b MainWindow::arquivoThdi} @variable {\b MainWindow::arquivoThdv} @variable {\b MainWindow::arquivoLdat} \par
}}
{\xe \v frameAtual\:MainWindow}
{\xe \v MainWindow\:frameAtual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MainWindow::frameAtual =0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
//Inicializando a vari\'E1vel est\'E1tica que identifica em que frame a aplica\'E7\'E3o est\'E1 rodando. Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable {\b MainWindow::frameAtual} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b mainwindow.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b frametensoes.cpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b mainwindow.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Style\par \pard\plain 
{\tc\tcl2 \v Style}
{\xe \v Style}
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
\par
{
{\f2 #include <style.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b corPrimaria} ="#1E385B"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b corSecundaria} ="#D3D3D3"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b corHoverBtn} ="#325a8f"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b segundaOpcao} ="#c7db79"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b branco} ="#FFFFFF"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b corSelected} ="#63d6db"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssTxt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssTxtSelected}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssStatusFrame} ="background-color:"+{\b corPrimaria}+";"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssTxtArquivos}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssFrameArq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssLineEdit}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssBtn}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssBtnTransition}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssBtnLixeira}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b csstabelaTensoes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssTabelaBarras}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssHeaderTabela}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssTabWidget}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssCheckbox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssComboBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssGroupBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssRadioButton}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssImgExportar} = "border-radius:30px;"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v branco\:Style}
{\xe \v Style\:branco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::branco ="#FFFFFF"}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v corHoverBtn\:Style}
{\xe \v Style\:corHoverBtn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::corHoverBtn ="#325a8f"}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v corPrimaria\:Style}
{\xe \v Style\:corPrimaria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::corPrimaria ="#1E385B"}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v corSecundaria\:Style}
{\xe \v Style\:corSecundaria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::corSecundaria ="#D3D3D3"}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v corSelected\:Style}
{\xe \v Style\:corSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::corSelected ="#63d6db"}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cssBtn\:Style}
{\xe \v Style\:cssBtn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssBtn}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QPushButton\{"}\par
                         {\cf22 "border:2px solid "}+corPrimaria+{\cf22 ";"}\par
                         {\cf22 "font-family: 'Roboto';"}\par
                         {\cf22 "font-size:15px;"}\par
                         {\cf22 "background-color:"}+corPrimaria+{\cf22 ";"}\par
                         {\cf22 "color:white;"}\par
                         {\cf22 "border-radius:5px;\}"}\par
                    {\cf22 "QPushButton:hover\{"}\par
                         {\cf22 "border:2px solid "}+corHoverBtn+{\cf22 ";"}\par
                         {\cf22 "font-size:15px;"}\par
                         {\cf22 "font-weight:bold;"}\par
                         {\cf22 "color:white;"}\par
                         {\cf22 "background-color:"}+corHoverBtn+{\cf22 ";\}"}\par
                    {\cf22 "QPushButton:pressed\{"}\par
                        {\cf22 "background-color: #0D2C4D;"}\par
                        {\cf22 "color: #FFFFFF;\}"}\par
}
}
{\xe \v cssBtnLixeira\:Style}
{\xe \v Style\:cssBtnLixeira}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssBtnLixeira}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QPushButton\{"}\par
                                     {\cf22 "font-family: 'Roboto';"}\par
                                     {\cf22 "font-size:15px;"}\par
                                     {\cf22 "background-color:#8B0000;"}\par
                                     {\cf22 "color:white;"}\par
                                     {\cf22 "border-radius:5px;\}"}\par
                                     {\cf22 "QPushButton:hover\{"}\par
                                     {\cf22 "font-size:15px;"}\par
                                     {\cf22 "font-weight:bold;"}\par
                                     {\cf22 "color:white;"}\par
                                     {\cf22 "background-color:#B22222;\}"}\par
                                     {\cf22 "QPushButton:pressed\{"}\par
                                     {\cf22 "background-color: #CD5C5C;"}\par
                                     {\cf22 "color: #FFFFFF;\}"}\par
}
}
{\xe \v cssBtnTransition\:Style}
{\xe \v Style\:cssBtnTransition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssBtnTransition}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QPushButton\{"}\par
                                     {\cf22 "border:2px solid "}+corPrimaria+{\cf22 ";"}\par
                                     {\cf22 "font-family: 'Roboto';"}\par
                                     {\cf22 "font-size: 15px;"}\par
                                     {\cf22 "background-color:"}+corPrimaria+{\cf22 ";"}\par
                                     {\cf22 "color:white;"}\par
                                     {\cf22 "border-radius:5px;\}"}\par
                             {\cf22 "QPushButton:hover\{"}\par
                                     {\cf22 "border:2px solid "}+corHoverBtn+{\cf22 ";"}\par
                                     {\cf22 "font-size: 15px;"}\par
                                     {\cf22 "font-weight:bold;"}\par
                                     {\cf22 "color:white;"}\par
                                     {\cf22 "background-color:"}+corHoverBtn+{\cf22 ";\}"}\par
                             {\cf22 "QPushButton:pressed\{"}\par
                                     {\cf22 "background-color: #0D2C4D;"}\par
                                     {\cf22 "color: #FFFFFF;\}"}\par
                             {\cf22 "QPushButton:disabled\{"}\par
                                     {\cf22 "border:2px solid #808080;"}\par
                                     {\cf22 "background-color:#808080;\}"}\par
}
}
{\xe \v cssCheckbox\:Style}
{\xe \v Style\:cssCheckbox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssCheckbox}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "QCheckBox\{"}\par
                              {\cf22 "font-size:13px;"}\par
                              {\cf22 "font-weight:bold;"}\par
                              {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"}\par
                          {\cf22 "QCheckBox::indicator\{"}\par
                              {\cf22 "width: 30px;"}\par
                              {\cf22 "height: 30px;\}"}\par
}
}
{\xe \v cssComboBox\:Style}
{\xe \v Style\:cssComboBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssComboBox}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "QComboBox \{"}\par
                          {\cf22 "border-radius: 3px;"}\par
                          {\cf22 "border:1px solid"}+corPrimaria+{\cf22 ";"}\par
                          {\cf22 "color: #1E385B;"}\par
                          {\cf22 "background-color: #FFFFFF;"}\par
                          {\cf22 "\}"}\par
}
}
{\xe \v cssFrameArq\:Style}
{\xe \v Style\:cssFrameArq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssFrameArq}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QFrame\{"}\par
                          {\cf22 "background-color:"}+corSecundaria+{\cf22 ";\}"}\par
}
}
{\xe \v cssGroupBox\:Style}
{\xe \v Style\:cssGroupBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssGroupBox}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "QGroupBox \{"}\par
                          {\cf22 "font-size:15px;"}\par
                          {\cf22 "font-weight:bold;"}\par
                          {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"}\par
}
}
{\xe \v cssHeaderTabela\:Style}
{\xe \v Style\:cssHeaderTabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssHeaderTabela}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "font-family: 'Roboto';"}\par
                            {\cf22 "font-size:17px;"}\par
}
}
{\xe \v cssImgExportar\:Style}
{\xe \v Style\:cssImgExportar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssImgExportar = "border-radius:30px;"}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cssLineEdit\:Style}
{\xe \v Style\:cssLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssLineEdit}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QLineEdit\{"}\par
                            {\cf22 "background-color:"}+branco+{\cf22 ";"}\par
                            {\cf22 "font-size:12px;"}\par
                            {\cf22 "border-radius:3px;\}"}\par
                        {\cf22 "QLineEdit:hover\{"}\par
                            {\cf22 "font-size:20px;"}\par
                            {\cf22 "font-family: 'Roboto';"}\par
                            {\cf22 "border: 2px solid"}+corPrimaria+{\cf22 ";\}"}\par
                        {\cf22 "QLineEdit:disabled\{"}\par
                                          {\cf22 "background-color:#808080;\}"}\par
}
}
{\xe \v cssRadioButton\:Style}
{\xe \v Style\:cssRadioButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssRadioButton}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "QRadioButton \{"}\par
                             {\cf22 "font-size:20px;"}\par
                             {\cf22 "font-family: 'Roboto';"}\par
                             {\cf22 "font-weight:bold;"}\par
                             {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"}\par
}
}
{\xe \v cssStatusFrame\:Style}
{\xe \v Style\:cssStatusFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssStatusFrame ="background-color:"+{\b corPrimaria}+";"}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cssTabelaBarras\:Style}
{\xe \v Style\:cssTabelaBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssTabelaBarras}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v csstabelaTensoes\:Style}
{\xe \v Style\:csstabelaTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::csstabelaTensoes}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cssTabWidget\:Style}
{\xe \v Style\:cssTabWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssTabWidget}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "QTabWidget::pane \{"}\par
                              {\cf22 "border: 2px solid "}+corPrimaria+{\cf22 ";"}\par
                              {\cf22 "border-radius:4px;"}\par
                              {\cf22 "\}"}\par
                              {\cf22 "QTabBar::tab \{"}\par
                               {\cf22 "border-radius:1px;"}\par
                              {\cf22 "background-color: #2E4E7E;"}\par
                              {\cf22 "color: #FFFFFF;"}\par
                              {\cf22 "font-weight: bold;"}\par
                               {\cf22 "min-width: 100px;"}\par
                               {\cf22 "min-height:20px;"}\par
                              {\cf22 "\}"}\par
                              {\cf22 "QTabBar::tab:selected \{"}\par
                              {\cf22 "background-color: #1E385B;"}\par
                              {\cf22 "\}"}\par
                              {\cf22 "QTabBar::tab:focus \{"}\par
                              {\cf22 "border: none;"}\par
                              {\cf22 "font-size: 15px;"}\par
                              {\cf22 "font-weight: 500;"}\par
                              {\cf22 "font-family: 'Roboto';"}\par
                              {\cf22 "color:branco;"}\par
                                         {\cf22 "\}"}\par
}
}
{\xe \v cssTxt\:Style}
{\xe \v Style\:cssTxt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssTxt}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "border:none;"}\par
                   {\cf22 "font-size:15px;"}\par
                   {\cf22 "font-weight:500;"}\par
                   {\cf22 "font-family: 'Roboto';"}\par
                   {\cf22 "color:"}+branco+{\cf22 ";"}\par
}
}
{\xe \v cssTxtArquivos\:Style}
{\xe \v Style\:cssTxtArquivos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssTxtArquivos}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "border:none;"}\par
                            {\cf22 "font-size:15px;"}\par
                            {\cf22 "font-family: 'Roboto';"}\par
                            {\cf22 "font-style:italic;"}\par
                            {\cf22 "font-weight:600;"}\par
                            {\cf22 "color:"}+corPrimaria+{\cf22 ";"}\par
}
}
{\xe \v cssTxtSelected\:Style}
{\xe \v Style\:cssTxtSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssTxtSelected}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "font-size:17px;"}\par
                            {\cf22 "font-weight:bold;"}\par
                            {\cf22 "font-family: 'Roboto';"}\par
                            {\cf22 "color:"}+corSelected+{\cf22 ";"}\par
}
}
{\xe \v segundaOpcao\:Style}
{\xe \v Style\:segundaOpcao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::segundaOpcao ="#c7db79"}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b style.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arquivos{\tc \v Arquivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/animatedhoverbutton.cpp\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/animatedhoverbutton.cpp}
{\xe \v D:/QT/EletricData/animatedhoverbutton.cpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "AnimatedHoverButton.h"}\par
{\f2 #include <QVariantAnimation>}\par
{\f2 #include <QStyleOptionButton>}\par
{\f2 #include <QStylePainter>}\par
{\f2 #include <QEvent>}\par
{\f2 #include "style.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/AnimatedHoverButton.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/AnimatedHoverButton.h}
{\xe \v D:/QT/EletricData/AnimatedHoverButton.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QPushButton>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AnimatedHoverButton}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AnimatedHoverButton.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/AnimatedHoverButton.h}
{\xe \v D:/QT/EletricData/AnimatedHoverButton.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
25 {\cf21 #ifndef ANIMATEDHOVERBUTTON_H}\par
26 {\cf21 #define ANIMATEDHOVERBUTTON_H}\par
27 \par
28 {\cf21 #include <QPushButton>}\par
29 \par
30 {\cf17 class }QVariantAnimation;\par
31 \par
32 {\cf17 class }AnimatedHoverButton : {\cf17 public} QPushButton\par
33 \{\par
34     Q_OBJECT\par
35 {\cf17 public}:\par
36     {\cf17 explicit} AnimatedHoverButton({\cf17 const} QString &text, QWidget *parent = {\cf17 nullptr});\par
37 \par
38     {\cf18 void} setTransitionDuration({\cf18 int} duration);\par
39     {\cf18 bool} event(QEvent *event) {\cf17 override};\par
40 \par
41 {\cf17 protected}:\par
42     {\cf18 void} paintEvent(QPaintEvent *) {\cf17 override};\par
43 \par
44 {\cf17 private}:\par
45     {\cf18 void} animateHover({\cf18 bool} in);\par
46 \par
47     QVariantAnimation *m_transition;\par
48     {\cf18 int} m_duration;\par
49     QColor m_currentColor;\par
50 \};\par
51 \par
52 {\cf21 #endif }{\cf20 // ANIMATEDHOVERBUTTON_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/Barra.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/Barra.h}
{\xe \v D:/QT/EletricData/Barra.h}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QObject>}\par
{\f2 #include <utility>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Barra}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Barra.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/Barra.h}
{\xe \v D:/QT/EletricData/Barra.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef BARRA_H}\par
2 {\cf21 #define BARRA_H}\par
3 \par
4 {\cf21 #include <QObject>}\par
5 {\cf21 #include <utility>}\par
6 \par
7 {\cf17 class }Barra \{\par
8 {\cf17 public}:\par
9     {\cf18 double} getTensaoPu()  \{\par
10         {\cf19 return} tensaoPu;\par
11     \}\par
12 \par
13     {\cf18 void} setTensaoPu({\cf18 double} value) \{\par
14         tensaoPu = value;\par
15     \}\par
16 \par
17     {\cf18 double} getTensaoNominalKv()  \{\par
18         {\cf19 return} tensaoNominalKv;\par
19     \}\par
20 \par
21     {\cf18 void} setTensaoNominalKv({\cf18 double} value) \{\par
22         tensaoNominalKv = value;\par
23     \}\par
24 \par
25     {\cf18 double} getThdvPercent()  \{\par
26         {\cf19 return} thdvPercent;\par
27     \}\par
28 \par
29     {\cf18 void} setThdvPercent({\cf18 double} value) \{\par
30         thdvPercent = value;\par
31     \}\par
32 \par
33     std::map<int, std::pair<std::pair<double, double>, std::pair<int, bool>>> getDti()\{\par
34         {\cf19 return} dti;\par
35     \}\par
36 \par
37     {\cf18 void} somatorioHarmonico({\cf18 int} key1, {\cf18 double} dAbsolut ,  {\cf18 double} dPercent,{\cf18 int} classeTensaoThdi ,{\cf18 bool} poluida ) \{\par
38         this->dti.insert(\{key1,\{\{dAbsolut,dPercent\},\{classeTensaoThdi,poluida\}\}\});\par
39     \}\par
40 \par
41     {\cf18 double} getTensaoEficaz() \{\par
42         {\cf19 return} tensaoEficaz;\par
43     \}\par
44 \par
45     {\cf18 void} setTensaoEficaz({\cf18 double} value) \{\par
46         tensaoEficaz = value;\par
47     \}\par
48 \par
49     {\cf18 int} getClasseTensaoThdv()\{\par
50         {\cf19 return} classeTensaoThdv;\par
51     \}\par
52 \par
53     {\cf18 void} setClasseTensaoThdv({\cf18 int} value)\{\par
54         classeTensaoThdv= value;\par
55     \}\par
56 \par
57     {\cf18 bool} getBarraInfectadaThdv()\{\par
58         {\cf19 return} barraInfectadaThdv;\par
59     \}\par
60 \par
61     {\cf18 void} setbarraInfectadaThdv({\cf18 bool} value)\{\par
62         barraInfectadaThdv = value;\par
63     \}\par
64 \par
65 \par
66 \par
67 \par
68 \par
69 {\cf17 private}:\par
70     {\cf18 double} tensaoPu;\par
71     {\cf18 double} tensaoNominalKv;\par
72     {\cf18 double} thdvPercent;\par
73     {\cf18 double} tensaoEficaz;\par
74     std::map<int, std::pair<std::pair<double, double>, std::pair<int, bool>>> dti;\par
75     {\cf18 int} classeTensaoThdv;\par
76     {\cf18 bool} barraInfectadaThdv;\par
77 \par
78 \par
79 \};\par
80 \par
81 {\cf21 #endif }{\cf20 // BARRA_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/filtrolinha.cpp\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/filtrolinha.cpp}
{\xe \v D:/QT/EletricData/filtrolinha.cpp}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "filtrolinha.h"}\par
{\f2 #include "ui_filtrolinha.h"}\par
{\f2 #include "style.h"}\par
{\f2 #include "framebarras.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::FrameBarras * {\b frameBarras2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v frameBarras2\:filtrolinha.cpp}
{\xe \v filtrolinha.cpp\:frameBarras2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::FrameBarras* frameBarras2}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/filtrolinha.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/filtrolinha.h}
{\xe \v D:/QT/EletricData/filtrolinha.h}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QDialog>}\par
{\f2 #include "ui_filtrolinha.h"}\par
{\f2 #include "ui_framebarras.h"}\par
{\f2 #include "mainwindow.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FiltroLinha}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
<em>Namespaces</em>\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
filtrolinha.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/filtrolinha.h}
{\xe \v D:/QT/EletricData/filtrolinha.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FILTROLINHA_H}\par
2 {\cf21 #define FILTROLINHA_H}\par
3 \par
4 {\cf21 #include <QDialog>}\par
5 {\cf21 #include "ui_filtrolinha.h"}\par
6 {\cf21 #include "ui_framebarras.h"}\par
7 {\cf21 #include "mainwindow.h"}\par
8 {\cf17 namespace }Ui \{\par
9 {\cf17 class }FiltroLinha;\par
10 \}\par
11 \par
12 {\cf17 class }FiltroLinha : {\cf17 public} QDialog\par
13 \{\par
14     Q_OBJECT\par
15 \par
16 {\cf17 public}:\par
17     {\cf17 explicit} FiltroLinha(QWidget *parent = {\cf17 nullptr}, Ui::FrameBarras *fb={\cf17 nullptr});\par
18     ~FiltroLinha();\par
19     {\cf17 static} {\cf18 bool} correntePu;\par
20     {\cf17 static} {\cf18 bool} dht;\par
21     {\cf17 static} {\cf18 bool} dit;\par
22     {\cf17 static} {\cf18 bool} ditPercent;\par
23     {\cf17 static} {\cf18 bool} correnteEficaz;\par
24     {\cf17 static} {\cf18 bool} resistencia;\par
25     {\cf17 static} {\cf18 bool} perdas;\par
26     {\cf17 static} {\cf18 bool} perdasEficaz;\par
27     {\cf17 static} {\cf18 int} indexComboBoxOrigem;\par
28     {\cf17 static} {\cf18 int} indexComboBoxDestino;\par
29 \par
30     {\cf18 void} inserindoQssFiltrosLinha();\par
31     {\cf18 void} inserindoQssCheckBox();\par
32     {\cf18 void} inserindoQssLineEdit();\par
33     {\cf18 void} inserindoQssBtnAplicar();\par
34     {\cf18 void} inserindoQssComboBox();\par
35     {\cf18 void} inserindoQssGroupBox();\par
36     {\cf18 void} inserindoQssJanela();\par
37     {\cf18 void} inicializandoFrame();\par
38     {\cf17 static} QStringList indiceOrigensEscolhidas;\par
39     {\cf17 static} QStringList indiceDestinosEscolhidos;\par
40 \par
41 \par
42 \par
43 {\cf17 private} slots:\par
44 \par
45     {\cf18 void} on_comboBoxOrigem_currentIndexChanged({\cf18 int} index);\par
46 \par
47     {\cf18 void} on_comboBoxDestino_currentIndexChanged({\cf18 int} index);\par
48 \par
49     {\cf18 void} on_btnAplicar_clicked();\par
50 \par
51 {\cf17 private}:\par
52     Ui::FiltroLinha *ui;\par
53 \};\par
54 \par
55 {\cf21 #endif }{\cf20 // FILTROLINHA_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/filtrosbarra.cpp\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/filtrosbarra.cpp}
{\xe \v D:/QT/EletricData/filtrosbarra.cpp}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "filtrosbarra.h"}\par
{\f2 #include "ui_filtrosbarra.h"}\par
{\f2 #include "style.h"}\par
{\f2 #include "framebarras.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::FrameBarras * {\b frameBarras}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v frameBarras\:filtrosbarra.cpp}
{\xe \v filtrosbarra.cpp\:frameBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::FrameBarras* frameBarras}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/filtrosbarra.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/filtrosbarra.h}
{\xe \v D:/QT/EletricData/filtrosbarra.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QDialog>}\par
{\f2 #include "ui_filtrosbarra.h"}\par
{\f2 #include "ui_framebarras.h"}\par
{\f2 #include "mainwindow.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FiltrosBarra}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
<em>Namespaces</em>\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
filtrosbarra.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/filtrosbarra.h}
{\xe \v D:/QT/EletricData/filtrosbarra.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FILTROSBARRA_H}\par
2 {\cf21 #define FILTROSBARRA_H}\par
3 \par
4 {\cf21 #include <QDialog>}\par
5 {\cf21 #include "ui_filtrosbarra.h"}\par
6 {\cf21 #include "ui_framebarras.h"}\par
7 {\cf21 #include "mainwindow.h"}\par
8 \par
9 {\cf17 namespace }Ui \{\par
10 {\cf17 class }FiltrosBarra;\par
11 \}\par
12 \par
13 {\cf17 class }FiltrosBarra : {\cf17 public} QDialog\par
14 \{\par
15     Q_OBJECT\par
16 \par
17 {\cf17 public}:\par
18     {\cf17 explicit} FiltrosBarra(QWidget *parent = {\cf17 nullptr} , Ui::FrameBarras *fb={\cf17 nullptr});\par
19     ~FiltrosBarra();\par
20     Ui::FiltrosBarra* getUi()\{\par
21         {\cf19 return} ui;\par
22     \}\par
23     {\cf17 static} {\cf18 bool} tensaoPu;\par
24     {\cf17 static} {\cf18 bool} tensaoNominal;\par
25     {\cf17 static} {\cf18 bool} thdv;\par
26     {\cf17 static} {\cf18 bool} dit;\par
27     {\cf17 static} {\cf18 bool} ditPercent;\par
28     {\cf17 static} {\cf18 bool} tensaoEficaz;\par
29     {\cf17 static} {\cf18 int} indexComboBox;\par
30     {\cf17 static} QStringList indiceBarrasEscolhidas;\par
31     {\cf18 void} inserindoQssFiltrosBarra();\par
32     {\cf18 void} inserindoQssCheckBox();\par
33     {\cf18 void} inserindoQssLineEdit();\par
34     {\cf18 void} inserindoQssBtnAplicar();\par
35     {\cf18 void} inserindoQssComboBox();\par
36     {\cf18 void} inserindoQssGroupBox();\par
37     {\cf18 void} inserindoQssJanela();\par
38     {\cf18 void} inicializandoFrame();\par
39 \par
40 {\cf17 private} slots:\par
41     {\cf18 void} on_comboBoxFBarra_currentIndexChanged({\cf18 int} index);\par
42 \par
43     {\cf18 void} on_btnAplicar_clicked();\par
44 \par
45 {\cf17 private}:\par
46     Ui::FiltrosBarra *ui;\par
47 \};\par
48 \par
49 {\cf21 #endif }{\cf20 // FILTROSBARRA_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/framebarras.cpp\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/framebarras.cpp}
{\xe \v D:/QT/EletricData/framebarras.cpp}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "framebarras.h"}\par
{\f2 #include "ui_framebarras.h"}\par
{\f2 #include "style.h"}\par
{\f2 #include <QMessageBox>}\par
{\f2 #include <QDebug>}\par
{\f2 #include <QCoreApplication>}\par
{\f2 #include <QtMath>}\par
{\f2 #include "frameexportar.h"}\par
{\f2 #include "frametensoes.h"}\par
{\f2 #include "Barra.h"}\par
{\f2 #include "mainwindow.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::FrameTensoes * {\b frameT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::MainWindow * {\b frameM}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b p}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v frameM\:framebarras.cpp}
{\xe \v framebarras.cpp\:frameM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::MainWindow* frameM}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frameT\:framebarras.cpp}
{\xe \v framebarras.cpp\:frameT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::FrameTensoes* frameT}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v p\:framebarras.cpp}
{\xe \v framebarras.cpp\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget* p}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/framebarras.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/framebarras.h}
{\xe \v D:/QT/EletricData/framebarras.h}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QFrame>}\par
{\f2 #include "ui_frametensoes.h"}\par
{\f2 #include "ui_mainwindow.h"}\par
{\f2 #include "mainwindow.h"}\par
{\f2 #include "frametensoes.h"}\par
{\f2 #include "filtrosbarra.h"}\par
{\f2 #include "ui_filtrosbarra.h"}\par
{\f2 #include "filtrolinha.h"}\par
{\f2 #include "ui_filtrolinha.h"}\par
{\f2 #include "Barra.h"}\par
{\f2 #include "Linha.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FrameBarras}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
<em>Namespaces</em>\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
framebarras.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/framebarras.h}
{\xe \v D:/QT/EletricData/framebarras.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FRAMEBARRAS_H}\par
2 {\cf21 #define FRAMEBARRAS_H}\par
3 \par
4 {\cf21 #include <QFrame>}\par
5 {\cf21 #include "ui_frametensoes.h"}\par
6 {\cf21 #include "ui_mainwindow.h"}\par
7 {\cf21 #include "mainwindow.h"}\par
8 {\cf21 #include "frametensoes.h"}\par
9 {\cf21 #include "filtrosbarra.h"}\par
10 {\cf21 #include "ui_filtrosbarra.h"}\par
11 {\cf21 #include "filtrolinha.h"}\par
12 {\cf21 #include "ui_filtrolinha.h"}\par
13 {\cf21 #include "Barra.h"}\par
14 {\cf21 #include "Linha.h"}\par
15 \par
16 {\cf17 namespace }Ui \{\par
17 {\cf17 class }FrameBarras;\par
18 \}\par
19 \par
20 {\cf17 class }FrameBarras : {\cf17 public} QFrame\par
21 \{\par
22     Q_OBJECT\par
23 \par
24 {\cf17 public}:\par
25     {\cf17 explicit} FrameBarras(QWidget *parent = {\cf17 nullptr}, Ui::MainWindow *mw={\cf17 nullptr},Ui::FrameTensoes *ft={\cf17 nullptr});\par
26     ~FrameBarras();\par
27     {\cf18 int} buscaIndiceHarmMax();\par
28     {\cf17 inline} {\cf18 int} buscaQtdHarm({\cf18 int} );\par
29     {\cf18 int} quantidadeDeBarras();\par
30     {\cf17 static} {\cf18 int} indexTab;\par
31     {\cf17 static} {\cf18 int} indiceHarmMax;\par
32     {\cf17 static} {\cf18 int} numeroDeLinhas;\par
33     {\cf17 static} {\cf18 int} quantidadeDeComponentesHarm;\par
34     {\cf18 void} preencheFrameBarras();\par
35     {\cf18 void} inicializaVariaveisStatic();\par
36     {\cf18 void} inicializaFrame();\par
37     QStringList cabecalhoBarras();\par
38     QStringList cabecalhoLinhas();\par
39     {\cf18 void} preencheBarra();\par
40     {\cf18 void} inicializaBarra();\par
41     QStringList linhasDoSistema();\par
42     {\cf17 inline} {\cf18 double} potencia({\cf18 double} , {\cf18 int} );\par
43     {\cf18 void} insereQssBtnAvancar();\par
44     {\cf18 void} insereQssBtnVoltar();\par
45     {\cf18 void} insereQssTabWidget();\par
46     {\cf18 void} insereQssTableBarras();\par
47     {\cf18 void} insereQssTableLinhas();\par
48     {\cf18 void} insereQssFrameBarras();\par
49     {\cf18 void} preencheTabelaBarra();\par
50     {\cf18 void} preencheTabelaLinha();\par
51     {\cf18 void} preencheLimites();\par
52     {\cf17 static} QList<Barra> barras;\par
53     {\cf17 static} QList<Linha> linhas;\par
54     {\cf18 void} insereQSSBtnFiltrar();\par
55     {\cf18 void} preencheLinha();\par
56     {\cf18 void} inicializaLinha();\par
57     {\cf17 static} {\cf18 bool} filtroLinhaInserido;\par
58     {\cf17 static} {\cf18 bool} filtroBarraInserido;\par
59     {\cf17 static} std::map<int , std::map<int , double >> getLimitesDti()\{\par
60         {\cf19 return} limitesDti;\par
61     \}\par
62 \par
63     {\cf17 static} {\cf18 void} setLimitesDti({\cf18 int} nivelTensao , {\cf18 int} harmonica , {\cf18 double} limite)\{\par
64         limitesDti[nivelTensao][harmonica] = limite;\par
65     \}\par
66 \par
67 \par
68     {\cf18 void} insereBackgroundNasPoluidoras();\par
69     {\cf18 void} atualizarRowBarras();\par
70     {\cf18 void} atualizarColumnBarras();\par
71     {\cf18 void} verificaAvanco();\par
72 \par
73 {\cf17 private} slots:\par
74 \par
75 \par
76     {\cf18 void} on_btnFiltrar_clicked();\par
77 \par
78     {\cf18 void} on_tabLinhas_currentChanged({\cf18 int} index);\par
79 \par
80     {\cf18 void} on_btnVoltar_clicked();\par
81 \par
82     {\cf18 void} on_btnAvancar_clicked();\par
83 \par
84 {\cf17 private}:\par
85     Ui::FrameBarras *ui;\par
86     {\cf17 static} std::map<int , std::map<int , double >> limitesDti;\par
87 \par
88 \};\par
89 \par
90 {\cf21 #endif }{\cf20 // FRAMEBARRAS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/frameexportar.cpp\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/frameexportar.cpp}
{\xe \v D:/QT/EletricData/frameexportar.cpp}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "frameexportar.h"}\par
{\f2 #include "ui_frameexportar.h"}\par
{\f2 #include "style.h"}\par
{\f2 #include "mainwindow.h"}\par
{\f2 #include "ui_mainwindow.h"}\par
{\f2 #include "framebarras.h"}\par
{\f2 #include "ui_framebarras.h"}\par
{\f2 #include <QMessageBox>}\par
{\f2 #include <QDir>}\par
{\f2 #include <QDesktopServices>}\par
{\f2 #include <QFileDialog>}\par
{\f2 #include <QDebug>}\par
{\f2 #include <QFont>}\par
{\f2 #include <QPdfWriter>}\par
{\f2 #include <QUrl>}\par
{\f2 #include <QPainter>}\par
{\f2 #include <QFontMetrics>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::MainWindow * {\b frameMa}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::FrameBarras * {\b frameB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b pa}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v frameB\:frameexportar.cpp}
{\xe \v frameexportar.cpp\:frameB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::FrameBarras* frameB}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frameMa\:frameexportar.cpp}
{\xe \v frameexportar.cpp\:frameMa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::MainWindow* frameMa}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pa\:frameexportar.cpp}
{\xe \v frameexportar.cpp\:pa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget* pa}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/frameexportar.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/frameexportar.h}
{\xe \v D:/QT/EletricData/frameexportar.h}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QFrame>}\par
{\f2 #include "ui_mainwindow.h"}\par
{\f2 #include "mainwindow.h"}\par
{\f2 #include "ui_framebarras.h"}\par
{\f2 #include "framebarras.h"}\par
{\f2 #include "xlsxdocument.h"}\par
{\f2 #include "xlsxchartsheet.h"}\par
{\f2 #include "xlsxcellrange.h"}\par
{\f2 #include "xlsxchart.h"}\par
{\f2 #include "xlsxrichstring.h"}\par
{\f2 #include "xlsxworkbook.h"}\par
{\f2 #include <QPdfWriter>}\par
{\f2 #include <QPrinter>}\par
{\f2 #include <QPainter>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FrameExportar}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
<em>Namespaces</em>\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
frameexportar.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/frameexportar.h}
{\xe \v D:/QT/EletricData/frameexportar.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FRAMEEXPORTAR_H}\par
2 {\cf21 #define FRAMEEXPORTAR_H}\par
3 \par
4 {\cf21 #include <QFrame>}\par
5 {\cf21 #include "ui_mainwindow.h"}\par
6 {\cf21 #include "mainwindow.h"}\par
7 {\cf21 #include "ui_framebarras.h"}\par
8 {\cf21 #include "framebarras.h"}\par
9 {\cf21 #include "xlsxdocument.h"}\par
10 {\cf21 #include "xlsxchartsheet.h"}\par
11 {\cf21 #include "xlsxcellrange.h"}\par
12 {\cf21 #include "xlsxchart.h"}\par
13 {\cf21 #include "xlsxrichstring.h"}\par
14 {\cf21 #include "xlsxworkbook.h"}\par
15 {\cf21 #include <QPdfWriter>}\par
16 {\cf21 #include <QPrinter>}\par
17 {\cf21 #include<QPainter>}\par
18 {\cf17 using namespace }QXlsx;\par
19 \par
20 \par
21 {\cf17 namespace }Ui \{\par
22 {\cf17 class }FrameExportar;\par
23 \}\par
24 \par
25 {\cf17 class }FrameExportar : {\cf17 public} QFrame\par
26 \{\par
27     Q_OBJECT\par
28 \par
29 {\cf17 public}:\par
30     {\cf17 explicit} FrameExportar(QWidget *parent = {\cf17 nullptr}, Ui::MainWindow *mw={\cf17 nullptr},  Ui::FrameBarras *fb={\cf17 nullptr});\par
31     ~FrameExportar();\par
32 \par
33     {\cf18 void} inserirQssFrame();\par
34     {\cf18 void} inserirQssImg();\par
35     {\cf18 void} inserirQssRadioButton();\par
36     {\cf18 void} inserirQssBtn();\par
37     {\cf18 void} inicializaFrame();\par
38     {\cf18 void} imprimirPdfIntervaloBarras();\par
39     {\cf18 void} imprimirPdfCombonentesBarras();\par
40     {\cf18 void} imprimirPdfBarrasInfectadas();\par
41 \par
42     {\cf20 //----------Fun\'E7\'F5es PDF}\par
43     {\cf20 //Fun\'E7\'F5es para imprimir PDF com barras em intervalo}\par
44     {\cf18 void} PdfInterBInterL1InterL2();\par
45     {\cf18 void} PdfInterBInterL1TodL2();\par
46     {\cf18 void} PdfInterBarrasTodL1InterL2();\par
47     {\cf18 void} PdfInterBarrasTodL1TodL2();\par
48     {\cf20 //Fun\'E7\'F5es para imprimir PDF com barras em componentes}\par
49     {\cf18 void} PdfCompBarrasInterL1InterL2();\par
50     {\cf18 void} PdfCompBarrasInterL1TodL2();\par
51     {\cf18 void} PdfCompBarrasTodL1InterL2();\par
52     {\cf18 void} PdfCompBarrasaTodL1TodL2();\par
53     {\cf20 //Fun\'E7\'F5es de para imprimir PDF com barras infectadas}\par
54     {\cf18 void} PdfInfecBarrasInterL1InterL2();\par
55     {\cf18 void} PdfInfecBarrasInterL1TodL2();\par
56     {\cf18 void} PdfInfecBarrasTodL1InterL2();\par
57     {\cf18 void} PdfInfecBarrasTodL1TodL2();\par
58     {\cf20 //Fun\'E7\'F5es Auxiliares}\par
59     {\cf20 //Fun\'E7\'F5es os conteudos com barras em intervalo}\par
60     {\cf18 void} ContInterBInterL1InterL2(QPrinter* );\par
61     {\cf18 void} ContInterBInterL1TodL2(QPrinter* );\par
62     {\cf18 void} ContInterBarrasTodL1InterL2(QPrinter* );\par
63     {\cf18 void} ContInterBarrasTodL1TodL2(QPrinter* );\par
64     {\cf20 //Fun\'E7\'F5es para imprimir PDF com barras em componentes}\par
65     {\cf18 void} ContCompBarrasInterL1InterL2(QPrinter* );\par
66     {\cf18 void} ContCompBarrasInterL1TodL2(QPrinter* );\par
67     {\cf18 void} ContCompBarrasTodL1InterL2(QPrinter* );\par
68     {\cf18 void} ContCompBarrasaTodL1TodL2(QPrinter* );\par
69     {\cf20 //Fun\'E7\'F5es de para imprimir PDF com barras infectadas}\par
70     {\cf18 void} ContInfecBarrasInterL1InterL2(QPrinter* );\par
71     {\cf18 void} ContInfecBarrasInterL1TodL2(QPrinter* );\par
72     {\cf18 void} ContInfecBarrasTodL1InterL2(QPrinter* );\par
73     {\cf18 void} ContInfecBarrasTodL1TodL2(QPrinter* );\par
74 \par
75 \par
76     {\cf20 //cacula quantidade de linhas que uma barra ir\'E1 ocupar no sistema}\par
77     {\cf18 int}  QtdLinhasInfoBarra();\par
78     {\cf18 int}  QtdLinhasInfoLinha();\par
79 \par
80 \par
81 \par
82 \par
83 \par
84     {\cf20 //----------Fun\'E7\'F5es Excel}\par
85     {\cf20 //Fun\'E7\'F5es para imprimir excel com barras em intervalo}\par
86     {\cf18 void} ExcelInterBInterL1InterL2();\par
87     {\cf18 void} ExcelInterBInterL1TodL2();\par
88     {\cf18 void} ExcelInterBarrasTodL1InterL2();\par
89     {\cf18 void} ExcelInterBarrasTodL1TodL2();\par
90     {\cf20 //Fun\'E7\'F5es para imprimir Excel com barras em componentes}\par
91     {\cf18 void} ExcelCompBarrasInterL2InterL2();\par
92     {\cf18 void} ExcelCompBarrasInterL1TodL2();\par
93     {\cf18 void} ExcelCompBarrasTodL1InterL2();\par
94     {\cf18 void} ExcelCompBarrasaTodL1TodL2();\par
95     {\cf20 //Fun\'E7\'F5es de para imprimir Excel com barras infectadas}\par
96     {\cf18 void} ExcelInfecBarrasInterL1InterL2();\par
97     {\cf18 void} ExcelInfecBarrasInterL1TodL2();\par
98     {\cf18 void} ExcelInfecBarrasTodL1InterL2();\par
99     {\cf18 void} ExcelInfecBarrasTodL1TodL2();\par
100     QString numeroParaLetra({\cf18 int} numero);\par
101     {\cf20 //Fun\'E7\'F5es Auxiliares}\par
102     {\cf20 //Cria planilha}\par
103     QXlsx::Document* criaPlanilha();\par
104     {\cf20 //pula linhas entre barras e Linhas}\par
105     {\cf18 void} ExcelPulaLinha({\cf18 int}* );\par
106     {\cf20 //Salva Planilha}\par
107     {\cf18 void} salvaPlanilha(QXlsx::Document* );\par
108     {\cf20 //escreve as barras em intervalo}\par
109     {\cf18 void} ExcelEscreveBarrasIntervalo(QXlsx::Document* , {\cf18 int}* );\par
110     {\cf20 //escreve as barras em componentes}\par
111     {\cf18 void} ExcelEscreveBarrasComp(QXlsx::Document* , {\cf18 int}*  );\par
112     {\cf20 //escreve as barras Infectadas}\par
113     {\cf18 void} ExcelEscreveBarrasInfec(QXlsx::Document* , {\cf18 int}* );\par
114     {\cf20 //escreve Linhas com origens e destinos em estado de componentes}\par
115     {\cf18 void} ExcelEscreveLInterL1InterL2(QXlsx::Document* , {\cf18 int}* );\par
116     {\cf20 //escreve Linhas com origens em estado de componentes e todos destinos}\par
117     {\cf18 void} ExcelEscreveLInterL1TodL2(QXlsx::Document*, {\cf18 int}*  );\par
118     {\cf20 //escreve Linhas com todas origens e destinos em componenetes}\par
119     {\cf18 void} ExcelEscreveLTodL1InterL2(QXlsx::Document* , {\cf18 int}* );\par
120     {\cf20 //escreve Linhas de todas origens e destinos}\par
121     {\cf18 void} ExcelEscreveLTodL1TodL2(QXlsx::Document*, {\cf18 int}* );\par
122 \par
123     {\cf20 //----------fun\'E7\'F5es CSV}\par
124     {\cf20 //Fun\'E7\'F5es para imprimir csv com barras em intervalo}\par
125     {\cf18 void} CsvInterBarrasInterL1InterL2();\par
126     {\cf18 void} CsvInterBarrasInterL1TodL2();\par
127     {\cf18 void} CsvInterBarrasTodL1InterL2();\par
128     {\cf18 void} CsvInterBarrasTodL1TodL2();\par
129     {\cf20 //Fun\'E7\'F5es para imprimir csv com barras em componentes}\par
130     {\cf18 void} CsvCompBarrasInterL2InterL2();\par
131     {\cf18 void} CsvCompBarrasInterL1TodL2();\par
132     {\cf18 void} CsvCompBarrasTodL1InterL2();\par
133     {\cf18 void} CsvCompBarrasaTodL1TodL2();\par
134     {\cf20 //Fun\'E7\'F5es de para imprimir csv com barras infectadas}\par
135     {\cf18 void} CsvInfecBarrasInterL1InterL2();\par
136     {\cf18 void} CsvInfecBarrasInterL1TodL2();\par
137     {\cf18 void} CsvInfecBarrasTodL1InterL2();\par
138     {\cf18 void} CsvInfecBarrasTodL1TodL2();\par
139     {\cf20 //Fun\'E7\'F5es Auxiliares}\par
140     {\cf20 //Cria arquivo}\par
141     QFile* criaArquivo();\par
142     {\cf20 //escreve as barras em intervalo}\par
143     {\cf18 void} CsvEscreveBarrasIntervalo(QTextStream* );\par
144     {\cf20 //escreve as barras em componentes}\par
145     {\cf18 void} CsvEscreveBarrasComp(QTextStream* );\par
146     {\cf20 //escreve as barras Infectadas}\par
147     {\cf18 void} CsvEscreveBarrasInfec(QTextStream* );\par
148     {\cf20 //escreve Linhas com origens e destinos em estado de componentes}\par
149     {\cf18 void} CsvEscreveLInterL1InterL2(QTextStream* );\par
150     {\cf20 //escreve Linhas com origens em estado de componentes e todos destinos}\par
151     {\cf18 void} CsvEscreveLInterL1TodL2(QTextStream* );\par
152     {\cf20 //escreve Linhas com todas origens e destinos em componenetes}\par
153     {\cf18 void} CsvEscreveLTodL1InterL2(QTextStream* );\par
154     {\cf20 //escreve Linhas de todas origens e destinos}\par
155     {\cf18 void} CsvEscreveLTodL1TodL2(QTextStream* );\par
156 \par
157 \par
158 \par
159 \par
160 {\cf17 private} slots:\par
161     {\cf18 void} on_btnVoltar_clicked();\par
162 \par
163     {\cf18 void} on_btnExportar_clicked();\par
164 \par
165 {\cf17 private}:\par
166     Ui::FrameExportar *ui;\par
167 \};\par
168 \par
169 {\cf21 #endif }{\cf20 // FRAMEEXPORTAR_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/frametensoes.cpp\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/frametensoes.cpp}
{\xe \v D:/QT/EletricData/frametensoes.cpp}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "frametensoes.h"}\par
{\f2 #include "framebarras.h"}\par
{\f2 #include <QFile>}\par
{\f2 #include <QFileDialog>}\par
{\f2 #include <QMessageBox>}\par
{\f2 #include <QScrollBar>}\par
{\f2 #include <QDebug>}\par
{\f2 #include <QTextStream>}\par
{\f2 #include "style.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::MainWindow * {\b frameMain}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v frameMain\:frametensoes.cpp}
{\xe \v frametensoes.cpp\:frameMain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::MainWindow* frameMain}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/frametensoes.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/frametensoes.h}
{\xe \v D:/QT/EletricData/frametensoes.h}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QFrame>}\par
{\f2 #include "mainwindow.h"}\par
{\f2 #include "QMainWindow"}\par
{\f2 #include <ui_mainwindow.h>}\par
{\f2 #include <QObject>}\par
{\f2 #include <utility>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FrameTensoes}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
<em>Namespaces</em>\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
frametensoes.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/frametensoes.h}
{\xe \v D:/QT/EletricData/frametensoes.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FRAMETENSOES_H}\par
2 {\cf21 #define FRAMETENSOES_H}\par
3 \par
4 {\cf21 #include <QFrame>}\par
5 {\cf21 #include "mainwindow.h"}\par
6 {\cf21 #include "QMainWindow"}\par
7 {\cf21 #include<ui_mainwindow.h>}\par
8 {\cf21 #include<QObject>}\par
9 {\cf21 #include<utility>}\par
10 \par
11 \par
12 {\cf17 namespace }Ui \{\par
13 {\cf17 class }FrameTensoes;\par
14 {\cf17 class }MainWindow;\par
15 \}\par
16 \par
17 {\cf17 class }FrameTensoes : {\cf17 public} QFrame\par
18 \{\par
19     Q_OBJECT\par
20 \par
21 {\cf17 public}:\par
22     {\cf17 explicit} FrameTensoes(QWidget *parent = {\cf17 nullptr}, Ui::MainWindow *mw={\cf17 nullptr});\par
23     ~FrameTensoes();\par
24     {\cf18 int} quantidadeDeBarras();\par
25     {\cf18 bool} verificaAvanco();\par
26     {\cf17 static} QList<double> tensoesNominais;\par
27     {\cf18 void} insereQssBotaoAvancar();\par
28     {\cf18 void} insereQssImportar();\par
29     {\cf18 void} insereQssBtnVoltar();\par
30     {\cf18 void} insereQssBtnLixeira();\par
31     {\cf18 void} insereQssBtnSalvar();\par
32     {\cf17 inline} {\cf18 void} insereQssFrame();\par
33     {\cf18 void} insereTableTensoes();\par
34     {\cf18 void} insereQssFrameTensoes();\par
35     {\cf17 static} {\cf18 int} numeroDeBarras;\par
36 \par
37 {\cf17 private} slots:\par
38 \par
39 \par
40     {\cf18 void} on_btnVoltar_clicked();\par
41 \par
42     {\cf18 void} on_btnImportar_clicked();\par
43 \par
44     {\cf18 void} on_btnLixeira_clicked();\par
45 \par
46     {\cf18 void} on_btnSalvarTabela_clicked();\par
47 \par
48     {\cf18 void} on_btnAvancar_clicked();\par
49 \par
50 {\cf17 private}:\par
51     Ui::FrameTensoes *ui;\par
52 \};\par
53 \par
54 {\cf21 #endif }{\cf20 // FRAMETENSOES_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/Linha.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/Linha.h}
{\xe \v D:/QT/EletricData/Linha.h}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <utility>}\par
{\f2 #include <QObject>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Linha}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Linha.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/Linha.h}
{\xe \v D:/QT/EletricData/Linha.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef LINHA_H}\par
3 {\cf21 #define LINHA_H}\par
4 {\cf21 #include<utility>}\par
5 {\cf21 #include<QObject>}\par
6 {\cf21 #endif }{\cf20 // LINHA_H}\par
7 \par
8 {\cf17 class }Linha\{\par
9 {\cf17 public}:\par
10     {\cf18 int} getOrigem() \{\par
11         {\cf19 return} origem;\par
12     \}\par
13 \par
14     {\cf18 void} setOrigem({\cf18 int} origem) \{\par
15         this->origem = origem;\par
16     \}\par
17 \par
18     {\cf18 int} getDestino() \{\par
19         {\cf19 return} destino;\par
20     \}\par
21 \par
22     {\cf18 void} setDestino({\cf18 int} destino) \{\par
23         this->destino = destino;\par
24     \}\par
25 \par
26     {\cf18 double} getCorrente() \{\par
27         {\cf19 return} corrente;\par
28     \}\par
29 \par
30     {\cf18 void} setCorrente({\cf18 double} corrente) \{\par
31         this->corrente = corrente;\par
32     \}\par
33 \par
34     {\cf18 double} getDhtPercent() \{\par
35         {\cf19 return} dhtPercent;\par
36     \}\par
37 \par
38     {\cf18 void} setDhtPercent({\cf18 double} dhtPercent) \{\par
39         this->dhtPercent = dhtPercent;\par
40     \}\par
41 \par
42     {\cf18 double} getResistencia() \{\par
43         {\cf19 return} resistencia;\par
44     \}\par
45 \par
46     {\cf18 void} setResistencia({\cf18 double} resistencia) \{\par
47         this->resistencia = resistencia;\par
48     \}\par
49 \par
50     {\cf18 double} getPerdas() \{\par
51         {\cf19 return} perdas;\par
52     \}\par
53 \par
54     {\cf18 void} setPerdas({\cf18 double} perdas) \{\par
55         this->perdas = perdas;\par
56     \}\par
57 \par
58     {\cf18 double} getCorrenteEficaz() \{\par
59         {\cf19 return} correnteEficaz;\par
60     \}\par
61 \par
62     {\cf18 void} setCorrenteEficaz({\cf18 double} correnteEficaz) \{\par
63         this->correnteEficaz = correnteEficaz;\par
64     \}\par
65 \par
66     {\cf18 double} getPerdasEficaz() \{\par
67         {\cf19 return} perdasEficaz;\par
68     \}\par
69 \par
70     {\cf18 void} setPerdasEficaz({\cf18 double} perdasEficaz) \{\par
71         this->perdasEficaz = perdasEficaz;\par
72     \}\par
73 \par
74     {\cf18 bool} getLinhaInfectadaDht() \{\par
75         {\cf19 return} linhaInfectadaDht;\par
76     \}\par
77 \par
78     {\cf18 void} setLinhaInfectadaDht({\cf18 bool} infectada) \{\par
79         linhaInfectadaDht = infectada;\par
80     \}\par
81 \par
82     std::map<int, std::pair<double, double>> getDti()\{\par
83         {\cf19 return} dti;\par
84     \}\par
85 \par
86     {\cf18 void} setDti({\cf18 int} key1, {\cf18 double} dAbsolut ,  {\cf18 double} dPercent) \{\par
87         this->dti.insert(\{key1,\{dAbsolut,dPercent\}\});\par
88     \}\par
89 \par
90 {\cf17 private}:\par
91     {\cf18 int} origem;\par
92     {\cf18 int} destino;\par
93     {\cf18 double} corrente;\par
94     {\cf18 double} dhtPercent;\par
95     {\cf18 double} resistencia;\par
96     {\cf18 double} perdas;\par
97     {\cf18 double} correnteEficaz;\par
98     {\cf18 double} perdasEficaz;\par
99     {\cf18 bool} linhaInfectadaDht;\par
100     std::map<int, std::pair<double, double>> dti;\par
101 \par
102 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/main.cpp\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/main.cpp}
{\xe \v D:/QT/EletricData/main.cpp}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "mainwindow.h"}\par
{\f2 #include <QApplication>}\par
{\f2 #include <QLocale>}\par
{\f2 #include <QTranslator>}\par
{\f2 #include <QTimer>}\par
{\f2 #include <QSplashScreen>}\par
{\f2 #include "filtrosbarra.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12 \{\par
13     QApplication a(argc, argv);\par
14 \par
15     QTranslator translator;\par
16     {\cf17 const} QStringList uiLanguages = QLocale::system().uiLanguages();\par
17     {\cf19 for} ({\cf17 const} QString &locale : uiLanguages) \{\par
18         {\cf17 const} QString baseName = {\cf22 "EletricData_"} + QLocale(locale).name();\par
19         {\cf19 if} (translator.load({\cf22 ":/i18n/"} + baseName)) \{\par
20             a.installTranslator(&translator);\par
21             {\cf19 break};\par
22         \}\par
23     \}\par
24 \par
25     QSplashScreen *telaSplash={\cf17 new} QSplashScreen;\par
26     MainWindow w;\par
27     telaSplash->setPixmap(QPixmap({\cf22 ":/spash/imgs/spash/spash.jpg"}));\par
28     telaSplash->show();\par
29 \par
30     QTimer::singleShot(1000,telaSplash,SLOT(close()));\par
31     QTimer::singleShot(1000,&w,SLOT(show()));\par
32 \par
33 \par
34 \par
35     {\cf19 return} a.exec();\par
36 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/mainwindow.cpp\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/mainwindow.cpp}
{\xe \v D:/QT/EletricData/mainwindow.cpp}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "mainwindow.h"}\par
{\f2 #include "ui_mainwindow.h"}\par
{\f2 #include "style.h"}\par
{\f2 #include <QPropertyAnimation>}\par
{\f2 #include <QApplication>}\par
{\f2 #include "frametensoes.h"}\par
{\f2 #include <QTextStream>}\par
{\f2 #include <QMessageBox>}\par
{\f2 #include <QFileDialog>}\par
{\f2 #include <QFile>}\par
{\f2 #include <QDebug>}\par
{\f2 #include <QtCore/QCoreApplication>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/mainwindow.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/mainwindow.h}
{\xe \v D:/QT/EletricData/mainwindow.h}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QMainWindow>}\par
{\f2 #include <QFile>}\par
{\f2 #include <ui_mainwindow.h>}\par
{\f2 #include "style.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MainWindow}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela Principal do Programa. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
<em>Namespaces</em>\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mainwindow.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/mainwindow.h}
{\xe \v D:/QT/EletricData/mainwindow.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef MAINWINDOW_H}\par
3 {\cf21 #define MAINWINDOW_H}\par
4 \par
5 {\cf21 #include <QMainWindow>}\par
6 {\cf21 #include<QFile>}\par
7 {\cf21 #include<ui_mainwindow.h>}\par
8 {\cf21 #include "style.h"}\par
9 \par
10 \par
11 \par
12 QT_BEGIN_NAMESPACE\par
13 {\cf17 namespace }Ui \{ {\cf17 class }MainWindow; \}\par
14 QT_END_NAMESPACE\par
15 \par
16 {\cf17 class }MainWindow : {\cf17 public} QMainWindow\par
17 \par
18 \{\par
19     Q_OBJECT\par
20 \par
21 {\cf17 public}:\par
22     MainWindow(QWidget *parent = {\cf17 nullptr});\par
23     ~MainWindow();\par
24     {\cf17 static} {\cf18 void} atualizarStatus(Ui::MainWindow *ui)\{\par
25         Style style;\par
26         {\cf19 switch}(frameAtual)\{\par
27         {\cf19 case} 0:\par
28             ui->txtCarregarArquivos->setStyleSheet(style.cssTxtSelected);\par
29             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
30             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
31             ui->txtExportar->setStyleSheet(style.cssTxt);\par
32             ui->lblVerifica1->hide();\par
33             ui->lblVerifica2->hide();\par
34             ui->lblVerifica3->hide();\par
35             ui->lblVerifica4->hide();\par
36             {\cf19 break};\par
37         {\cf19 case} 1:\par
38             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
39             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxtSelected);\par
40             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
41             ui->txtExportar->setStyleSheet(style.cssTxt);\par
42             ui->lblVerifica1->show();\par
43             ui->lblVerifica2->hide();\par
44             ui->lblVerifica3->hide();\par
45             ui->lblVerifica4->hide();\par
46             {\cf19 break};\par
47         {\cf19 case} 2:\par
48             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
49             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
50             ui->txtPrepararSaida->setStyleSheet(style.cssTxtSelected);\par
51             ui->txtExportar->setStyleSheet(style.cssTxt);\par
52             ui->lblVerifica1->show();\par
53             ui->lblVerifica2->show();\par
54             ui->lblVerifica3->hide();\par
55             ui->lblVerifica4->hide();\par
56             {\cf19 break};\par
57         {\cf19 case} 3:\par
58             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
59             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
60             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
61             ui->txtExportar->setStyleSheet(style.cssTxtSelected);\par
62             ui->lblVerifica1->show();\par
63             ui->lblVerifica2->show();\par
64             ui->lblVerifica3->show();\par
65             ui->lblVerifica4->hide();\par
66             {\cf19 break};\par
67         \}\par
68     \}\par
69 \par
70     {\cf18 void} insereCssMainWindow();\par
71     {\cf18 void} insereIcon();\par
72     {\cf18 void} insereQssBarraDeStatus();\par
73     {\cf18 void} verificarAvanco();\par
74     {\cf18 void} insereQssTitulosLineEdit();\par
75     {\cf18 void} insereQssLineEdit();\par
76     {\cf18 void} insereQssPlaceHolderLineEdit();\par
77     {\cf18 void} insereQssBtnArquivos();\par
78     {\cf18 void} insereQssBtnAvancar();\par
79     {\cf18 void} insereQssBtnLixeira();\par
80     {\cf18 void} insereQssLblVerifica();\par
81     {\cf18 void} setaFileNameNosArq();\par
82     {\cf18 void} inicializaFrame();\par
83 \par
84     {\cf17 static} QFile *arquivoVsoln;\par
85     {\cf17 static} QFile *arquivoIsoln;\par
86     {\cf17 static} QFile *arquivoThdi;\par
87     {\cf17 static} QFile *arquivoThdv;\par
88     {\cf17 static} QFile *arquivoLdat;\par
89     {\cf17 static} QFile *arquivoTensoes;\par
90     {\cf17 static} {\cf18 int} frameAtual;\par
91     {\cf18 bool} getStatusDePreenchimento({\cf18 int} posicao)\{\par
92         {\cf19 if}(posicao < 5 && posicao >=0)\{\par
93             {\cf19 return} statusDePreenchimento[posicao];\par
94         \}\par
95         {\cf19 else}\{\par
96             {\cf19 return} {\cf17 false};\par
97         \}\par
98     \}\par
99     {\cf18 void} setStatusDePreenchimento({\cf18 int} posicao, {\cf18 bool} status)\{\par
100         {\cf19 if}(posicao < 5 && posicao >=0)\{\par
101             statusDePreenchimento[posicao]=status;\par
102         \}\par
103     \}\par
104 \par
105 \par
106 {\cf17 private} slots:\par
107     {\cf18 void} on_btnAvancar_clicked();\par
108 \par
109     {\cf18 void} on_btnVsoln_clicked();\par
110 \par
111     {\cf18 void} on_btnThdv_clicked();\par
112 \par
113     {\cf18 void} on_btnThdi_clicked();\par
114 \par
115     {\cf18 void} on_btnIsoln_clicked();\par
116 \par
117     {\cf18 void} on_btnLdat_clicked();\par
118 \par
119     {\cf18 void} on_btnLixeiraVsoln_clicked();\par
120 \par
121     {\cf18 void} on_btnLixeiraThdv_clicked();\par
122 \par
123     {\cf18 void} on_btnLixeiraThdi_clicked();\par
124 \par
125     {\cf18 void} on_btnLixeiraIsoln_clicked();\par
126 \par
127     {\cf18 void} on_btnLixeiraLdat_clicked();\par
128 \par
129 {\cf17 private}:\par
130     Ui::MainWindow *ui;\par
131     {\cf18 bool} statusDePreenchimento[5]\{0\};\par
132 \par
133 \par
134 \par
135     {\cf20 //Metodo para atualizar a barra de Status}\par
136 \par
137 \};\par
138 \par
139 \par
140 \par
141 \par
142 \par
143 {\cf21 #endif }{\cf20 // MAINWINDOW_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo D:/QT/EletricData/style.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/style.h}
{\xe \v D:/QT/EletricData/style.h}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QObject>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Style}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
style.h\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/style.h}
{\xe \v D:/QT/EletricData/style.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef STYLE_H}\par
3 {\cf21 #define STYLE_H}\par
4 {\cf21 #include<QObject>}\par
5 \par
6 {\cf17 class }Style\{\par
7     {\cf17 public}:\par
8     QString corPrimaria={\cf22 "#1E385B"};\par
9     QString corSecundaria={\cf22 "#D3D3D3"};\par
10     QString corHoverBtn={\cf22 "#325a8f"};\par
11     QString segundaOpcao={\cf22 "#c7db79"};\par
12     QString branco={\cf22 "#FFFFFF"};\par
13     QString corSelected={\cf22 "#63d6db"};\par
14     QString cssTxt={\cf22 "border:none;"}\par
15                    {\cf22 "font-size:15px;"}\par
16                    {\cf22 "font-weight:500;"}\par
17                    {\cf22 "font-family: 'Roboto';"}\par
18                    {\cf22 "color:"}+branco+{\cf22 ";"};\par
19     QString cssTxtSelected= {\cf22 "font-size:17px;"}\par
20                             {\cf22 "font-weight:bold;"}\par
21                             {\cf22 "font-family: 'Roboto';"}\par
22                             {\cf22 "color:"}+corSelected+{\cf22 ";"};\par
23     QString cssStatusFrame={\cf22 "background-color:"}+corPrimaria+{\cf22 ";"};\par
24     QString cssTxtArquivos={\cf22 "border:none;"}\par
25                             {\cf22 "font-size:15px;"}\par
26                             {\cf22 "font-family: 'Roboto';"}\par
27                             {\cf22 "font-style:italic;"}\par
28                             {\cf22 "font-weight:600;"}\par
29                             {\cf22 "color:"}+corPrimaria+{\cf22 ";"};\par
30     QString cssFrameArq={\cf22 "QFrame\{"}\par
31                           {\cf22 "background-color:"}+corSecundaria+{\cf22 ";\}"};\par
32     QString cssLineEdit={\cf22 "QLineEdit\{"}\par
33                             {\cf22 "background-color:"}+branco+{\cf22 ";"}\par
34                             {\cf22 "font-size:12px;"}\par
35                             {\cf22 "border-radius:3px;\}"}\par
36                         {\cf22 "QLineEdit:hover\{"}\par
37                             {\cf22 "font-size:20px;"}\par
38                             {\cf22 "font-family: 'Roboto';"}\par
39                             {\cf22 "border: 2px solid"}+corPrimaria+{\cf22 ";\}"}\par
40                         {\cf22 "QLineEdit:disabled\{"}\par
41                                           {\cf22 "background-color:#808080;\}"};\par
42     QString cssBtn={\cf22 "QPushButton\{"}\par
43                          {\cf22 "border:2px solid "}+corPrimaria+{\cf22 ";"}\par
44                          {\cf22 "font-family: 'Roboto';"}\par
45                          {\cf22 "font-size:15px;"}\par
46                          {\cf22 "background-color:"}+corPrimaria+{\cf22 ";"}\par
47                          {\cf22 "color:white;"}\par
48                          {\cf22 "border-radius:5px;\}"}\par
49                     {\cf22 "QPushButton:hover\{"}\par
50                          {\cf22 "border:2px solid "}+corHoverBtn+{\cf22 ";"}\par
51                          {\cf22 "font-size:15px;"}\par
52                          {\cf22 "font-weight:bold;"}\par
53                          {\cf22 "color:white;"}\par
54                          {\cf22 "background-color:"}+corHoverBtn+{\cf22 ";\}"}\par
55                     {\cf22 "QPushButton:pressed\{"}\par
56                         {\cf22 "background-color: #0D2C4D;"}\par
57                         {\cf22 "color: #FFFFFF;\}"};\par
58 \par
59     QString cssBtnTransition={\cf22 "QPushButton\{"}\par
60                                      {\cf22 "border:2px solid "}+corPrimaria+{\cf22 ";"}\par
61                                      {\cf22 "font-family: 'Roboto';"}\par
62                                      {\cf22 "font-size: 15px;"}\par
63                                      {\cf22 "background-color:"}+corPrimaria+{\cf22 ";"}\par
64                                      {\cf22 "color:white;"}\par
65                                      {\cf22 "border-radius:5px;\}"}\par
66                              {\cf22 "QPushButton:hover\{"}\par
67                                      {\cf22 "border:2px solid "}+corHoverBtn+{\cf22 ";"}\par
68                                      {\cf22 "font-size: 15px;"}\par
69                                      {\cf22 "font-weight:bold;"}\par
70                                      {\cf22 "color:white;"}\par
71                                      {\cf22 "background-color:"}+corHoverBtn+{\cf22 ";\}"}\par
72                              {\cf22 "QPushButton:pressed\{"}\par
73                                      {\cf22 "background-color: #0D2C4D;"}\par
74                                      {\cf22 "color: #FFFFFF;\}"}\par
75                              {\cf22 "QPushButton:disabled\{"}\par
76                                      {\cf22 "border:2px solid #808080;"}\par
77                                      {\cf22 "background-color:#808080;\}"};\par
78 \par
79     QString cssBtnLixeira={\cf22 "QPushButton\{"}\par
80                                      {\cf22 "font-family: 'Roboto';"}\par
81                                      {\cf22 "font-size:15px;"}\par
82                                      {\cf22 "background-color:#8B0000;"}\par
83                                      {\cf22 "color:white;"}\par
84                                      {\cf22 "border-radius:5px;\}"}\par
85                                      {\cf22 "QPushButton:hover\{"}\par
86                                      {\cf22 "font-size:15px;"}\par
87                                      {\cf22 "font-weight:bold;"}\par
88                                      {\cf22 "color:white;"}\par
89                                      {\cf22 "background-color:#B22222;\}"}\par
90                                      {\cf22 "QPushButton:pressed\{"}\par
91                                      {\cf22 "background-color: #CD5C5C;"}\par
92                                      {\cf22 "color: #FFFFFF;\}"};\par
93 \par
94     QString csstabelaTensoes={\cf22 "QTableWidget\{font-family: 'Roboto' ;"}\par
95                                {\cf22 "font-size:15px;"}\par
96                                {\cf22 "border:2px solid "}+corPrimaria+{\cf22 ";"}\par
97                                {\cf22 "color: black;"}\par
98                                {\cf22 "border-radius:5px;"}\par
99                                {\cf22 "text-align: center;"}\par
100                                {\cf22 "background-color:#f0f0f0;\}"}\par
101                                {\cf22 "QTableWidget QScrollBar:vertical \{"}\par
102                                {\cf22 "    border: none;"}\par
103                                {\cf22 "    background-color: #f5f5f5;"}\par
104                                {\cf22 "    width: 10px;"}\par
105                                {\cf22 "    margin: 0px 0 0px 0;"}\par
106                                {\cf22 "\}"}\par
107                                {\cf22 "QTableWidget::item\{"}\par
108                                                {\cf22 "background-color: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #F6F6F6, stop:1 #ECECEC);\}"}\par
109                                {\cf22 "QTableWidget QScrollBar::handle:vertical \{"}\par
110                                {\cf22 "    background-color: #d3d3d3;"}\par
111                                {\cf22 "    min-height: 20px;"}\par
112                                {\cf22 "\}"}\par
113                                {\cf22 "QTableWidget QScrollBar::add-line:vertical \{"}\par
114                                {\cf22 "    background-color: #f5f5f5;"}\par
115                                {\cf22 "    height: 20px;"}\par
116                                {\cf22 "    subcontrol-position: bottom;"}\par
117                                {\cf22 "    subcontrol-origin: margin;"}\par
118                                {\cf22 "\}"}\par
119                                {\cf22 "QTableWidget QScrollBar::sub-line:vertical \{"}\par
120                                {\cf22 "    background-color: #f5f5f5;"}\par
121                                {\cf22 "    height: 20px;"}\par
122                                {\cf22 "    subcontrol-position: top;"}\par
123                                {\cf22 "    subcontrol-origin: margin;"}\par
124                                {\cf22 "\}"}\par
125                                {\cf22 "QTableWidget QScrollBar::up-arrow:vertical, QTableWidget QScrollBar::down-arrow:vertical \{"}\par
126                                {\cf22 "    border: none;"}\par
127                                {\cf22 "    background-color: #f5f5f5;"}\par
128                                {\cf22 "    height: 20px;"}\par
129                                {\cf22 "    width: 10px;"}\par
130                                {\cf22 "\}"}\par
131                                {\cf22 "QTableWidget QScrollBar::add-page:vertical, QTableWidget QScrollBar::sub-page:vertical \{"}\par
132                                {\cf22 "    background-color: #f5f5f5;"}\par
133                                {\cf22 "\}"}\par
134                                {\cf22 "QTableWidget::horizontalScrollBar  \{"}\par
135                                     {\cf22 "border: none;"}\par
136                                     {\cf22 "background-color: #F5F5F5;"}\par
137                                     {\cf22 "height: 10px;"}\par
138                                     {\cf22 "margin: 0px 21px 0 21px;\}"}\par
139                                 {\cf22 "QTableWidget::horizontalScrollBar::handle \{"}\par
140                                     {\cf22 "background: #DBDBDB;"}\par
141                                     {\cf22 "    min-width: 20px;\}"}\par
142                                 {\cf22 "QTableWidget::horizontalScrollBar::add-line\{"}\par
143                                 {\cf22 "background-color: none;"}\par
144                                 {\cf22 "width: 20px;"}\par
145                                     {\cf22 "subcontrol-position: right;"}\par
146                                     {\cf22 "subcontrol-origin: margin;\}"}\par
147                                 {\cf22 "QTableWidget::horizontalScrollBar::sub-line \{"}\par
148                                 {\cf22 "background-color: none;"}\par
149                                 {\cf22 "width: 20px;"}\par
150                                     {\cf22 "subcontrol-position: left;"}\par
151                                                {\cf22 "subcontrol-origin: margin;\}"};\par
152 \par
153 \par
154     QString cssTabelaBarras={\cf22 "QTableWidget\{font-family: 'Roboto' ;"}\par
155                                {\cf22 "font-size:15px;"}\par
156                                {\cf22 "color: black;"}\par
157                                {\cf22 "border-radius:25px;"}\par
158                                {\cf22 "text-align: center;"}\par
159                                {\cf22 "background-color:#f0f0f0;\}"}\par
160                               {\cf22 "QTableWidget::verticalScrollBar  \{"}\par
161                                {\cf22 "    border: none;"}\par
162                                {\cf22 "    background-color: #f5f5f5;"}\par
163                                {\cf22 "    width: 10px;"}\par
164                                {\cf22 "    margin: 0px 0 0px 0;"}\par
165                                {\cf22 "\}"}\par
166                               {\cf22 "QTableWidget::verticalScrollBar::handle \{"}\par
167                                {\cf22 "    background-color: #d3d3d3;"}\par
168                                {\cf22 "    min-height: 20px;"}\par
169                                {\cf22 "\}"}\par
170                               {\cf22 "QTableWidget::verticalScrollBar::add-line\{"}\par
171                                {\cf22 "    background-color: #f5f5f5;"}\par
172                                {\cf22 "    height: 20px;"}\par
173                                {\cf22 "    subcontrol-position: bottom;"}\par
174                                {\cf22 "    subcontrol-origin: margin;"}\par
175                                {\cf22 "\}"}\par
176                               {\cf22 "QTableWidget::verticalScrollBar::add-line\{"}\par
177                                {\cf22 "    background-color: #f5f5f5;"}\par
178                                {\cf22 "    height: 20px;"}\par
179                                {\cf22 "    subcontrol-position: top;"}\par
180                                {\cf22 "    subcontrol-origin: margin;"}\par
181                                {\cf22 "\}"}\par
182                                {\cf22 "QTableWidget QScrollBar::up-arrow:vertical, QTableWidget QScrollBar::down-arrow:vertical \{"}\par
183                                {\cf22 "    border: none;"}\par
184                                {\cf22 "    background-color: #f5f5f5;"}\par
185                                {\cf22 "    height: 20px;"}\par
186                                {\cf22 "    width: 10px;"}\par
187                                {\cf22 "\}"}\par
188                                {\cf22 "QHeaderView::section\{"}\par
189                                     {\cf22 "border-bottom:1px solid #D8D8D8;"}\par
190                                     {\cf22 "border-left:0px;"}\par
191                                     {\cf22 "padding-left:5px;"}\par
192                                     {\cf22 "margin:0px;\}"}\par
193                                {\cf22 "QTableWidget QScrollBar::add-page:vertical, QTableWidget QScrollBar::sub-page:vertical \{"}\par
194                                {\cf22 "    background-color: #f5f5f5;"}\par
195                                {\cf22 "\}"}\par
196                                {\cf22 "QTableWidget::horizontalScrollBar  \{"}\par
197                                    {\cf22 "border: none;"}\par
198                                    {\cf22 "background-color: #F5F5F5;"}\par
199                                    {\cf22 "height: 10px;"}\par
200                                    {\cf22 "margin: 0px 21px 0 21px;\}"}\par
201                                {\cf22 "QTableWidget::horizontalScrollBar::handle \{"}\par
202                                    {\cf22 "background: #DBDBDB;"}\par
203                                    {\cf22 "    min-width: 20px;\}"}\par
204                                {\cf22 "QTableWidget::horizontalScrollBar::add-line\{"}\par
205                                    {\cf22 "background-color: none;"}\par
206                                    {\cf22 "width: 20px;"}\par
207                                    {\cf22 "subcontrol-position: right;"}\par
208                                    {\cf22 "subcontrol-origin: margin;\}"}\par
209                                {\cf22 "QTableWidget::horizontalScrollBar::sub-line \{"}\par
210                                {\cf22 "background-color: none;"}\par
211                                {\cf22 "width: 20px;"}\par
212                                {\cf22 "subcontrol-position: left;"}\par
213                                {\cf22 "subcontrol-origin: margin;\}"};\par
214 \par
215 \par
216 \par
217     QString cssHeaderTabela={\cf22 "font-family: 'Roboto';"}\par
218                             {\cf22 "font-size:17px;"}\par
219                             ;\par
220 \par
221     QString cssTabWidget = {\cf22 "QTabWidget::pane \{"}\par
222                               {\cf22 "border: 2px solid "}+corPrimaria+{\cf22 ";"}\par
223                               {\cf22 "border-radius:4px;"}\par
224                               {\cf22 "\}"}\par
225                               {\cf22 "QTabBar::tab \{"}\par
226                                {\cf22 "border-radius:1px;"}\par
227                               {\cf22 "background-color: #2E4E7E;"}\par
228                               {\cf22 "color: #FFFFFF;"}\par
229                               {\cf22 "font-weight: bold;"}\par
230                                {\cf22 "min-width: 100px;"}\par
231                                {\cf22 "min-height:20px;"}\par
232                               {\cf22 "\}"}\par
233                               {\cf22 "QTabBar::tab:selected \{"}\par
234                               {\cf22 "background-color: #1E385B;"}\par
235                               {\cf22 "\}"}\par
236                               {\cf22 "QTabBar::tab:focus \{"}\par
237                               {\cf22 "border: none;"}\par
238                               {\cf22 "font-size: 15px;"}\par
239                               {\cf22 "font-weight: 500;"}\par
240                               {\cf22 "font-family: 'Roboto';"}\par
241                               {\cf22 "color:branco;"}\par
242                                          {\cf22 "\}"};\par
243     QString cssCheckbox = {\cf22 "QCheckBox\{"}\par
244                               {\cf22 "font-size:13px;"}\par
245                               {\cf22 "font-weight:bold;"}\par
246                               {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"}\par
247                           {\cf22 "QCheckBox::indicator\{"}\par
248                               {\cf22 "width: 30px;"}\par
249                               {\cf22 "height: 30px;\}"};\par
250 \par
251     QString cssComboBox = {\cf22 "QComboBox \{"}\par
252                           {\cf22 "border-radius: 3px;"}\par
253                           {\cf22 "border:1px solid"}+corPrimaria+{\cf22 ";"}\par
254                           {\cf22 "color: #1E385B;"}\par
255                           {\cf22 "background-color: #FFFFFF;"}\par
256                           {\cf22 "\}"};\par
257 \par
258     QString cssGroupBox = {\cf22 "QGroupBox \{"}\par
259                           {\cf22 "font-size:15px;"}\par
260                           {\cf22 "font-weight:bold;"}\par
261                           {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"};\par
262 \par
263     QString cssRadioButton = {\cf22 "QRadioButton \{"}\par
264                              {\cf22 "font-size:20px;"}\par
265                              {\cf22 "font-family: 'Roboto';"}\par
266                              {\cf22 "font-weight:bold;"}\par
267                              {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"};\par
268 \par
269     QString cssImgExportar = {\cf22 "border-radius:30px;"};\par
270 \par
271 \par
272 \par
273 \par
274 \par
275 \};\par
276 \par
277 \par
278 \par
279 \par
280 {\cf21 #endif }{\cf20 // STYLE_H}\par
281 \par
282 \par
283 \par
284 \par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par 
\pard\plain 
{\tc \v Sum\'E1rio}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
