{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment EletricData  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0.0 \par
}}EletricData}
{\comment Generated by doxygen 1.9.6.}
{\creatim \yr2023\mo5\dy18\hr4\min0\sec38}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt EletricData}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.0.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Thu May 18 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Namespace List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all namespaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Ui} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Barra\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExportarCsv\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExportarExcel\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExportarPdf\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Linha\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Main\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QDialog
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
FiltroLinha\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FiltrosBarra\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QFrame
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
FrameBarras\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FrameExportar\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FrameTensoes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QMainWindow
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MainWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QPushButton
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
AnimatedHoverButton\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Style\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b AnimatedHoverButton} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Barra} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por armazenar os dados das barras })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExportarCsv} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para csv Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExportarExcel} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para csv Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExportarPdf} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para pdf Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FiltroLinha} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableLinhas do {\b FrameBarras} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FiltrosBarra} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableBarras do {\b FrameBarras} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FrameBarras} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pelo armazenamento dos dados em nos atributos da classes {\b Barra} e {\b Linha}. Al\'E9m de etregar ao us\'FAario uma TabWidget amig\'E1vel, para que possa filtrar os dados que quiser para realizar sua an\'E1lise. @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FrameExportar} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela exporta\'E7\'E3o dos dados em 3 formatos diferentes ( Pdf , Excel e .csv ) @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FrameTensoes} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela aquisi\'E7\'E3o dos dados de tens\'E3o nominal do sistema el\'E9trico @reentrant Essa janela foi construida com 1 frame que se posiciona no mesmo local do frame respons\'E1vel por receber os arquivos no {\b MainWindow}, nele h\'E1 um QTableWidget para inser\'E7\'E3o dos valores das tens\'F5es, seja por inser\'E7\'E3o manual ou para importar um arquivo com esses dados. Al\'E9m de bot\'F5es de salva, avan\'E7ar e voltar })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Linha} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por armazenar os dados das Linhas })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Main} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe principal do programa @reentrant Respons\'E1vel por iniciar o programa, iniciar um spash e o Frame {\b MainWindow} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MainWindow} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela Principal do Programa @reentrant Essa janela foi construida com 2 frames, um com o intuito de funcionar como uma barra de status do andamento da aplica\'E7\'E3o(tendo 4 labels como sinalizadores) e o outro possui componentes repons\'E1veis por receber endere\'E7o de arquivos que ser\'E3o utilizados nos proximos frames para trataemnto de dados })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Style} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por armazenar as QString dos Qss a serem utilizados nas interfaces })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b D:/QT/EletricData/{\b animatedhoverbutton.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b AnimatedHoverButton.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b Barra.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b exportarcsv.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b exportarcsv.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b exportarexcel.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b exportarexcel.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b exportarpdf.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b exportarpdf.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b filtrolinha.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b filtrolinha.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b filtrosbarra.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b filtrosbarra.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b framebarras.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b framebarras.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b frameexportar.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b frameexportar.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b frametensoes.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b frametensoes.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b Linha.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b mainwindow.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b mainwindow.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/QT/EletricData/{\b style.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ui Namespace Reference\par \pard\plain 
{\tc\tcl2 \v Ui}
{\xe \v Ui}
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AnimatedHoverButton Class Reference\par \pard\plain 
{\tc\tcl2 \v AnimatedHoverButton}
{\xe \v AnimatedHoverButton}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par
{
{\f2 #include <AnimatedHoverButton.h>}}\par
Inheritance diagram for AnimatedHoverButton:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_animated_hover_button.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AnimatedHoverButton} (const QString &text, QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTransitionDuration} (int duration)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b event} (QEvent *event) override\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b paintEvent} (QPaintEvent *) override\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AnimatedHoverButton\:AnimatedHoverButton}
{\xe \v AnimatedHoverButton\:AnimatedHoverButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AnimatedHoverButton::AnimatedHoverButton (const QString &  {\i text}, QWidget *  {\i parent} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MIT License\par
Copyright (c) 2018 Michael Scopchanov\par
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                                                                              :\par
36     QPushButton(text, parent),\par
37     m_transition({\cf17 nullptr}),\par
38     m_duration(1000),\par
39     m_currentColor(Qt::transparent)\par
40 \{\par
41 \par
42 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v event\:AnimatedHoverButton}
{\xe \v AnimatedHoverButton\:event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AnimatedHoverButton::event (QEvent *  {\i event}){\f2 [override]}}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50 \{\par
51     {\cf19 switch} (event->type()) \{\par
52     {\cf19 case} QEvent::HoverEnter:\par
53         animateHover({\cf17 true});\par
54         {\cf19 break};\par
55     {\cf19 case} QEvent::HoverLeave:\par
56         animateHover({\cf17 false});\par
57         {\cf19 break};\par
58     {\cf19 default}:\par
59         {\cf19 break};\par
60     \}\par
61 \par
62     {\cf19 return} QPushButton::event(event);\par
63 \}\par
}
}
{\xe \v paintEvent\:AnimatedHoverButton}
{\xe \v AnimatedHoverButton\:paintEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AnimatedHoverButton::paintEvent (QPaintEvent * ){\f2 [override]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 66 \{\par
67     QStylePainter painter({\cf17 this});\par
68     QStyleOptionButton option;\par
69 \par
70     initStyleOption(&option);\par
71 \par
72     option.state &= ~QStyle::State_MouseOver;\par
73 \par
74     painter.drawControl(QStyle::CE_PushButton, option);\par
75     painter.setOpacity(0.25);\par
76     painter.fillRect(rect(), m_currentColor);\par
77 \}\par
}
}
{\xe \v setTransitionDuration\:AnimatedHoverButton}
{\xe \v AnimatedHoverButton\:setTransitionDuration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AnimatedHoverButton::setTransitionDuration (int  {\i duration})}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 45 \{\par
46     m_duration = duration;\par
47 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b AnimatedHoverButton.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b animatedhoverbutton.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Barra Class Reference\par \pard\plain 
{\tc\tcl2 \v Barra}
{\xe \v Barra}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por armazenar os dados das barras. }}\par
{
{\f2 #include <Barra.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTensaoPu} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTensaoPu} (double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTensaoNominalKv} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTensaoNominalKv} (double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getThdvPercent} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setThdvPercent} (double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< int, std::pair< std::pair< double, double >, std::pair< int, bool > > > {\b getDti} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b somatorioHarmonico} (int key1, double dAbsolut, double dPercent, int classeTensaoThdi, bool poluida)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTensaoEficaz} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTensaoEficaz} (double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getClasseTensaoThdv} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClasseTensaoThdv} (int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getBarraInfectadaThdv} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setbarraInfectadaThdv} (bool value)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por armazenar os dados das barras. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getBarraInfectadaThdv\:Barra}
{\xe \v Barra\:getBarraInfectadaThdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Barra::getBarraInfectadaThdv (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 63                                 \{\par
64         {\cf19 return} barraInfectadaThdv;\par
65     \}\par
}
}
{\xe \v getClasseTensaoThdv\:Barra}
{\xe \v Barra\:getClasseTensaoThdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Barra::getClasseTensaoThdv (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 55                              \{\par
56         {\cf19 return} classeTensaoThdv;\par
57     \}\par
}
}
{\xe \v getDti\:Barra}
{\xe \v Barra\:getDti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::map< int, std::pair< std::pair< double, double >, std::pair< int, bool > > > Barra::getDti (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39                                                                               \{\par
40         {\cf19 return} dti;\par
41     \}\par
}
}
{\xe \v getTensaoEficaz\:Barra}
{\xe \v Barra\:getTensaoEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Barra::getTensaoEficaz (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 47                              \{\par
48         {\cf19 return} tensaoEficaz;\par
49     \}\par
}
}
{\xe \v getTensaoNominalKv\:Barra}
{\xe \v Barra\:getTensaoNominalKv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Barra::getTensaoNominalKv (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 23                                  \{\par
24         {\cf19 return} tensaoNominalKv;\par
25     \}\par
}
}
{\xe \v getTensaoPu\:Barra}
{\xe \v Barra\:getTensaoPu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Barra::getTensaoPu (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15                           \{\par
16         {\cf19 return} tensaoPu;\par
17     \}\par
}
}
{\xe \v getThdvPercent\:Barra}
{\xe \v Barra\:getThdvPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Barra::getThdvPercent (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31                              \{\par
32         {\cf19 return} thdvPercent;\par
33     \}\par
}
}
{\xe \v setbarraInfectadaThdv\:Barra}
{\xe \v Barra\:setbarraInfectadaThdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setbarraInfectadaThdv (bool  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 67                                           \{\par
68         barraInfectadaThdv = value;\par
69     \}\par
}
}
{\xe \v setClasseTensaoThdv\:Barra}
{\xe \v Barra\:setClasseTensaoThdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setClasseTensaoThdv (int  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 59                                        \{\par
60         classeTensaoThdv= value;\par
61     \}\par
}
}
{\xe \v setTensaoEficaz\:Barra}
{\xe \v Barra\:setTensaoEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setTensaoEficaz (double  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 51                                        \{\par
52         tensaoEficaz = value;\par
53     \}\par
}
}
{\xe \v setTensaoNominalKv\:Barra}
{\xe \v Barra\:setTensaoNominalKv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setTensaoNominalKv (double  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27                                           \{\par
28         tensaoNominalKv = value;\par
29     \}\par
}
}
{\xe \v setTensaoPu\:Barra}
{\xe \v Barra\:setTensaoPu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setTensaoPu (double  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                    \{\par
20         tensaoPu = value;\par
21     \}\par
}
}
{\xe \v setThdvPercent\:Barra}
{\xe \v Barra\:setThdvPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::setThdvPercent (double  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                                       \{\par
36         thdvPercent = value;\par
37     \}\par
}
}
{\xe \v somatorioHarmonico\:Barra}
{\xe \v Barra\:somatorioHarmonico}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Barra::somatorioHarmonico (int  {\i key1}, double  {\i dAbsolut}, double  {\i dPercent}, int  {\i classeTensaoThdi}, bool  {\i poluida}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 43                                                                                                               \{\par
44         this->dti.insert(\{key1,\{\{dAbsolut,dPercent\},\{classeTensaoThdi,poluida\}\}\});\par
45     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b Barra.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExportarCsv Class Reference\par \pard\plain 
{\tc\tcl2 \v ExportarCsv}
{\xe \v ExportarCsv}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para csv Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos. }}\par
{
{\f2 #include <exportarcsv.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::ExportarCsv\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b ExportarCsv}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExportarCsv} (QWidget *parent=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvInterBarrasInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar um arquivo e inserir a ele os dados seguindo o seguinte filtro escolhido : Um intervalo de barras,com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInterBarrasInterL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvInterBarrasInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar um arquivo e inserir a ele os dados seguindo o seguinte filtro escolhido : Um intervalo de barras,com escolha individual de linhas apenas na origem\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInterBarrasInterL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvInterBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar um arquivo e inserir a ele os dados seguindo o seguinte filtro escolhido : Um intervalo de barras,com escolha individual de linhas apenas no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInterBarrasTodL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvInterBarrasTodL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar um arquivo e inserir a ele os dados seguindo o seguinte filtro escolhido : Escolha individual das barras,com todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInterBarrasTodL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvCompBarrasInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar um arquivo e inserir a ele os dados seguindo o seguinte filtro escolhido : Um intervalo de barras,com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvCompBarrasInterL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvCompBarrasInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar um arquivo e inserir a ele os dados seguindo o seguinte filtro escolhido : Um intervalo de barras,com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvCompBarrasInterL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvCompBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar um arquivo e inserir a ele os dados seguindo o seguinte filtro escolhido : Um intervalo de barras,com todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvCompBarrasTodL1InterL2} ()\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvCompBarrasaTodL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvInfecBarrasInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar um arquivo e inserir a ele os dados seguindo o seguinte filtro escolhido : As barras poluidoras, com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInfecBarrasInterL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvInfecBarrasInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar um arquivo e inserir a ele os dados seguindo o seguinte filtro escolhido : As barras poluidoras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInfecBarrasInterL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvInfecBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar um arquivo e inserir a ele os dados seguindo o seguinte filtro escolhido : As barras poluidoras, com todas as barras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInfecBarrasTodL1InterL2} ()\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvInfecBarrasTodL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::criaArquivo\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo auxiliar respons\'E1vel por criar um arquvo e setar um local de salvamento\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
um arquivo vazio do tipo QFile* \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFile * {\b criaArquivo} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvEscreveBarrasIntervalo\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Um intervalo de Barras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveBarrasIntervalo} (QTextStream *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvEscreveBarrasComp\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Escolha individual das barras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveBarrasComp} (QTextStream *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvEscreveBarrasInfec\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : As barras poluidoras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveBarrasInfec} (QTextStream *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvEscreveLInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : A escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveLInterL1InterL2} (QTextStream *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvEscreveLInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : A escolha individual de linhas apenas na origem\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveLInterL1TodL2} (QTextStream *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarCsv::CsvEscreveLTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveLTodL1InterL2} (QTextStream *)\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CsvEscreveLTodL1TodL2} (QTextStream *)\par
}
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para csv Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ExportarCsv\:ExportarCsv}
{\xe \v ExportarCsv\:ExportarCsv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ExportarCsv::ExportarCsv (QWidget *  {\i parent} = {\f2 nullptr})}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27 \{\par
28     parentExportarCsv = parent;\par
29 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v criaArquivo\:ExportarCsv}
{\xe \v ExportarCsv\:criaArquivo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * ExportarCsv::criaArquivo ()}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1026                                \{\par
1027     {\cf20 //Configura-se um filtro para pesquisa do diretorio}\par
1028     QFile *arquivoSaida = {\cf17 new} QFile();\par
1029     QString filtro={\cf22 "Arquivos separados por virgula (*.csv)"};\par
1030     QString localSalvamento =QFileDialog::getSaveFileName(parentExportarCsv,{\cf22 "Salvar Arquivo"},QDir::homePath(),filtro);\par
1031     arquivoSaida->setFileName(localSalvamento);\par
1032     {\cf19 if}(!arquivoSaida->open(QFile::WriteOnly | QFile::Text))\{\par
1033         {\cf19 if}(arquivoSaida->error() == QFile::OpenError)\{  {\cf20 //verifica se o usuario nao selecionou nenhuma}\par
1034             {\cf19 return} {\cf17 nullptr};\par
1035         \}\par
1036         QMessageBox::warning(parentExportarCsv,{\cf22 "Erro"},{\cf22 "Arquivo n\'E3o p\'F4de ser savo"}); {\cf20 //caso tenha selecionado e n\'E3o tenha conseguido abrir \'E9 enviado uma messagem de erro}\par
1037         {\cf19 return} {\cf17 nullptr};\par
1038     \}\par
1039 \par
1040     {\cf19 return} arquivoSaida;\par
1041 \par
1042 \}\par
}
}
{\xe \v CsvCompBarrasaTodL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvCompBarrasaTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvCompBarrasaTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 151                                           \{\par
152     QFile *arquivoSaida = criaArquivo();\par
153     QTextStream saida(arquivoSaida);\par
154     CsvEscreveBarrasComp(&saida);\par
155     CsvEscreveLTodL1TodL2(&saida);\par
156 \par
157 \par
158     arquivoSaida->flush();\par
159     arquivoSaida->close();\par
160 \}\par
}
}
{\xe \v CsvCompBarrasInterL1InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvCompBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvCompBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 103                                              \{\par
104     QFile *arquivoSaida = criaArquivo();\par
105     QTextStream saida(arquivoSaida);\par
106     CsvEscreveBarrasComp(&saida);\par
107     CsvEscreveLInterL1InterL2(&saida);\par
108     {\cf20 //Linhas}\par
109     arquivoSaida->flush();\par
110     arquivoSaida->close();\par
111 \}\par
}
}
{\xe \v CsvCompBarrasInterL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvCompBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvCompBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 118                                            \{\par
119     QFile *arquivoSaida = criaArquivo();\par
120     QTextStream saida(arquivoSaida);\par
121     CsvEscreveBarrasComp(&saida);\par
122     CsvEscreveLInterL1TodL2(&saida);\par
123 \par
124 \par
125     arquivoSaida->flush();\par
126     arquivoSaida->close();\par
127 \}\par
}
}
{\xe \v CsvCompBarrasTodL1InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvCompBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvCompBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 134                                            \{\par
135     QFile *arquivoSaida = criaArquivo();\par
136     QTextStream saida(arquivoSaida);\par
137     CsvEscreveBarrasComp(&saida);\par
138     CsvEscreveLTodL1InterL2(&saida);\par
139 \par
140 \par
141     arquivoSaida->flush();\par
142     arquivoSaida->close();\par
143 \par
144 \}\par
}
}
{\xe \v CsvEscreveBarrasComp\:ExportarCsv}
{\xe \v ExportarCsv\:CsvEscreveBarrasComp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvEscreveBarrasComp (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 290                                                         \{\par
291     *saida << {\cf22 "Barra"};\par
292     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
293         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
294             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
295                 *saida << {\cf22 ","}+QString::number(i+1);\par
296                 {\cf19 break};\par
297             \}\par
298         \}\par
299     \}\par
300     *saida << Qt::endl;\par
301 \par
302     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
303         *saida << {\cf22 "Tensao na Barra[pu]"} ;\par
304         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
305             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
306                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
307                     *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
308                     {\cf19 break};\par
309                 \}\par
310             \}\par
311         \}\par
312         *saida << Qt::endl;\par
313     \}\par
314     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
315         *saida << {\cf22 "Tensao Nominal[kV]"} ;\par
316         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
317             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
318                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
319                     *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
320                     {\cf19 break};\par
321                 \}\par
322             \}\par
323         \}\par
324         *saida << Qt::endl;\par
325     \}\par
326     {\cf19 if}(FiltrosBarra::thdv)\{\par
327         *saida << {\cf22 "THDV[%]"} ;\par
328         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
329             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
330                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
331                     *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
332                     {\cf19 break};\par
333                 \}\par
334             \}\par
335         \}\par
336         *saida << Qt::endl;\par
337     \}\par
338     {\cf19 if}(FiltrosBarra::dit)\{\par
339         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
340             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[pu]"} ;\par
341             {\cf19 for}({\cf18 int} k = 0 ; k < FrameTensoes::numeroDeBarras ; k++)\{\par
342                 {\cf19 for}({\cf18 int} p = 0 ; p < FiltrosBarra::indiceBarrasEscolhidas.size() ; p++)\{\par
343                     {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(p).toInt()-1) == k )\{\par
344                         *saida << {\cf22 ","}+QString::number(FrameBarras::barras[k].getDti().find(j)->second.first.first,{\cf23 'f'},5);\par
345                         {\cf19 break};\par
346                     \}\par
347                 \}\par
348             \}\par
349             *saida << Qt::endl;\par
350         \}\par
351     \}\par
352 \par
353     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
354         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
355             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"} ;\par
356             {\cf19 for}({\cf18 int} k = 0 ; k < FrameTensoes::numeroDeBarras ; k++)\{\par
357                 {\cf19 for}({\cf18 int} p = 0 ; p < FiltrosBarra::indiceBarrasEscolhidas.size() ; p++)\{\par
358                     {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(p).toInt()-1) == k )\{\par
359                         *saida << {\cf22 ","}+QString::number(FrameBarras::barras[k].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
360                         {\cf19 break};\par
361                     \}\par
362                 \}\par
363             \}\par
364             *saida << Qt::endl;\par
365         \}\par
366     \}\par
367 \par
368     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
369         *saida << {\cf22 "Tensao Eficaz[pu]"} ;\par
370         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
371             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
372                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
373                     *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
374                     {\cf19 break};\par
375                 \}\par
376             \}\par
377         \}\par
378         *saida << Qt::endl;\par
379     \}\par
380 \par
381 \par
382 \}\par
}
}
{\xe \v CsvEscreveBarrasInfec\:ExportarCsv}
{\xe \v ExportarCsv\:CsvEscreveBarrasInfec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvEscreveBarrasInfec (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 389                                                          \{\par
390     *saida << {\cf22 "Barra"};\par
391     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
392         {\cf18 bool} infectada = {\cf17 false};\par
393         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
394             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
395                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
396                     infectada = {\cf17 true};\par
397                     {\cf19 break};\par
398                 \}\par
399             \}\par
400         \}{\cf19 else}\{\par
401             infectada = {\cf17 true};\par
402         \}\par
403         {\cf19 if}(infectada)\{\par
404             *saida << {\cf22 ","}+QString::number(i+1);\par
405         \}\par
406     \}\par
407     *saida << Qt::endl;\par
408     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
409         *saida << {\cf22 "Tensao na Barra[pu]"} ;\par
410         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
411             {\cf18 bool} infectada = {\cf17 false};\par
412             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
413                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
414                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
415                         infectada = {\cf17 true};\par
416                         {\cf19 break};\par
417                     \}\par
418                 \}\par
419             \}{\cf19 else}\{\par
420                 infectada = {\cf17 true};\par
421             \}\par
422             {\cf19 if}(infectada)\{\par
423                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
424             \}\par
425         \}\par
426         *saida << Qt::endl;\par
427     \}\par
428     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
429         *saida << {\cf22 "Tensao Nominal[kV]"} ;\par
430         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
431             {\cf18 bool} infectada = {\cf17 false};\par
432             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
433                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
434                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
435                         infectada = {\cf17 true};\par
436                         {\cf19 break};\par
437                     \}\par
438                 \}\par
439             \}{\cf19 else}\{\par
440                 infectada = {\cf17 true};\par
441             \}\par
442             {\cf19 if}(infectada)\{\par
443                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
444             \}\par
445         \}\par
446         *saida << Qt::endl;\par
447     \}\par
448     {\cf19 if}(FiltrosBarra::thdv)\{\par
449         *saida << {\cf22 "THDV[%]"} ;\par
450         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
451             {\cf18 bool} infectada = {\cf17 false};\par
452             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
453                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
454                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
455                         infectada = {\cf17 true};\par
456                         {\cf19 break};\par
457                     \}\par
458                 \}\par
459             \}{\cf19 else}\{\par
460                 infectada = {\cf17 true};\par
461             \}\par
462             {\cf19 if}(infectada)\{\par
463                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
464             \}\par
465         \}\par
466         *saida << Qt::endl;\par
467     \}\par
468     {\cf19 if}(FiltrosBarra::dit)\{\par
469         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
470             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[pu]"} ;\par
471             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
472                 {\cf18 bool} infectada = {\cf17 false};\par
473                 {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
474                     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
475                         {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
476                             infectada = {\cf17 true};\par
477                             {\cf19 break};\par
478                         \}\par
479                     \}\par
480                 \}{\cf19 else}\{\par
481                     infectada = {\cf17 true};\par
482                 \}\par
483                 {\cf19 if}(infectada)\{\par
484                     *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'f'},5);\par
485                 \}\par
486             \}\par
487             *saida << Qt::endl;\par
488         \}\par
489     \}\par
490     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
491         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
492             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"} ;\par
493             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
494                 {\cf18 bool} infectada = {\cf17 false};\par
495                 {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
496                     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
497                         {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
498                             infectada = {\cf17 true};\par
499                             {\cf19 break};\par
500                         \}\par
501                     \}\par
502                 \}{\cf19 else}\{\par
503                     infectada = {\cf17 true};\par
504                 \}\par
505                 {\cf19 if}(infectada)\{\par
506                     *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
507                 \}\par
508             \}\par
509             *saida << Qt::endl;\par
510         \}\par
511     \}\par
512     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
513         *saida << {\cf22 "THDV[%]"} ;\par
514         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
515             {\cf18 bool} infectada = {\cf17 false};\par
516             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
517                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
518                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
519                         infectada = {\cf17 true};\par
520                         {\cf19 break};\par
521                     \}\par
522                 \}\par
523             \}{\cf19 else}\{\par
524                 infectada = {\cf17 true};\par
525             \}\par
526             {\cf19 if}(infectada)\{\par
527                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
528             \}\par
529         \}\par
530         *saida << Qt::endl;\par
531     \}\par
532 \}\par
}
}
{\xe \v CsvEscreveBarrasIntervalo\:ExportarCsv}
{\xe \v ExportarCsv\:CsvEscreveBarrasIntervalo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvEscreveBarrasIntervalo (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 231                                                              \{\par
232     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
233     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
234     {\cf20 //Barras}\par
235     *saida << {\cf22 "Barra"} ;\par
236     {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
237         *saida << {\cf22 ","}+QString::number(i+1);\par
238     \} *saida << Qt::endl;\par
239     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
240         *saida << {\cf22 "Tensao na Barra[pu]"} ;\par
241         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
242             *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
243         \} *saida << Qt::endl;\par
244     \}\par
245     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
246         *saida << {\cf22 "Tensao Nominal[kV]"} ;\par
247         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
248             *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
249         \} *saida << Qt::endl;\par
250     \}\par
251     {\cf19 if}(FiltrosBarra::thdv)\{\par
252         *saida << {\cf22 "THDV[%]"} ;\par
253         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
254             *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
255         \} *saida << Qt::endl;\par
256     \}\par
257     {\cf19 if}(FiltrosBarra::dit)\{\par
258         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
259             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[pu]"} ;\par
260             {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
261                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'f'},5);\par
262             \} *saida << Qt::endl;\par
263         \}\par
264     \}\par
265     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
266         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
267             *saida << {\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"} ;\par
268             {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
269                 *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
270             \} *saida << Qt::endl;\par
271         \}\par
272     \}\par
273     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
274         *saida << {\cf22 "Tensao Eficaz[pu]"} ;\par
275         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
276             *saida << {\cf22 ","}+QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
277         \} *saida << Qt::endl;\par
278     \}\par
279 \par
280     {\cf19 for}({\cf18 int} i = 0 ; i < 4 ; i++)\{\par
281         *saida << Qt::endl;\par
282     \}\par
283 \}\par
}
}
{\xe \v CsvEscreveLInterL1InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvEscreveLInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvEscreveLInterL1InterL2 (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 539                                                              \{\par
540     *saida << {\cf22 "Linha"} ;\par
541     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
542         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
543         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
544         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
545             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
546                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
547                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
548                         *saida << {\cf22 ","}+QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino);\par
549                     \}\par
550                 \}\par
551             \}\par
552         \}\par
553     \}\par
554     *saida << Qt::endl;\par
555     {\cf19 if}(FiltroLinha::correntePu)\{\par
556         *saida << {\cf22 "Corrente[pu]"};\par
557         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
558             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
559             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
560             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
561                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
562                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
563                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
564                             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
565                         \}\par
566                     \}\par
567                 \}\par
568             \}\par
569         \}\par
570     \}\par
571     *saida << Qt::endl;\par
572     {\cf19 if}(FiltroLinha::dht)\{\par
573         *saida << {\cf22 "DHT[%]"};\par
574         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
575             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
576             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
577             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
578                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
579                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
580                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
581                             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
582                         \}\par
583                     \}\par
584                 \}\par
585             \}\par
586         \}\par
587     \}\par
588     *saida <<Qt::endl;\par
589     {\cf19 if}(FiltroLinha::dit)\{\par
590         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
591             *saida << {\cf22 "DHT"}+QString::number(p);\par
592             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
593                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
594                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
595                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
596                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
597                         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
598                             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
599                                 *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5);\par
600                             \}\par
601                         \}\par
602                     \}\par
603                 \}\par
604             \}\par
605             *saida <<Qt::endl;\par
606         \}\par
607     \}\par
608     {\cf19 if}(FiltroLinha::ditPercent)\{\par
609         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
610             *saida << {\cf22 "DHT"}+QString::number(p)+{\cf22 "[%]"};\par
611             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
612                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
613                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
614                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
615                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
616                         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
617                             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
618                                 *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5);\par
619                             \}\par
620                         \}\par
621                     \}\par
622                 \}\par
623             \}\par
624             *saida <<Qt::endl;\par
625         \}\par
626     \}\par
627     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
628         *saida << {\cf22 "Corrente Eficaz[pu]"};\par
629         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
630             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
631             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
632             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
633                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
634                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
635                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
636                             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
637                         \}\par
638                     \}\par
639                 \}\par
640             \}\par
641         \}\par
642     \}\par
643     *saida << Qt::endl;\par
644     {\cf19 if}(FiltroLinha::resistencia)\{\par
645         *saida << {\cf22 "Resistencia[ohm]"};\par
646         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
647             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
648             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
649             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
650                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
651                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
652                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
653                             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
654                         \}\par
655                     \}\par
656                 \}\par
657             \}\par
658         \}\par
659     \}\par
660     *saida << Qt::endl;\par
661 \par
662     {\cf19 if}(FiltroLinha::perdas)\{\par
663         *saida << {\cf22 "Perdas[pu]"};\par
664         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
665             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
666             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
667             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
668                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
669                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
670                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
671                             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
672                         \}\par
673                     \}\par
674                 \}\par
675             \}\par
676         \}\par
677     \}\par
678     *saida << Qt::endl;\par
679 \par
680     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
681         *saida << {\cf22 "Perdas[pu]"};\par
682         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
683             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
684             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
685             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
686                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
687                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
688                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
689                             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
690                         \}\par
691                     \}\par
692                 \}\par
693             \}\par
694         \}\par
695     \}\par
696     *saida << Qt::endl;\par
697 \par
698 \}\par
}
}
{\xe \v CsvEscreveLInterL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvEscreveLInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvEscreveLInterL1TodL2 (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 705                                                            \{\par
706     *saida << {\cf22 "Linha"} ;\par
707     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
708         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
709         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
710         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
711             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
712                 *saida << {\cf22 ","}+QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino,{\cf23 'f'},5);\par
713             \}\par
714         \}\par
715     \}\par
716     *saida << Qt::endl;\par
717     {\cf19 if}(FiltroLinha::correntePu)\{\par
718         *saida << {\cf22 "Corrente[pu]"};\par
719         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
720             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
721             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
722                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
723                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
724                 \}\par
725             \}\par
726         \}\par
727     \}\par
728     *saida << Qt::endl;\par
729     {\cf19 if}(FiltroLinha::dht)\{\par
730         *saida << {\cf22 "DHT[%]"};\par
731         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
732             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
733             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
734                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
735                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
736                 \}\par
737             \}\par
738         \}\par
739     \}\par
740     *saida <<Qt::endl;\par
741     {\cf19 if}(FiltroLinha::dit)\{\par
742         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
743             *saida << {\cf22 "DHT"}+QString::number(p);\par
744             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
745                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
746                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
747                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
748                         *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5);\par
749                     \}\par
750                 \}\par
751             \}\par
752             *saida <<Qt::endl;\par
753         \}\par
754     \}\par
755     {\cf19 if}(FiltroLinha::ditPercent)\{\par
756         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
757             *saida << {\cf22 "DHT"}+QString::number(p)+{\cf22 "[%]"};\par
758             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
759                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
760                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
761                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
762                         *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5);\par
763                     \}\par
764                 \}\par
765             \}\par
766             *saida <<Qt::endl;\par
767         \}\par
768     \}\par
769     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
770         *saida << {\cf22 "Corrente Eficaz[pu]"};\par
771         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
772             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
773             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
774                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
775                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
776                 \}\par
777             \}\par
778         \}\par
779     \}\par
780     *saida << Qt::endl;\par
781     {\cf19 if}(FiltroLinha::resistencia)\{\par
782         *saida << {\cf22 "Resistencia[ohm]"};\par
783         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
784             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
785             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
786                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
787                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
788                 \}\par
789             \}\par
790         \}\par
791     \}\par
792     *saida << Qt::endl;\par
793 \par
794     {\cf19 if}(FiltroLinha::perdas)\{\par
795         *saida << {\cf22 "Perdas[pu]"};\par
796         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
797             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
798             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
799                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
800                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
801                 \}\par
802             \}\par
803         \}\par
804     \}\par
805     *saida << Qt::endl;\par
806 \par
807     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
808         *saida << {\cf22 "Perdas[pu]"};\par
809         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
810             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
811             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
812                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
813                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
814                 \}\par
815             \}\par
816         \}\par
817     \}\par
818     *saida << Qt::endl;\par
819 \par
820 \}\par
}
}
{\xe \v CsvEscreveLTodL1InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvEscreveLTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvEscreveLTodL1InterL2 (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 827                                                            \{\par
828     *saida << {\cf22 "Linha"} ;\par
829     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
830         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
831         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
832         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
833             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
834                 *saida << {\cf22 ","}+QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino);\par
835             \}\par
836         \}\par
837     \}\par
838     *saida << Qt::endl;\par
839     {\cf19 if}(FiltroLinha::correntePu)\{\par
840         *saida << {\cf22 "Corrente[pu]"};\par
841         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
842             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
843             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
844                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
845                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
846                 \}\par
847             \}\par
848         \}\par
849     \}\par
850     *saida << Qt::endl;\par
851     {\cf19 if}(FiltroLinha::dht)\{\par
852         *saida << {\cf22 "DHT[%]"};\par
853         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
854             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
855             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
856                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
857                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
858                 \}\par
859             \}\par
860         \}\par
861     \}\par
862     *saida <<Qt::endl;\par
863     {\cf19 if}(FiltroLinha::dit)\{\par
864         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
865             *saida << {\cf22 "DHT"}+QString::number(p);\par
866             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
867                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
868                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
869                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
870                         *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5);\par
871                     \}\par
872                 \}\par
873             \}\par
874             *saida <<Qt::endl;\par
875         \}\par
876     \}\par
877     {\cf19 if}(FiltroLinha::ditPercent)\{\par
878         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
879             *saida << {\cf22 "DHT"}+QString::number(p)+{\cf22 "[%]"};\par
880             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
881                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
882                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
883                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
884                         *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5);\par
885                     \}\par
886                 \}\par
887             \}\par
888             *saida <<Qt::endl;\par
889         \}\par
890     \}\par
891     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
892         *saida << {\cf22 "Corrente Eficaz[pu]"};\par
893         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
894             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
895             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
896                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
897                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
898                 \}\par
899             \}\par
900         \}\par
901     \}\par
902     *saida << Qt::endl;\par
903     {\cf19 if}(FiltroLinha::resistencia)\{\par
904         *saida << {\cf22 "Resistencia[ohm]"};\par
905         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
906             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
907             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
908                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
909                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
910                 \}\par
911             \}\par
912         \}\par
913     \}\par
914     *saida << Qt::endl;\par
915 \par
916     {\cf19 if}(FiltroLinha::perdas)\{\par
917         *saida << {\cf22 "Perdas[pu]"};\par
918         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
919             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
920             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
921                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
922                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
923                 \}\par
924             \}\par
925         \}\par
926     \}\par
927     *saida << Qt::endl;\par
928 \par
929     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
930         *saida << {\cf22 "Perdas[pu]"};\par
931         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
932             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
933             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
934                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
935                     *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
936                 \}\par
937             \}\par
938         \}\par
939     \}\par
940     *saida << Qt::endl;\par
941 \}\par
}
}
{\xe \v CsvEscreveLTodL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvEscreveLTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvEscreveLTodL1TodL2 (QTextStream *  {\i saida})}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 948                                                          \{\par
949     *saida << {\cf22 "Linha"} ;\par
950     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
951         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
952         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
953         *saida << {\cf22 ","}+QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino);\par
954     \}\par
955     *saida << Qt::endl;\par
956     {\cf19 if}(FiltroLinha::correntePu)\{\par
957         *saida << {\cf22 "Corrente[pu]"};\par
958         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
959             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
960         \}\par
961     \}\par
962     *saida << Qt::endl;\par
963     {\cf19 if}(FiltroLinha::dht)\{\par
964         *saida << {\cf22 "DHT[%]"};\par
965         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
966             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
967         \}\par
968     \}\par
969     *saida <<Qt::endl;\par
970     {\cf19 if}(FiltroLinha::dit)\{\par
971         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
972             *saida << {\cf22 "DHT"}+QString::number(p);\par
973             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
974                 *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5);\par
975             \}\par
976             *saida <<Qt::endl;\par
977         \}\par
978     \}\par
979     {\cf19 if}(FiltroLinha::ditPercent)\{\par
980         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
981             *saida << {\cf22 "DHT"}+QString::number(p)+{\cf22 "[%]"};\par
982             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
983                 *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5);\par
984             \}\par
985             *saida <<Qt::endl;\par
986         \}\par
987     \}\par
988     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
989         *saida << {\cf22 "Corrente Eficaz[pu]"};\par
990         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
991             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
992         \}\par
993     \}\par
994     *saida << Qt::endl;\par
995     {\cf19 if}(FiltroLinha::resistencia)\{\par
996         *saida << {\cf22 "Resistencia[ohm]"};\par
997         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
998             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
999         \}\par
1000     \}\par
1001     *saida << Qt::endl;\par
1002 \par
1003     {\cf19 if}(FiltroLinha::perdas)\{\par
1004         *saida << {\cf22 "Perdas[pu]"};\par
1005         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1006             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
1007         \}\par
1008     \}\par
1009     *saida << Qt::endl;\par
1010 \par
1011     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
1012         *saida << {\cf22 "Perdas[pu]"};\par
1013         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1014             *saida << {\cf22 ","}+QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
1015         \}\par
1016     \}\par
1017     *saida << Qt::endl;\par
1018 \}\par
}
}
{\xe \v CsvInfecBarrasInterL1InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInfecBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInfecBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 167                                               \{\par
168     QFile *arquivoSaida = criaArquivo();\par
169     QTextStream saida(arquivoSaida);\par
170     CsvEscreveBarrasInfec(&saida);\par
171     CsvEscreveLInterL1InterL2(&saida);\par
172 \par
173 \par
174     arquivoSaida->flush();\par
175     arquivoSaida->close();\par
176 \}\par
}
}
{\xe \v CsvInfecBarrasInterL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInfecBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInfecBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 183                                             \{\par
184     QFile *arquivoSaida = criaArquivo();\par
185     QTextStream saida(arquivoSaida);\par
186     CsvEscreveBarrasInfec(&saida);\par
187     CsvEscreveLInterL1TodL2(&saida);\par
188 \par
189 \par
190     arquivoSaida->flush();\par
191     arquivoSaida->close();\par
192 \}\par
}
}
{\xe \v CsvInfecBarrasTodL1InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInfecBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInfecBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 199                                             \{\par
200     QFile *arquivoSaida = criaArquivo();\par
201     QTextStream saida(arquivoSaida);\par
202     CsvEscreveBarrasInfec(&saida);\par
203     CsvEscreveLTodL1InterL2(&saida);\par
204 \par
205 \par
206     arquivoSaida->flush();\par
207     arquivoSaida->close();\par
208 \}\par
}
}
{\xe \v CsvInfecBarrasTodL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInfecBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInfecBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 215                                           \{\par
216     QFile *arquivoSaida = criaArquivo();\par
217     QTextStream saida(arquivoSaida);\par
218     CsvEscreveBarrasInfec(&saida);\par
219     CsvEscreveLTodL1TodL2(&saida);\par
220 \par
221 \par
222     arquivoSaida->flush();\par
223     arquivoSaida->close();\par
224 \}\par
}
}
{\xe \v CsvInterBarrasInterL1InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInterBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInterBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                               \{\par
38 \par
39     QFile *arquivoSaida = criaArquivo();\par
40     QTextStream saida(arquivoSaida);\par
41 \par
42     CsvEscreveBarrasIntervalo(&saida);\par
43     CsvEscreveLInterL1InterL2(&saida);\par
44     arquivoSaida->flush();\par
45     arquivoSaida->close();\par
46 \}\par
}
}
{\xe \v CsvInterBarrasInterL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInterBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInterBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53                                             \{\par
54     QFile *arquivoSaida = criaArquivo();\par
55     QTextStream saida(arquivoSaida);\par
56 \par
57     CsvEscreveBarrasIntervalo(&saida);\par
58     CsvEscreveLInterL1TodL2(&saida);\par
59 \par
60     arquivoSaida->flush();\par
61     arquivoSaida->close();\par
62 \}\par
}
}
{\xe \v CsvInterBarrasTodL1InterL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInterBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInterBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 69                                             \{\par
70     QFile *arquivoSaida = criaArquivo();\par
71     QTextStream saida(arquivoSaida);\par
72 \par
73     CsvEscreveBarrasIntervalo(&saida);\par
74     CsvEscreveLTodL1InterL2(&saida);\par
75 \par
76     arquivoSaida->flush();\par
77     arquivoSaida->close();\par
78 \}\par
}
}
{\xe \v CsvInterBarrasTodL1TodL2\:ExportarCsv}
{\xe \v ExportarCsv\:CsvInterBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarCsv::CsvInterBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 85                                           \{\par
86 \par
87     QFile *arquivoSaida = criaArquivo();\par
88     QTextStream saida(arquivoSaida);\par
89     CsvEscreveBarrasIntervalo(&saida);\par
90     CsvEscreveLTodL1TodL2(&saida);\par
91 \par
92 \par
93     arquivoSaida->flush();\par
94     arquivoSaida->close();\par
95 \par
96 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b exportarcsv.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b exportarcsv.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExportarExcel Class Reference\par \pard\plain 
{\tc\tcl2 \v ExportarExcel}
{\xe \v ExportarExcel}
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para csv Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos. }}\par
{
{\f2 #include <exportarexcel.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExportarExcel\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b ExportarExcel}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExportarExcel} (QWidget *parent=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelInterBInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar uma planilha e inserir a ela os dados seguindo o seguinte filtro escolhido : Um intervalo de barras,com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInterBInterL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelInterBInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar uma planilha e inserir a ela os dados seguindo o seguinte filtro escolhido : Um intervalo de barras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInterBInterL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelInterBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar uma planilha e inserir a ela os dados seguindo o seguinte filtro escolhido : Um intervalo de barras, com escolha individual de linhas apenas nos destinos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInterBarrasTodL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelInterBarrasTodL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar uma planilha e inserir a ela os dados seguindo o seguinte filtro escolhido : Um intervalo de barras, com todas as linhas.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInterBarrasTodL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelCompBarrasInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar uma planilha e inserir a ela os dados seguindo o seguinte filtro escolhido : Escolha individual das barras, com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelCompBarrasInterL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelCompBarrasInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar uma planilha e inserir a ela os dados seguindo o seguinte filtro escolhido : Escolha individual das barras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelCompBarrasInterL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelCompBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar uma planilha e inserir a ela os dados seguindo o seguinte filtro escolhido : Escolha individual das barras, com escolha individual de linhas apenas nos destinos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelCompBarrasTodL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelCompBarrasaTodL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar uma planilha e inserir a ela os dados seguindo o seguinte filtro escolhido : Escolha individual das barras, com todas as barras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelCompBarrasaTodL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelInfecBarrasInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar uma planilha e inserir a ela os dados seguindo o seguinte filtro escolhido : As barras poluidoras , com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInfecBarrasInterL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelInfecBarrasInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar uma planilha e inserir a ela os dados seguindo o seguinte filtro escolhido : As barras poluidoras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInfecBarrasInterL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelInfecBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar uma planilha e inserir a ela os dados seguindo o seguinte filtro escolhido : As barras poluidoras, com escolha individual de linhas apenas nos detinos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInfecBarrasTodL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelInfecBarrasTodL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar chamada de m\'E9todos que ir\'E3o criar uma planilha e inserir a ela os dados seguindo o seguinte filtro escolhido : As barras poluidoras, com todas as barras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelInfecBarrasTodL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::numeroParaLetra\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo auxiliar respons\'E1vel por converter um numero de um indice em uma QString correspondente a uma posi\'E7\'E3o da coluna do Excel.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i numero} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
a Qstring convertida \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b numeroParaLetra} (int numero)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::criaPlanilha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo auxiliar respons\'E1vel por iniciar uma planilha\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uma planilha vazia do tipo QXlsx::Document* \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QXlsx::Document * {\b criaPlanilha} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelPulaLinha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo auxiliar respons\'E1vel por pular 4 linhas no excel para dar um espa\'E7o entre as informa\'E7\'F5es das barras e das linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i linha} \cell }{\cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelPulaLinha} (int *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::salvaPlanilha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo auxiliar respons\'E1vel por salvar a planiha que em um local escolhido\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i saida} \cell }{\cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b salvaPlanilha} (QXlsx::Document *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelEscreveBarrasIntervalo\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Um intervalo de barras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i saida} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i linha} \cell }{\cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveBarrasIntervalo} (QXlsx::Document *, int *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelEscreveBarrasComp\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Uma escolha individual das barras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i saida} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i linha} \cell }{\cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveBarrasComp} (QXlsx::Document *, int *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelEscreveBarrasInfec\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : AS barras poluidoras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i saida} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i linha} \cell }{\cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveBarrasInfec} (QXlsx::Document *, int *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelEscreveLInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Uma escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i saida} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i linha} \cell }{\cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveLInterL1InterL2} (QXlsx::Document *, int *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarExcel::ExcelEscreveLInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Todas a linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i saida} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i linha} \cell }{\cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveLInterL1TodL2} (QXlsx::Document *, int *)\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveLTodL1InterL2} (QXlsx::Document *, int *)\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExcelEscreveLTodL1TodL2} (QXlsx::Document *, int *)\par
}
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para csv Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ExportarExcel\:ExportarExcel}
{\xe \v ExportarExcel\:ExportarExcel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ExportarExcel::ExportarExcel (QWidget *  {\i parent} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28 \{\par
29     parentExportarExcel = parent;\par
30 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v criaPlanilha\:ExportarExcel}
{\xe \v ExportarExcel\:criaPlanilha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QXlsx::Document * ExportarExcel::criaPlanilha ()}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1135                                           \{\par
1136     QXlsx::Document* planilha = {\cf17 new} QXlsx::Document;\par
1137     {\cf19 return} planilha;\par
1138 \}\par
}
}
{\xe \v ExcelCompBarrasaTodL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelCompBarrasaTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelCompBarrasaTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 149                                               \{\par
150     QXlsx::Document* planilha = criaPlanilha();\par
151     {\cf18 int}* linha = {\cf17 new} int;\par
152     ExcelEscreveBarrasComp(planilha, linha);\par
153     ExcelPulaLinha(linha);\par
154     ExcelEscreveLTodL1TodL2(planilha, linha);\par
155     salvaPlanilha(planilha);\par
156     {\cf17 delete} planilha;\par
157     {\cf17 delete} linha;\par
158 \}\par
}
}
{\xe \v ExcelCompBarrasInterL1InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelCompBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelCompBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 101                                                  \{\par
102     QXlsx::Document* planilha = criaPlanilha();\par
103     {\cf18 int}* linha = {\cf17 new} int;\par
104     ExcelEscreveBarrasComp(planilha, linha);\par
105     ExcelPulaLinha(linha);\par
106     ExcelEscreveLInterL1InterL2(planilha, linha);\par
107     salvaPlanilha(planilha);\par
108     {\cf17 delete} planilha;\par
109     {\cf17 delete} linha;\par
110 \}\par
}
}
{\xe \v ExcelCompBarrasInterL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelCompBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelCompBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 117                                                \{\par
118     QXlsx::Document* planilha = criaPlanilha();\par
119     {\cf18 int}* linha = {\cf17 new} int;\par
120     ExcelEscreveBarrasComp(planilha, linha);\par
121     ExcelPulaLinha(linha);\par
122     ExcelEscreveLInterL1TodL2(planilha, linha);\par
123     salvaPlanilha(planilha);\par
124     {\cf17 delete} planilha;\par
125     {\cf17 delete} linha;\par
126 \}\par
}
}
{\xe \v ExcelCompBarrasTodL1InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelCompBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelCompBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 133                                                \{\par
134     QXlsx::Document* planilha = criaPlanilha();\par
135     {\cf18 int}* linha = {\cf17 new} int;\par
136     ExcelEscreveBarrasComp(planilha, linha);\par
137     ExcelPulaLinha(linha);\par
138     ExcelEscreveLTodL1InterL2(planilha, linha);\par
139     salvaPlanilha(planilha);\par
140     {\cf17 delete} planilha;\par
141     {\cf17 delete} linha;\par
142 \}\par
}
}
{\xe \v ExcelEscreveBarrasComp\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelEscreveBarrasComp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelEscreveBarrasComp (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 307                                                                           \{\par
308 \par
309     saida->write({\cf22 "A1"},{\cf22 "Barra"});\par
310     {\cf18 int} pos = 1;\par
311     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
312         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
313             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
314                 saida->write(QString(numeroParaLetra(pos+1))+{\cf22 "1"},QString::number(i+1));\par
315                 pos++;\par
316                 {\cf19 break};\par
317             \}\par
318         \}\par
319     \}\par
320     *linha = 2;\par
321     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
322         pos = 1 ;\par
323         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o na Barra[pu]"});\par
324             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
325             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
326                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
327                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5));\par
328                     pos++;\par
329                     {\cf19 break};\par
330                 \}\par
331             \}\par
332         \}\par
333         (*linha)++;\par
334     \}\par
335     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
336         pos = 1 ;\par
337         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o Nominal[kV]"});\par
338             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
339             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
340                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
341                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5));\par
342                     pos++;\par
343                     {\cf19 break};\par
344                 \}\par
345             \}\par
346         \}\par
347         (*linha)++;\par
348     \}\par
349     {\cf19 if}(FiltrosBarra::thdv)\{\par
350         pos = 1 ;\par
351         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "THDV[%]"});\par
352         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
353             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
354                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
355                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5));\par
356                     pos++;\par
357                     {\cf19 break};\par
358                 \}\par
359             \}\par
360         \}\par
361         (*linha)++;\par
362     \}\par
363     {\cf19 if}(FiltrosBarra::dit)\{\par
364         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
365             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j));\par
366             pos = 1;\par
367             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
368                 {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
369                     {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
370                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'f'},5));\par
371                         pos++;\par
372                         {\cf19 break};\par
373                     \}\par
374                 \}\par
375             \}\par
376             (*linha)++;\par
377         \}\par
378     \}\par
379     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
380         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
381             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"});\par
382             pos = 1;\par
383             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
384                 {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
385                     {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
386                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5));\par
387                         pos++;\par
388                         {\cf19 break};\par
389                     \}\par
390                 \}\par
391             \}\par
392             (*linha)++;\par
393         \}\par
394     \}\par
395     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
396         pos = 1 ;\par
397         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tensao Eficaz[pu]"});\par
398         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
399             {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
400                 {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
401                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5));\par
402                     pos++;\par
403                     {\cf19 break};\par
404                 \}\par
405             \}\par
406         \}\par
407         (*linha)++;\par
408     \}\par
409 \par
410 \}\par
}
}
{\xe \v ExcelEscreveBarrasInfec\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelEscreveBarrasInfec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelEscreveBarrasInfec (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 418                                                                            \{\par
419     saida->write({\cf22 "A1"},{\cf22 "Barra"});\par
420     {\cf18 int} pos = 1 ;\par
421     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
422         {\cf18 bool} infectada = {\cf17 false};\par
423         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
424             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
425                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
426                     infectada = {\cf17 true};\par
427                     {\cf19 break};\par
428                 \}\par
429             \}\par
430         \}{\cf19 else}\{\par
431             infectada = {\cf17 true};\par
432         \}\par
433         {\cf19 if}(infectada)\{\par
434             saida->write(QString(numeroParaLetra(pos+1))+{\cf22 "1"},QString::number(i+1));\par
435             pos++;\par
436         \}\par
437     \}\par
438     *linha = 2;\par
439     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
440         pos = 1 ;\par
441         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o na Barra[pu]"});\par
442             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
443             {\cf18 bool} infectada = {\cf17 false};\par
444             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
445                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
446                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
447                         infectada = {\cf17 true};\par
448                         {\cf19 break};\par
449                     \}\par
450                 \}\par
451             \}{\cf19 else}\{\par
452                 infectada = {\cf17 true};\par
453             \}\par
454             {\cf19 if}(infectada)\{\par
455                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5));\par
456                 pos++;\par
457             \}\par
458         \}\par
459         (*linha)++;\par
460     \}\par
461     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
462         pos = 1 ;\par
463         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o Nominal[kV]"});\par
464             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
465             {\cf18 bool} infectada = {\cf17 false};\par
466             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
467                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
468                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
469                         infectada = {\cf17 true};\par
470                         {\cf19 break};\par
471                     \}\par
472                 \}\par
473             \}{\cf19 else}\{\par
474                 infectada = {\cf17 true};\par
475             \}\par
476             {\cf19 if}(infectada)\{\par
477                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5));\par
478                 pos++;\par
479             \}\par
480         \}\par
481         (*linha)++;\par
482     \}\par
483     {\cf19 if}(FiltrosBarra::thdv)\{\par
484         pos = 1 ;\par
485         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "THDV[%]"});\par
486         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
487             {\cf18 bool} infectada = {\cf17 false};\par
488             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
489                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
490                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
491                         infectada = {\cf17 true};\par
492                         {\cf19 break};\par
493                     \}\par
494                 \}\par
495             \}{\cf19 else}\{\par
496                 infectada = {\cf17 true};\par
497             \}\par
498             {\cf19 if}(infectada)\{\par
499                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5));\par
500                 pos++;\par
501             \}\par
502         \}\par
503         (*linha)++;\par
504     \}\par
505     {\cf19 if}(FiltrosBarra::dit)\{\par
506         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
507             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j));\par
508             pos = 1;\par
509             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
510                 {\cf18 bool} infectada = {\cf17 false};\par
511                 {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
512                     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
513                         {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
514                             infectada = {\cf17 true};\par
515                             {\cf19 break};\par
516                         \}\par
517                     \}\par
518                 \}{\cf19 else}\{\par
519                     infectada = {\cf17 true};\par
520                 \}\par
521                 {\cf19 if}(infectada)\{\par
522                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'f'},5));\par
523                     pos++;\par
524                 \}\par
525             \}\par
526             (*linha)++;\par
527         \}\par
528     \}\par
529     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
530         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
531             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"});\par
532             pos = 1;\par
533             {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
534                 {\cf18 bool} infectada = {\cf17 false};\par
535                 {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
536                     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
537                         {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
538                             infectada = {\cf17 true};\par
539                             {\cf19 break};\par
540                         \}\par
541                     \}\par
542                 \}{\cf19 else}\{\par
543                     infectada = {\cf17 true};\par
544                 \}\par
545                 {\cf19 if}(infectada)\{\par
546                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5));\par
547                     pos++;\par
548                 \}\par
549             \}\par
550             (*linha)++;\par
551         \}\par
552     \}\par
553     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
554         pos = 1 ;\par
555         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tensao Eficaz[pu]"});\par
556         {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
557             {\cf18 bool} infectada = {\cf17 false};\par
558             {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
559                 {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
560                     {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
561                         infectada = {\cf17 true};\par
562                         {\cf19 break};\par
563                     \}\par
564                 \}\par
565             \}{\cf19 else}\{\par
566                 infectada = {\cf17 true};\par
567             \}\par
568             {\cf19 if}(infectada)\{\par
569                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5));\par
570                 pos++;\par
571             \}\par
572         \}\par
573         (*linha)++;\par
574     \}\par
575 \}\par
}
}
{\xe \v ExcelEscreveBarrasIntervalo\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelEscreveBarrasIntervalo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelEscreveBarrasIntervalo (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 231                                                                                 \{\par
232     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
233     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
234     {\cf20 //Barras}\par
235     saida->write({\cf22 "A1"},{\cf22 "Barra"});\par
236     {\cf19 for}({\cf18 int} i= inicio , pos = 1 ; i <= fim ; i++, pos++)\{\par
237         saida->write(QString(numeroParaLetra(pos+1))+{\cf22 "1"},QString::number(i+1));\par
238     \}\par
239     *linha = 2;\par
240     {\cf19 if}(FiltrosBarra::tensaoPu)\{\par
241         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o na Barra[pu]"});\par
242             {\cf18 int} pos =1 ;\par
243         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
244             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5));\par
245             pos++;\par
246         \}\par
247         (*linha)++;\par
248     \}\par
249     {\cf19 if}(FiltrosBarra::tensaoNominal)\{\par
250         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tens\'E3o Nominal[kV]"});\par
251             {\cf18 int} pos =1 ;\par
252         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
253             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5));\par
254             pos++;\par
255         \}\par
256         (*linha)++;\par
257     \}\par
258     {\cf19 if}(FiltrosBarra::thdv)\{\par
259         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "THDV[%]"});\par
260         {\cf18 int} pos =1 ;\par
261         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
262             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5));\par
263             pos++;\par
264         \}\par
265         (*linha)++;\par
266     \}\par
267     {\cf19 if}(FiltrosBarra::dit)\{\par
268         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
269             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j));\par
270             {\cf18 int} pos =1 ;\par
271             {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
272                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'f'},5));\par
273                 pos++;\par
274             \}\par
275             (*linha)++;\par
276         \}\par
277     \}\par
278     {\cf19 if}(FiltrosBarra::ditPercent)\{\par
279         {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
280             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(j)+{\cf22 "[%]"});\par
281             {\cf18 int} pos =1 ;\par
282             {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
283                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5));\par
284                 pos++;\par
285             \}\par
286             (*linha)++;\par
287         \}\par
288     \}\par
289     {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
290         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Tensao Eficaz[pu]"});\par
291         {\cf18 int} pos =1 ;\par
292         {\cf19 for}({\cf18 int} i= inicio ; i <= fim ; i++)\{\par
293             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5));\par
294             pos++;\par
295         \}\par
296         (*linha)++;\par
297     \}\par
298 \par
299 \}\par
}
}
{\xe \v ExcelEscreveLInterL1InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelEscreveLInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelEscreveLInterL1InterL2 (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 583                                                                                \{\par
584     saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Linha"});\par
585     {\cf18 int} pos =1;\par
586     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
587         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
588         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
589         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
590             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
591                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
592                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
593                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino));\par
594                         pos++;\par
595                     \}\par
596                 \}\par
597             \}\par
598         \}\par
599     \}\par
600     (*linha)++;\par
601     {\cf19 if}(FiltroLinha::correntePu)\{\par
602         pos =1 ;\par
603         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente[pu]"});\par
604         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
605             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
606             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
607             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
608                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
609                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
610                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
611                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrente()));\par
612                             pos++;\par
613                         \}\par
614                     \}\par
615                 \}\par
616             \}\par
617         \}\par
618         (*linha)++;\par
619     \}\par
620     {\cf19 if}(FiltroLinha::dht)\{\par
621         pos =1 ;\par
622         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "DHT[%]"});\par
623         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
624             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
625             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
626             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
627                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
628                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
629                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
630                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDhtPercent()));\par
631                             pos++;\par
632                         \}\par
633                     \}\par
634                 \}\par
635             \}\par
636         \}\par
637         (*linha)++;\par
638     \}\par
639     {\cf19 if}(FiltroLinha::dit)\{\par
640         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
641             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p));\par
642             pos =1 ;\par
643             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
644                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
645                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
646                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
647                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
648                         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
649                             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
650                                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5));\par
651                                 pos++;\par
652                             \}\par
653                         \}\par
654                     \}\par
655                 \}\par
656             \}\par
657             (*linha)++;\par
658         \}\par
659     \}\par
660     {\cf19 if}(FiltroLinha::ditPercent)\{\par
661         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
662             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p)+{\cf22 "[%]"});\par
663             pos =1 ;\par
664             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
665                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
666                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
667                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
668                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
669                         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
670                             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
671                                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5));\par
672                                 pos++;\par
673                             \}\par
674                         \}\par
675                     \}\par
676                 \}\par
677             \}\par
678             (*linha)++;\par
679         \}\par
680     \}\par
681     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
682         pos =1 ;\par
683         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente Eficaz[pu]"});\par
684         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
685             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
686             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
687             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
688                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
689                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
690                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
691                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrenteEficaz()));\par
692                             pos++;\par
693                         \}\par
694                     \}\par
695                 \}\par
696             \}\par
697         \}\par
698         (*linha)++;\par
699     \}\par
700     {\cf19 if}(FiltroLinha::resistencia)\{\par
701         pos =1 ;\par
702         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Resistencia[ohm]"});\par
703         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
704             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
705             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
706             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
707                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
708                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
709                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
710                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getResistencia()));\par
711                             pos++;\par
712                         \}\par
713                     \}\par
714                 \}\par
715             \}\par
716         \}\par
717         (*linha)++;\par
718     \}\par
719     {\cf19 if}(FiltroLinha::perdas)\{\par
720         pos =1 ;\par
721         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas[pu]"});\par
722         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
723             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
724             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
725             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
726                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
727                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
728                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
729                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdas()));\par
730                             pos++;\par
731                         \}\par
732                     \}\par
733                 \}\par
734             \}\par
735         \}\par
736         (*linha)++;\par
737     \}\par
738     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
739         pos =1 ;\par
740         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas Eficaz[pu]"});\par
741         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
742             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
743             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
744             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
745                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
746                     {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
747                         {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
748                             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdasEficaz()));\par
749                             pos++;\par
750                         \}\par
751                     \}\par
752                 \}\par
753             \}\par
754         \}\par
755         (*linha)++;\par
756     \}\par
757 \par
758 \}\par
}
}
{\xe \v ExcelEscreveLInterL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelEscreveLInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelEscreveLInterL1TodL2 (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 767                                                                              \{\par
768     saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Linha"});\par
769     {\cf18 int} pos = 1;\par
770     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
771         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
772         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
773         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
774             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
775                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino));\par
776                 pos++;\par
777             \}\par
778         \}\par
779     \}\par
780     (*linha)++;\par
781     {\cf19 if}(FiltroLinha::correntePu)\{\par
782         pos = 1;\par
783         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente[pu]"});\par
784         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
785             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
786             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
787                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
788                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrente()));\par
789                     pos++;\par
790                 \}\par
791             \}\par
792         \}\par
793         (*linha)++;\par
794     \}\par
795     {\cf19 if}(FiltroLinha::dht)\{\par
796         pos = 1;\par
797         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "DHT[%]"});\par
798         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
799             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
800             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
801                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
802                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDhtPercent()));\par
803                     pos++;\par
804                 \}\par
805             \}\par
806         \}\par
807         (*linha)++;\par
808     \}\par
809     {\cf19 if}(FiltroLinha::dit)\{\par
810         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
811             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p));\par
812             pos =1 ;\par
813             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
814                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
815                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
816                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
817                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5));\par
818                         pos++;\par
819                     \}\par
820                 \}\par
821             \}\par
822             (*linha)++;\par
823         \}\par
824     \}\par
825     {\cf19 if}(FiltroLinha::ditPercent)\{\par
826         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
827             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p)+{\cf22 "[%]"});\par
828             pos =1 ;\par
829             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
830                 {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
831                 {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
832                     {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
833                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5));\par
834                         pos++;\par
835                     \}\par
836                 \}\par
837             \}\par
838             (*linha)++;\par
839         \}\par
840     \}\par
841     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
842         pos = 1;\par
843         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente Eficaz[pu]"});\par
844         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
845             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
846             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
847                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
848                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrenteEficaz()));\par
849                     pos++;\par
850                 \}\par
851             \}\par
852         \}\par
853         (*linha)++;\par
854     \}\par
855     {\cf19 if}(FiltroLinha::resistencia)\{\par
856         pos = 1;\par
857         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Resistencia[ohm]"});\par
858         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
859             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
860             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
861                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
862                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getResistencia()));\par
863                     pos++;\par
864                 \}\par
865             \}\par
866         \}\par
867         (*linha)++;\par
868     \}\par
869     {\cf19 if}(FiltroLinha::perdas)\{\par
870         pos = 1;\par
871         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas[pu]"});\par
872         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
873             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
874             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
875                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
876                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdas()));\par
877                     pos++;\par
878                 \}\par
879             \}\par
880         \}\par
881         (*linha)++;\par
882     \}\par
883     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
884         pos = 1;\par
885         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas Eficaz[pu]"});\par
886         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
887             {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
888             {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
889                 {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
890                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdasEficaz()));\par
891                     pos++;\par
892                 \}\par
893             \}\par
894         \}\par
895         (*linha)++;\par
896     \}\par
897 \}\par
}
}
{\xe \v ExcelEscreveLTodL1InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelEscreveLTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelEscreveLTodL1InterL2 (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 905                                                                              \{\par
906     saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Linha"});\par
907     {\cf18 int} pos = 1;\par
908     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
909         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
910         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
911         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
912             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
913                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino));\par
914                 pos++;\par
915             \}\par
916         \}\par
917     \}\par
918     (*linha)++;\par
919     {\cf19 if}(FiltroLinha::correntePu)\{\par
920         pos = 1 ;\par
921         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente[pu]"});\par
922         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
923             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
924             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
925                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
926                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrente()));\par
927                     pos++;\par
928                 \}\par
929             \}\par
930         \}\par
931         (*linha)++;\par
932     \}\par
933     {\cf19 if}(FiltroLinha::dht)\{\par
934         pos =1 ;\par
935         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "DHT[%]"});\par
936         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
937             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
938             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
939                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
940                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDhtPercent()));\par
941                     pos++;\par
942                 \}\par
943             \}\par
944         \}\par
945         (*linha)++;\par
946     \}\par
947     {\cf19 if}(FiltroLinha::dit)\{\par
948         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
949             pos =1 ;\par
950             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p));\par
951             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
952                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
953                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
954                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
955                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first,{\cf23 'f'},5));\par
956                         pos++;                    \}\par
957                 \}\par
958             \}\par
959             (*linha)++;\par
960         \}\par
961     \}\par
962     {\cf19 if}(FiltroLinha::ditPercent)\{\par
963         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
964             pos =1 ;\par
965             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p)+{\cf22 "[%]"});\par
966             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
967                 {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
968                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
969                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
970                         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second,{\cf23 'f'},5));\par
971                         pos++;\par
972                     \}\par
973                 \}\par
974             \}\par
975             (*linha)++;\par
976         \}\par
977     \}\par
978     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
979         pos = 1;\par
980         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente Eficaz[pu]"});\par
981         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
982             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
983             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
984                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
985                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrenteEficaz()));\par
986                     pos++;\par
987                 \}\par
988             \}\par
989         \}\par
990         (*linha)++;\par
991     \}\par
992     {\cf19 if}(FiltroLinha::resistencia)\{\par
993         pos = 1;\par
994         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Resistencia[ohm]"});\par
995         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
996             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
997             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
998                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
999                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getResistencia()));\par
1000                     pos++;\par
1001                 \}\par
1002             \}\par
1003         \}\par
1004         (*linha)++;\par
1005     \}\par
1006     {\cf19 if}(FiltroLinha::perdas)\{\par
1007         pos = 1;\par
1008         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas[pu]"});\par
1009         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1010             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
1011             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
1012                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
1013                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdas()));\par
1014                     pos++;\par
1015                 \}\par
1016             \}\par
1017         \}\par
1018         (*linha)++;\par
1019     \}\par
1020     {\cf19 if}(FiltroLinha::perdas)\{\par
1021         pos = 1;\par
1022         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas Eficaz[pu]"});\par
1023         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1024             {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
1025             {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
1026                 {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
1027                     saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdasEficaz()));\par
1028                     pos++;\par
1029                 \}\par
1030             \}\par
1031         \}\par
1032         (*linha)++;\par
1033     \}\par
1034 \}\par
}
}
{\xe \v ExcelEscreveLTodL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelEscreveLTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelEscreveLTodL1TodL2 (QXlsx::Document *  {\i saida}, int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1042                                                                            \{\par
1043     saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Linha"});\par
1044     {\cf18 int} pos = 1;\par
1045     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1046         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
1047         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
1048         saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(barraDeOrigem)+{\cf22 "->"}+QString::number(barraDeDestino));\par
1049         pos++;\par
1050     \}\par
1051     (*linha)++;\par
1052     {\cf19 if}(FiltroLinha::correntePu)\{\par
1053         pos = 1;\par
1054         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente[pu]"});\par
1055         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1056             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrente()));\par
1057             pos++;\par
1058         \}\par
1059         (*linha)++;\par
1060     \}\par
1061     {\cf19 if}(FiltroLinha::dht)\{\par
1062         pos = 1;\par
1063         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "DHT[%]"});\par
1064         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1065             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDhtPercent()));\par
1066             pos++;\par
1067         \}\par
1068         (*linha)++;\par
1069     \}\par
1070     {\cf19 if}(FiltroLinha::dit)\{\par
1071         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
1072             pos = 1 ;\par
1073             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p));\par
1074             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1075                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.first));\par
1076                 pos++;\par
1077             \}\par
1078             (*linha)++;\par
1079         \}\par
1080     \}\par
1081     {\cf19 if}(FiltroLinha::ditPercent)\{\par
1082         {\cf19 for}({\cf18 int} p = 3 ; p <= FrameBarras::indiceHarmMax ; p+=2)\{\par
1083             pos = 1 ;\par
1084             saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "TDI"}+QString::number(p)+{\cf22 "[%]"});\par
1085             {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1086                 saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getDti().find(p)->second.second));\par
1087                 pos++;\par
1088             \}\par
1089             (*linha)++;\par
1090         \}\par
1091     \}\par
1092     {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
1093         pos = 1;\par
1094         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Corrente Eficaz[pu]"});\par
1095         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1096             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getCorrenteEficaz()));\par
1097             pos++;\par
1098         \}\par
1099         (*linha)++;\par
1100     \}\par
1101     {\cf19 if}(FiltroLinha::resistencia)\{\par
1102         pos = 1;\par
1103         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Resistencia[ohm]"});\par
1104         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1105             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getResistencia()));\par
1106             pos++;\par
1107         \}\par
1108         (*linha)++;\par
1109     \}\par
1110     {\cf19 if}(FiltroLinha::perdas)\{\par
1111         pos = 1;\par
1112         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas[pu]"});\par
1113         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1114             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdas()));\par
1115             pos++;\par
1116         \}\par
1117         (*linha)++;\par
1118     \}\par
1119     {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
1120         pos = 1;\par
1121         saida->write({\cf22 "A"}+QString::number(*linha),{\cf22 "Perdas Eficaz[pu]"});\par
1122         {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1123             saida->write(QString(numeroParaLetra(pos+1))+QString::number(*linha),QString::number(FrameBarras::linhas[i].getPerdasEficaz()));\par
1124             pos++;\par
1125         \}\par
1126         (*linha)++;\par
1127     \}\par
1128 \}\par
}
}
{\xe \v ExcelInfecBarrasInterL1InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInfecBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInfecBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 165                                                   \{\par
166     QXlsx::Document* planilha = criaPlanilha();\par
167     {\cf18 int}* linha = {\cf17 new} int;\par
168     ExcelEscreveBarrasInfec(planilha, linha);\par
169     ExcelPulaLinha(linha);\par
170     ExcelEscreveLInterL1InterL2(planilha, linha);\par
171     salvaPlanilha(planilha);\par
172     {\cf17 delete} planilha;\par
173     {\cf17 delete} linha;\par
174 \}\par
}
}
{\xe \v ExcelInfecBarrasInterL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInfecBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInfecBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 181                                                 \{\par
182     QXlsx::Document* planilha = criaPlanilha();\par
183     {\cf18 int}* linha = {\cf17 new} int;\par
184     ExcelEscreveBarrasInfec(planilha, linha);\par
185     ExcelPulaLinha(linha);\par
186     ExcelEscreveLInterL1TodL2(planilha, linha);\par
187     salvaPlanilha(planilha);\par
188     {\cf17 delete} planilha;\par
189     {\cf17 delete} linha;\par
190 \}\par
}
}
{\xe \v ExcelInfecBarrasTodL1InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInfecBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInfecBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 197                                                 \{\par
198     QXlsx::Document* planilha = criaPlanilha();\par
199     {\cf18 int}* linha = {\cf17 new} int;\par
200     ExcelEscreveBarrasInfec(planilha, linha);\par
201     ExcelPulaLinha(linha);\par
202     ExcelEscreveLTodL1InterL2(planilha, linha);\par
203     salvaPlanilha(planilha);\par
204     {\cf17 delete} planilha;\par
205     {\cf17 delete} linha;\par
206 \}\par
}
}
{\xe \v ExcelInfecBarrasTodL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInfecBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInfecBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 213                                               \{\par
214     QXlsx::Document* planilha = criaPlanilha();\par
215     {\cf18 int}* linha = {\cf17 new} int;\par
216     ExcelEscreveBarrasInfec(planilha, linha);\par
217     ExcelPulaLinha(linha);\par
218     ExcelEscreveLTodL1TodL2(planilha, linha);\par
219     salvaPlanilha(planilha);\par
220     {\cf17 delete} planilha;\par
221     {\cf17 delete} linha;\par
222 \}\par
}
}
{\xe \v ExcelInterBarrasTodL1InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInterBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInterBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 69                                                 \{\par
70     QXlsx::Document* planilha = criaPlanilha();\par
71     {\cf18 int}* linha = {\cf17 new} int;\par
72     ExcelEscreveBarrasIntervalo(planilha ,linha);\par
73     ExcelPulaLinha(linha);\par
74     ExcelEscreveLTodL1InterL2(planilha , linha);\par
75     salvaPlanilha(planilha);\par
76     {\cf17 delete} planilha;\par
77     {\cf17 delete} linha;\par
78 \}\par
}
}
{\xe \v ExcelInterBarrasTodL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInterBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInterBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 85                                               \{\par
86     QXlsx::Document* planilha = criaPlanilha();\par
87     {\cf18 int}* linha = {\cf17 new} int;\par
88     ExcelEscreveBarrasIntervalo(planilha, linha);\par
89     ExcelPulaLinha(linha);\par
90     ExcelEscreveLTodL1TodL2(planilha, linha);\par
91     salvaPlanilha(planilha);\par
92     {\cf17 delete} planilha;\par
93     {\cf17 delete} linha;\par
94 \}\par
}
}
{\xe \v ExcelInterBInterL1InterL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInterBInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInterBInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                              \{\par
38     QXlsx::Document* planilha = criaPlanilha();\par
39     {\cf18 int}* linha = {\cf17 new} int;\par
40     ExcelEscreveBarrasIntervalo(planilha , linha);\par
41     ExcelPulaLinha(linha);\par
42     ExcelEscreveLInterL1InterL2(planilha , linha);\par
43     salvaPlanilha(planilha);\par
44     {\cf17 delete} planilha;\par
45     {\cf17 delete} linha;\par
46 \}\par
}
}
{\xe \v ExcelInterBInterL1TodL2\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelInterBInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelInterBInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53                                            \{\par
54     QXlsx::Document* planilha = criaPlanilha();\par
55     {\cf18 int}* linha = {\cf17 new} int;\par
56     ExcelEscreveBarrasIntervalo(planilha , linha);\par
57     ExcelPulaLinha(linha);\par
58     ExcelEscreveLInterL1TodL2(planilha , linha);\par
59     salvaPlanilha(planilha);\par
60     {\cf17 delete} planilha;\par
61     {\cf17 delete} linha;\par
62 \}\par
}
}
{\xe \v ExcelPulaLinha\:ExportarExcel}
{\xe \v ExportarExcel\:ExcelPulaLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::ExcelPulaLinha (int *  {\i linha})}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1145                                             \{\par
1146     {\cf19 for}({\cf18 int} i = 0 ; i < 4 ; i++)\{\par
1147         (*linha)++;\par
1148     \}\par
1149 \}\par
}
}
{\xe \v numeroParaLetra\:ExportarExcel}
{\xe \v ExportarExcel\:numeroParaLetra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString ExportarExcel::numeroParaLetra (int  {\i numero})}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1169                                                  \{\par
1170 \par
1171     QString coluna = {\cf22 ""};\par
1172     {\cf18 int} resto;\par
1173 \par
1174     {\cf19 while} (numero > 0) \{\par
1175         resto = (numero - 1) % 26;\par
1176         coluna.prepend(QChar(resto + {\cf23 'A'}));\par
1177         numero = (numero - resto - 1) / 26;\par
1178     \}\par
1179 \par
1180     {\cf19 return} coluna;\par
1181 \}\par
}
}
{\xe \v salvaPlanilha\:ExportarExcel}
{\xe \v ExportarExcel\:salvaPlanilha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarExcel::salvaPlanilha (QXlsx::Document *  {\i saida})}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1156                                                      \{\par
1157     QString filtro={\cf22 "Arquivo de planilha Excel. (*.xlsx)"};\par
1158     QString localSalvamento =QFileDialog::getSaveFileName(parentExportarExcel,{\cf22 "Salvar Arquivo"},QDir::homePath(),filtro);\par
1159     saida->saveAs(localSalvamento);\par
1160 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b exportarexcel.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b exportarexcel.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExportarPdf Class Reference\par \pard\plain 
{\tc\tcl2 \v ExportarPdf}
{\xe \v ExportarPdf}
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para pdf Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos. }}\par
{
{\f2 #include <exportarpdf.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::ExportarPdf\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b ExportarPdf}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExportarPdf} (QWidget *parent=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInterBInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Um intervalo de barras,com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInterBInterL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInterBInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Um intervalo de barras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInterBInterL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInterBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Um intervalo de barras, com escolha individual de linhas apenas nos destinos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInterBarrasTodL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInterBarrasTodL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Um intervalo de barras, com todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInterBarrasTodL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfCompBarrasInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Escolha individual das barras,com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfCompBarrasInterL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfCompBarrasInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Escolha individual das barras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfCompBarrasInterL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfCompBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Escolha individual das barras, com escolha individual de linhas apenas nos destinos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfCompBarrasTodL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfCompBarrasaTodL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : Escolha individual das barras, com todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfCompBarrasaTodL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInfecBarrasInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : As barras poluidoras, com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInfecBarrasInterL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInfecBarrasInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : As barras poluidoras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInfecBarrasInterL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInfecBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : As barras poluidoras, com escolha individual de linhas apenas nos destinos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInfecBarrasTodL1InterL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::PdfInfecBarrasTodL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preparar um arquivo para exporta\'E7\'E3o pdf e chamar o m\'E9todo respons\'E1vel por imprimir no arquivo seguindo o seguinte filtro escolhido : As barras poluidoras, com todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PdfInfecBarrasTodL1TodL2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContInterBInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Um intervalo de barras,com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInterBInterL1InterL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContInterBInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Um intervalo de barras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInterBInterL1TodL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContInterBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Um intervalo de barras, com escolha individual de linhas apenas nos destinos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInterBarrasTodL1InterL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContInterBarrasTodL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Um intervalo de barras, com todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInterBarrasTodL1TodL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContCompBarrasInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Escolha individual das barras,com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContCompBarrasInterL1InterL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContCompBarrasInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Escolha individual das barras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContCompBarrasInterL1TodL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContCompBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Escolha individual das barras, com escolha individual de linhas apenas nos destinos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContCompBarrasTodL1InterL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContCompBarrasaTodL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : Escolha individual das barras, com todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContCompBarrasaTodL1TodL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContInfecBarrasInterL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : As barras poluidoras, com escolha individual de linhas na origem e no destino\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInfecBarrasInterL1InterL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContInfecBarrasInterL1TodL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : As barras poluidoras, com escolha individual de linhas apenas nas origens\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInfecBarrasInterL1TodL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ContInfecBarrasTodL1InterL2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por imprimir em um arquivo pr\'E9-preparado : As barras poluidoras, com todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printer} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInfecBarrasTodL1InterL2} (QPrinter *)\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContInfecBarrasTodL1TodL2} (QPrinter *)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::QtdLinhasInfoBarra\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
c\'E1lcula numero de linhas que ser\'E3o escritas no pdf para elencar os atributos escolhidos para uma barra apartir do filtro.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
um inteiro que representa o numero de linhas que ser\'E3o escritas no pdf para elencar os atributos escolhidos para uma barra apartir do filtro. \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b QtdLinhasInfoBarra} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid ExportarPdf::QtdLinhasInfoLinha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
c\'E1lcula numero de linhas que ser\'E3o escritas no pdf para elencar os atributos escolhidos para uma linha apartir do filtro.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
um inteiro que representa o numero de linhas que ser\'E3o escritas no pdf para elencar os atributos escolhidos para uma linha apartir do filtro. \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b QtdLinhasInfoLinha} ()\par
}
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para pdf Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ExportarPdf\:ExportarPdf}
{\xe \v ExportarPdf\:ExportarPdf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ExportarPdf::ExportarPdf (QWidget *  {\i parent} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31 \{\par
32     parenteExportarPdf = parent;\par
33 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ContCompBarrasaTodL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContCompBarrasaTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContCompBarrasaTodL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 2319                                                             \{\par
2320     QPainter painter(printer);\par
2321     painter.begin(printer);\par
2322     {\cf18 int} w = painter.device()->width();\par
2323     {\cf18 int} h = painter.device()->height();\par
2324 \par
2325     {\cf20 // Carrega a imagem do arquivo}\par
2326     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
2327 \par
2328     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2329     QRectF logoRect(20, 20, 300, 56);\par
2330 \par
2331     {\cf20 // Desenha a imagem na p\'E1gina}\par
2332     painter.drawImage(logoRect, logo);\par
2333 \par
2334     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
2335     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
2336 \par
2337     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
2338     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
2339 \par
2340     QFontMetrics fmPrincipal(fontePrincipal);\par
2341     QFontMetrics fmSubtexto(fonteSubtexto);\par
2342 \par
2343     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
2344     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
2345 \par
2346     painter.setFont(fontePrincipal);\par
2347     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
2348 \par
2349     painter.setFont(fonteSubtexto);\par
2350     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
2351 \par
2352     printer->newPage();\par
2353 \par
2354     {\cf20 // Desenha a imagem na p\'E1gina}\par
2355     painter.drawImage(logoRect, logo);\par
2356 \par
2357     QString TituloBarras = {\cf22 "Barras"};\par
2358 \par
2359 \par
2360     painter.setFont(fontePrincipal);\par
2361     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
2362 \par
2363     printer->newPage();\par
2364 \par
2365 \par
2366 \par
2367     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2368     QRectF logoMenorRect(20, 20, 100, 19);\par
2369 \par
2370     {\cf20 // Desenha a imagem na p\'E1gina}\par
2371     painter.drawImage(logoMenorRect, logo);\par
2372 \par
2373     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
2374     gradient.setColorAt(0, QColor(180, 235, 249));\par
2375     gradient.setColorAt(1, QColor(30, 56, 91));\par
2376     painter.setBrush(QBrush(gradient));\par
2377     {\cf20 //estilo da fonte do header}\par
2378     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
2379 \par
2380     {\cf20 // Define o estilo da fonte}\par
2381     QFont fontConteudo({\cf22 "Roboto"},12);\par
2382 \par
2383     {\cf18 int} inicioItem = 100;\par
2384 \par
2385 \par
2386     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
2387         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
2388             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
2389                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
2390                     printer->newPage();\par
2391                     inicioItem = 100;\par
2392                     painter.drawImage(logoMenorRect, logo);\par
2393                 \}\par
2394                 QLabel* labelHeader = {\cf17 new} QLabel();\par
2395                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2396                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2397                 labelHeader->setFont(fontHeader);\par
2398                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2399                 labelHeader->setTextFormat(Qt::RichText);\par
2400 \par
2401                 {\cf20 // Cria a QString atributos com a tag <html>}\par
2402                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2403 \par
2404                 {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
2405                     atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
2406                         QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
2407                     atributos = atributos.arg(tensao);\par
2408                 \}\par
2409 \par
2410                 {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
2411                     atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
2412                         QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
2413                     atributos = atributos.arg(tensaoNominal);\par
2414                 \}\par
2415 \par
2416                 {\cf19 if} (FiltrosBarra::thdv) \{\par
2417                     (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
2418                     QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
2419                     atributos = atributos.arg(thdv);\par
2420                 \}\par
2421 \par
2422                 {\cf19 if}(FiltrosBarra::dit)\{\par
2423                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2424                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
2425                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
2426                         atributos = atributos.arg(j);\par
2427                         atributos = atributos.arg(tdi);\par
2428                     \}\par
2429                 \}\par
2430 \par
2431                 {\cf19 if}(FiltrosBarra::ditPercent)\{\par
2432                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2433                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
2434                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
2435                         atributos = atributos.arg(j);\par
2436                         atributos = atributos.arg(tdi);\par
2437                     \}\par
2438                 \}\par
2439 \par
2440                 {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
2441                     atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
2442                     QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
2443                     atributos = atributos.arg(tensaoEficaz);\par
2444                 \}\par
2445 \par
2446                 {\cf20 // Fecha a tag </div> e </html>}\par
2447                 atributos += {\cf22 "</div></html>"};\par
2448 \par
2449                 {\cf20 // Cria a QLabel com os atributos}\par
2450                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
2451                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
2452                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2453                 labelAtributos->setFont(fontConteudo);\par
2454                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2455                 labelAtributos->setTextFormat(Qt::RichText);\par
2456                 labelAtributos->setText(atributos);\par
2457 \par
2458                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
2459                 QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
2460                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2461                 painter.setFont(fontHeader);\par
2462                 painter.setPen(QPen(Qt::white));\par
2463                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2464 \par
2465                 {\cf20 // Desenha a QLabel na imagem}\par
2466                 QPixmap pixmap = labelAtributos->grab();\par
2467                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
2468 \par
2469                 inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
2470             \}\par
2471         \}\par
2472     \}\par
2473 \par
2474     printer->newPage();\par
2475 \par
2476     {\cf20 // Desenha a imagem na p\'E1gina}\par
2477     painter.drawImage(logoRect, logo);\par
2478 \par
2479     QString TituloLinhas = {\cf22 "Linhas"};\par
2480 \par
2481     painter.setPen(QPen());\par
2482     painter.setFont(fontePrincipal);\par
2483     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
2484 \par
2485 \par
2486     printer->newPage();\par
2487 \par
2488     {\cf20 // Desenha a imagem na p\'E1gina}\par
2489     painter.drawImage(logoMenorRect, logo);\par
2490 \par
2491     inicioItem = 100;\par
2492 \par
2493     {\cf19 for}({\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
2494 \par
2495         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
2496             printer->newPage();\par
2497             inicioItem = 100;\par
2498             painter.drawImage(logoMenorRect, logo);\par
2499 \par
2500         \}\par
2501 \par
2502         QLabel* labelHeader = {\cf17 new} QLabel();\par
2503         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2504         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2505         labelHeader->setFont(fontHeader);\par
2506         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2507         labelHeader->setTextFormat(Qt::RichText);\par
2508 \par
2509 \par
2510         {\cf20 // Cria a QString atributos com a tag <html>}\par
2511         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2512 \par
2513         {\cf19 if}(FiltroLinha::correntePu)\{\par
2514             atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
2515             QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
2516             atributos = atributos.arg(corrente);\par
2517         \}\par
2518         {\cf19 if}(FiltroLinha::dht)\{\par
2519             atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
2520             QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
2521             atributos = atributos.arg(dht);\par
2522         \}\par
2523         {\cf19 if}(FiltroLinha::dit)\{\par
2524             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2525                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
2526                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
2527                 atributos = atributos.arg(j);\par
2528                 atributos = atributos.arg(tdi);\par
2529             \}\par
2530         \}\par
2531         {\cf19 if}(FiltroLinha::ditPercent)\{\par
2532             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2533                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
2534                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
2535                 atributos = atributos.arg(j);\par
2536                 atributos = atributos.arg(tdiPercent);\par
2537             \}\par
2538         \}\par
2539         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
2540             atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
2541             QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
2542             atributos = atributos.arg(correnteEficaz);\par
2543         \}\par
2544         {\cf19 if}(FiltroLinha::resistencia)\{\par
2545             atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
2546             QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
2547             atributos = atributos.arg(resistencia);\par
2548         \}\par
2549         {\cf19 if}(FiltroLinha::perdas)\{\par
2550             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2551             QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
2552             atributos = atributos.arg(perdas);\par
2553         \}\par
2554         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
2555             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2556             QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
2557             atributos = atributos.arg(perdasEficaz);\par
2558         \}\par
2559 \par
2560         {\cf20 // Fecha a tag </div> e </html>}\par
2561         atributos += {\cf22 "</div></html>"};\par
2562 \par
2563         {\cf20 // Cria a QLabel com os atributos}\par
2564         QLabel* labelAtributos = {\cf17 new} QLabel();\par
2565         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
2566         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2567         labelAtributos->setFont(fontConteudo);\par
2568         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2569         labelAtributos->setTextFormat(Qt::RichText);\par
2570         labelAtributos->setText(atributos);\par
2571 \par
2572         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
2573         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
2574         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
2575         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
2576 \par
2577 \par
2578         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2579         painter.setFont(fontHeader);\par
2580         painter.setPen(QPen(Qt::white));\par
2581         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2582 \par
2583         {\cf20 // Desenha a QLabel na imagem}\par
2584         QPixmap pixmap = labelAtributos->grab();\par
2585         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
2586 \par
2587         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
2588 \par
2589     \}\par
2590 \par
2591     painter.end();\par
2592 \}\par
}
}
{\xe \v ContCompBarrasInterL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContCompBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContCompBarrasInterL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1465                                                                \{\par
1466     QPainter painter(printer);\par
1467     painter.begin(printer);\par
1468     {\cf18 int} w = painter.device()->width();\par
1469     {\cf18 int} h = painter.device()->height();\par
1470 \par
1471     {\cf20 // Carrega a imagem do arquivo}\par
1472     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
1473 \par
1474     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1475     QRectF logoRect(20, 20, 300, 56);\par
1476 \par
1477     {\cf20 // Desenha a imagem na p\'E1gina}\par
1478     painter.drawImage(logoRect, logo);\par
1479 \par
1480     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
1481     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
1482 \par
1483     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
1484     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
1485 \par
1486     QFontMetrics fmPrincipal(fontePrincipal);\par
1487     QFontMetrics fmSubtexto(fonteSubtexto);\par
1488 \par
1489     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
1490     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
1491 \par
1492     painter.setFont(fontePrincipal);\par
1493     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
1494 \par
1495     painter.setFont(fonteSubtexto);\par
1496     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
1497 \par
1498     printer->newPage();\par
1499 \par
1500     {\cf20 // Desenha a imagem na p\'E1gina}\par
1501     painter.drawImage(logoRect, logo);\par
1502 \par
1503     QString TituloBarras = {\cf22 "Barras"};\par
1504 \par
1505 \par
1506     painter.setFont(fontePrincipal);\par
1507     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
1508 \par
1509     printer->newPage();\par
1510 \par
1511 \par
1512 \par
1513     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1514     QRectF logoMenorRect(20, 20, 100, 19);\par
1515 \par
1516     {\cf20 // Desenha a imagem na p\'E1gina}\par
1517     painter.drawImage(logoMenorRect, logo);\par
1518 \par
1519     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
1520     gradient.setColorAt(0, QColor(180, 235, 249));\par
1521     gradient.setColorAt(1, QColor(30, 56, 91));\par
1522     painter.setBrush(QBrush(gradient));\par
1523     {\cf20 //estilo da fonte do header}\par
1524     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
1525 \par
1526     {\cf20 // Define o estilo da fonte}\par
1527     QFont fontConteudo({\cf22 "Roboto"},12);\par
1528 \par
1529     {\cf18 int} inicioItem = 100;\par
1530 \par
1531 \par
1532     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
1533         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
1534             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
1535                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
1536                     printer->newPage();\par
1537                     inicioItem = 100;\par
1538                     painter.drawImage(logoMenorRect, logo);\par
1539                 \}\par
1540                 QLabel* labelHeader = {\cf17 new} QLabel();\par
1541                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1542                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1543                 labelHeader->setFont(fontHeader);\par
1544                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1545                 labelHeader->setTextFormat(Qt::RichText);\par
1546 \par
1547                 {\cf20 // Cria a QString atributos com a tag <html>}\par
1548                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1549 \par
1550                 {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
1551                     atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
1552                         QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
1553                     atributos = atributos.arg(tensao);\par
1554                 \}\par
1555 \par
1556                 {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
1557                     atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
1558                         QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
1559                     atributos = atributos.arg(tensaoNominal);\par
1560                 \}\par
1561 \par
1562                 {\cf19 if} (FiltrosBarra::thdv) \{\par
1563                     (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
1564                     QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
1565                     atributos = atributos.arg(thdv);\par
1566                 \}\par
1567 \par
1568                 {\cf19 if}(FiltrosBarra::dit)\{\par
1569                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1570                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
1571                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
1572                         atributos = atributos.arg(j);\par
1573                         atributos = atributos.arg(tdi);\par
1574                     \}\par
1575                 \}\par
1576 \par
1577                 {\cf19 if}(FiltrosBarra::ditPercent)\{\par
1578                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1579                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
1580                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
1581                         atributos = atributos.arg(j);\par
1582                         atributos = atributos.arg(tdi);\par
1583                     \}\par
1584                 \}\par
1585 \par
1586                 {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
1587                     atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
1588                     QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
1589                     atributos = atributos.arg(tensaoEficaz);\par
1590                 \}\par
1591 \par
1592                 {\cf20 // Fecha a tag </div> e </html>}\par
1593                 atributos += {\cf22 "</div></html>"};\par
1594 \par
1595                 {\cf20 // Cria a QLabel com os atributos}\par
1596                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
1597                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
1598                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1599                 labelAtributos->setFont(fontConteudo);\par
1600                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1601                 labelAtributos->setTextFormat(Qt::RichText);\par
1602                 labelAtributos->setText(atributos);\par
1603 \par
1604                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
1605                 QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
1606                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1607                 painter.setFont(fontHeader);\par
1608                 painter.setPen(QPen(Qt::white));\par
1609                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1610 \par
1611                 {\cf20 // Desenha a QLabel na imagem}\par
1612                 QPixmap pixmap = labelAtributos->grab();\par
1613                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
1614 \par
1615                 inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
1616             \}\par
1617         \}\par
1618     \}\par
1619 \par
1620     printer->newPage();\par
1621 \par
1622     {\cf20 // Desenha a imagem na p\'E1gina}\par
1623     painter.drawImage(logoRect, logo);\par
1624 \par
1625     QString TituloLinhas = {\cf22 "Linhas"};\par
1626 \par
1627     painter.setPen(QPen());\par
1628     painter.setFont(fontePrincipal);\par
1629     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
1630 \par
1631 \par
1632     printer->newPage();\par
1633 \par
1634     {\cf20 // Desenha a imagem na p\'E1gina}\par
1635     painter.drawImage(logoMenorRect, logo);\par
1636 \par
1637     inicioItem = 100;\par
1638 \par
1639     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1640         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
1641         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
1642         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
1643             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
1644                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
1645                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
1646                         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
1647                             printer->newPage();\par
1648                             inicioItem = 100;\par
1649                             painter.drawImage(logoMenorRect, logo);\par
1650                         \}\par
1651 \par
1652                         QLabel* labelHeader = {\cf17 new} QLabel();\par
1653                         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1654                         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1655                         labelHeader->setFont(fontHeader);\par
1656                         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1657                         labelHeader->setTextFormat(Qt::RichText);\par
1658 \par
1659 \par
1660                         {\cf20 // Cria a QString atributos com a tag <html>}\par
1661                         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1662 \par
1663                         {\cf19 if}(FiltroLinha::correntePu)\{\par
1664                             atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
1665                             QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
1666                             atributos = atributos.arg(corrente);\par
1667                         \}\par
1668                         {\cf19 if}(FiltroLinha::dht)\{\par
1669                             atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
1670                             QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
1671                             atributos = atributos.arg(dht);\par
1672                         \}\par
1673                         {\cf19 if}(FiltroLinha::dit)\{\par
1674                             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1675                                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
1676                                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
1677                                 atributos = atributos.arg(j);\par
1678                                 atributos = atributos.arg(tdi);\par
1679                             \}\par
1680                         \}\par
1681                         {\cf19 if}(FiltroLinha::ditPercent)\{\par
1682                             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1683                                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
1684                                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
1685                                 atributos = atributos.arg(j);\par
1686                                 atributos = atributos.arg(tdiPercent);\par
1687                             \}\par
1688                         \}\par
1689                         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
1690                             atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
1691                             QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
1692                             atributos = atributos.arg(correnteEficaz);\par
1693                         \}\par
1694                         {\cf19 if}(FiltroLinha::resistencia)\{\par
1695                             atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
1696                             QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
1697                             atributos = atributos.arg(resistencia);\par
1698                         \}\par
1699                         {\cf19 if}(FiltroLinha::perdas)\{\par
1700                             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1701                             QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
1702                             atributos = atributos.arg(perdas);\par
1703                         \}\par
1704                         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
1705                             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1706                             QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
1707                             atributos = atributos.arg(perdasEficaz);\par
1708                         \}\par
1709 \par
1710                         {\cf20 // Fecha a tag </div> e </html>}\par
1711                         atributos += {\cf22 "</div></html>"};\par
1712 \par
1713                         {\cf20 // Cria a QLabel com os atributos}\par
1714                         QLabel* labelAtributos = {\cf17 new} QLabel();\par
1715                         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
1716                         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1717                         labelAtributos->setFont(fontConteudo);\par
1718                         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1719                         labelAtributos->setTextFormat(Qt::RichText);\par
1720                         labelAtributos->setText(atributos);\par
1721 \par
1722                         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
1723                         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
1724                         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
1725                         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
1726 \par
1727 \par
1728                         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1729                         painter.setFont(fontHeader);\par
1730                         painter.setPen(QPen(Qt::white));\par
1731                         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1732 \par
1733                         {\cf20 // Desenha a QLabel na imagem}\par
1734                         QPixmap pixmap = labelAtributos->grab();\par
1735                         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
1736 \par
1737                         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
1738                     \}\par
1739                 \}\par
1740             \}\par
1741         \}\par
1742     \}\par
1743 \par
1744     painter.end();\par
1745 \}\par
}
}
{\xe \v ContCompBarrasInterL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContCompBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContCompBarrasInterL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1753                                                              \{\par
1754     QPainter painter(printer);\par
1755     painter.begin(printer);\par
1756     {\cf18 int} w = painter.device()->width();\par
1757     {\cf18 int} h = painter.device()->height();\par
1758 \par
1759     {\cf20 // Carrega a imagem do arquivo}\par
1760     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
1761 \par
1762     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1763     QRectF logoRect(20, 20, 300, 56);\par
1764 \par
1765     {\cf20 // Desenha a imagem na p\'E1gina}\par
1766     painter.drawImage(logoRect, logo);\par
1767 \par
1768     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
1769     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
1770 \par
1771     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
1772     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
1773 \par
1774     QFontMetrics fmPrincipal(fontePrincipal);\par
1775     QFontMetrics fmSubtexto(fonteSubtexto);\par
1776 \par
1777     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
1778     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
1779 \par
1780     painter.setFont(fontePrincipal);\par
1781     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
1782 \par
1783     painter.setFont(fonteSubtexto);\par
1784     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
1785 \par
1786     printer->newPage();\par
1787 \par
1788     {\cf20 // Desenha a imagem na p\'E1gina}\par
1789     painter.drawImage(logoRect, logo);\par
1790 \par
1791     QString TituloBarras = {\cf22 "Barras"};\par
1792 \par
1793 \par
1794     painter.setFont(fontePrincipal);\par
1795     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
1796 \par
1797     printer->newPage();\par
1798 \par
1799 \par
1800 \par
1801     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1802     QRectF logoMenorRect(20, 20, 100, 19);\par
1803 \par
1804     {\cf20 // Desenha a imagem na p\'E1gina}\par
1805     painter.drawImage(logoMenorRect, logo);\par
1806 \par
1807     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
1808     gradient.setColorAt(0, QColor(180, 235, 249));\par
1809     gradient.setColorAt(1, QColor(30, 56, 91));\par
1810     painter.setBrush(QBrush(gradient));\par
1811     {\cf20 //estilo da fonte do header}\par
1812     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
1813 \par
1814     {\cf20 // Define o estilo da fonte}\par
1815     QFont fontConteudo({\cf22 "Roboto"},12);\par
1816 \par
1817     {\cf18 int} inicioItem = 100;\par
1818 \par
1819 \par
1820     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
1821         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
1822             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
1823                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
1824                     printer->newPage();\par
1825                     inicioItem = 100;\par
1826                     painter.drawImage(logoMenorRect, logo);\par
1827                 \}\par
1828                 QLabel* labelHeader = {\cf17 new} QLabel();\par
1829                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1830                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1831                 labelHeader->setFont(fontHeader);\par
1832                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1833                 labelHeader->setTextFormat(Qt::RichText);\par
1834 \par
1835                 {\cf20 // Cria a QString atributos com a tag <html>}\par
1836                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1837 \par
1838                 {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
1839                     atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
1840                         QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
1841                     atributos = atributos.arg(tensao);\par
1842                 \}\par
1843 \par
1844                 {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
1845                     atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
1846                         QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
1847                     atributos = atributos.arg(tensaoNominal);\par
1848                 \}\par
1849 \par
1850                 {\cf19 if} (FiltrosBarra::thdv) \{\par
1851                     (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
1852                     QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
1853                     atributos = atributos.arg(thdv);\par
1854                 \}\par
1855 \par
1856                 {\cf19 if}(FiltrosBarra::dit)\{\par
1857                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1858                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
1859                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
1860                         atributos = atributos.arg(j);\par
1861                         atributos = atributos.arg(tdi);\par
1862                     \}\par
1863                 \}\par
1864 \par
1865                 {\cf19 if}(FiltrosBarra::ditPercent)\{\par
1866                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1867                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
1868                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
1869                         atributos = atributos.arg(j);\par
1870                         atributos = atributos.arg(tdi);\par
1871                     \}\par
1872                 \}\par
1873 \par
1874                 {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
1875                     atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
1876                     QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
1877                     atributos = atributos.arg(tensaoEficaz);\par
1878                 \}\par
1879 \par
1880                 {\cf20 // Fecha a tag </div> e </html>}\par
1881                 atributos += {\cf22 "</div></html>"};\par
1882 \par
1883                 {\cf20 // Cria a QLabel com os atributos}\par
1884                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
1885                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
1886                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1887                 labelAtributos->setFont(fontConteudo);\par
1888                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1889                 labelAtributos->setTextFormat(Qt::RichText);\par
1890                 labelAtributos->setText(atributos);\par
1891 \par
1892                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
1893                 QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
1894                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1895                 painter.setFont(fontHeader);\par
1896                 painter.setPen(QPen(Qt::white));\par
1897                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1898 \par
1899                 {\cf20 // Desenha a QLabel na imagem}\par
1900                 QPixmap pixmap = labelAtributos->grab();\par
1901                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
1902 \par
1903                 inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
1904             \}\par
1905         \}\par
1906     \}\par
1907 \par
1908     printer->newPage();\par
1909 \par
1910     {\cf20 // Desenha a imagem na p\'E1gina}\par
1911     painter.drawImage(logoRect, logo);\par
1912 \par
1913     QString TituloLinhas = {\cf22 "Linhas"};\par
1914 \par
1915     painter.setPen(QPen());\par
1916     painter.setFont(fontePrincipal);\par
1917     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
1918 \par
1919 \par
1920     printer->newPage();\par
1921 \par
1922     {\cf20 // Desenha a imagem na p\'E1gina}\par
1923     painter.drawImage(logoMenorRect, logo);\par
1924 \par
1925     inicioItem = 100;\par
1926     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1927         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
1928         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
1929             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
1930                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
1931                     printer->newPage();\par
1932                     inicioItem = 100;\par
1933                     painter.drawImage(logoMenorRect, logo);\par
1934                 \}\par
1935 \par
1936                 QLabel* labelHeader = {\cf17 new} QLabel();\par
1937                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1938                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1939                 labelHeader->setFont(fontHeader);\par
1940                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1941                 labelHeader->setTextFormat(Qt::RichText);\par
1942 \par
1943 \par
1944                 {\cf20 // Cria a QString atributos com a tag <html>}\par
1945                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1946 \par
1947                 {\cf19 if}(FiltroLinha::correntePu)\{\par
1948                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
1949                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
1950                     atributos = atributos.arg(corrente);\par
1951                 \}\par
1952                 {\cf19 if}(FiltroLinha::dht)\{\par
1953                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
1954                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
1955                     atributos = atributos.arg(dht);\par
1956                 \}\par
1957                 {\cf19 if}(FiltroLinha::dit)\{\par
1958                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1959                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
1960                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
1961                         atributos = atributos.arg(j);\par
1962                         atributos = atributos.arg(tdi);\par
1963                     \}\par
1964                 \}\par
1965                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
1966                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1967                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
1968                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
1969                         atributos = atributos.arg(j);\par
1970                         atributos = atributos.arg(tdiPercent);\par
1971                     \}\par
1972                 \}\par
1973                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
1974                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
1975                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
1976                     atributos = atributos.arg(correnteEficaz);\par
1977                 \}\par
1978                 {\cf19 if}(FiltroLinha::resistencia)\{\par
1979                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
1980                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
1981                     atributos = atributos.arg(resistencia);\par
1982                 \}\par
1983                 {\cf19 if}(FiltroLinha::perdas)\{\par
1984                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1985                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
1986                     atributos = atributos.arg(perdas);\par
1987                 \}\par
1988                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
1989                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1990                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
1991                     atributos = atributos.arg(perdasEficaz);\par
1992                 \}\par
1993 \par
1994                 {\cf20 // Fecha a tag </div> e </html>}\par
1995                 atributos += {\cf22 "</div></html>"};\par
1996 \par
1997                 {\cf20 // Cria a QLabel com os atributos}\par
1998                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
1999                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
2000                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2001                 labelAtributos->setFont(fontConteudo);\par
2002                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2003                 labelAtributos->setTextFormat(Qt::RichText);\par
2004                 labelAtributos->setText(atributos);\par
2005 \par
2006                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
2007                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
2008                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
2009                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
2010 \par
2011 \par
2012                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2013                 painter.setFont(fontHeader);\par
2014                 painter.setPen(QPen(Qt::white));\par
2015                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2016 \par
2017                 {\cf20 // Desenha a QLabel na imagem}\par
2018                 QPixmap pixmap = labelAtributos->grab();\par
2019                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
2020 \par
2021                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
2022             \}\par
2023         \}\par
2024     \}\par
2025 \par
2026     painter.end();\par
2027 \}\par
}
}
{\xe \v ContCompBarrasTodL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContCompBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContCompBarrasTodL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 2035                                                               \{\par
2036     QPainter painter(printer);\par
2037     painter.begin(printer);\par
2038     {\cf18 int} w = painter.device()->width();\par
2039     {\cf18 int} h = painter.device()->height();\par
2040 \par
2041     {\cf20 // Carrega a imagem do arquivo}\par
2042     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
2043 \par
2044     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2045     QRectF logoRect(20, 20, 300, 56);\par
2046 \par
2047     {\cf20 // Desenha a imagem na p\'E1gina}\par
2048     painter.drawImage(logoRect, logo);\par
2049 \par
2050     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
2051     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
2052 \par
2053     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
2054     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
2055 \par
2056     QFontMetrics fmPrincipal(fontePrincipal);\par
2057     QFontMetrics fmSubtexto(fonteSubtexto);\par
2058 \par
2059     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
2060     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
2061 \par
2062     painter.setFont(fontePrincipal);\par
2063     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
2064 \par
2065     painter.setFont(fonteSubtexto);\par
2066     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
2067 \par
2068     printer->newPage();\par
2069 \par
2070     {\cf20 // Desenha a imagem na p\'E1gina}\par
2071     painter.drawImage(logoRect, logo);\par
2072 \par
2073     QString TituloBarras = {\cf22 "Barras"};\par
2074 \par
2075 \par
2076     painter.setFont(fontePrincipal);\par
2077     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
2078 \par
2079     printer->newPage();\par
2080 \par
2081 \par
2082 \par
2083     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2084     QRectF logoMenorRect(20, 20, 100, 19);\par
2085 \par
2086     {\cf20 // Desenha a imagem na p\'E1gina}\par
2087     painter.drawImage(logoMenorRect, logo);\par
2088 \par
2089     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
2090     gradient.setColorAt(0, QColor(180, 235, 249));\par
2091     gradient.setColorAt(1, QColor(30, 56, 91));\par
2092     painter.setBrush(QBrush(gradient));\par
2093     {\cf20 //estilo da fonte do header}\par
2094     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
2095 \par
2096     {\cf20 // Define o estilo da fonte}\par
2097     QFont fontConteudo({\cf22 "Roboto"},12);\par
2098 \par
2099     {\cf18 int} inicioItem = 100;\par
2100 \par
2101 \par
2102     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
2103         {\cf19 for}({\cf18 int} j = 0 ; j < FiltrosBarra::indiceBarrasEscolhidas.size() ; j++)\{\par
2104             {\cf19 if}((FiltrosBarra::indiceBarrasEscolhidas.at(j).toInt()-1) == i )\{\par
2105                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
2106                     printer->newPage();\par
2107                     inicioItem = 100;\par
2108                     painter.drawImage(logoMenorRect, logo);\par
2109                 \}\par
2110                 QLabel* labelHeader = {\cf17 new} QLabel();\par
2111                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2112                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2113                 labelHeader->setFont(fontHeader);\par
2114                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2115                 labelHeader->setTextFormat(Qt::RichText);\par
2116 \par
2117                 {\cf20 // Cria a QString atributos com a tag <html>}\par
2118                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2119 \par
2120                 {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
2121                     atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
2122                         QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
2123                     atributos = atributos.arg(tensao);\par
2124                 \}\par
2125 \par
2126                 {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
2127                     atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
2128                         QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
2129                     atributos = atributos.arg(tensaoNominal);\par
2130                 \}\par
2131 \par
2132                 {\cf19 if} (FiltrosBarra::thdv) \{\par
2133                     (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
2134                     QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
2135                     atributos = atributos.arg(thdv);\par
2136                 \}\par
2137 \par
2138                 {\cf19 if}(FiltrosBarra::dit)\{\par
2139                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2140                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
2141                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
2142                         atributos = atributos.arg(j);\par
2143                         atributos = atributos.arg(tdi);\par
2144                     \}\par
2145                 \}\par
2146 \par
2147                 {\cf19 if}(FiltrosBarra::ditPercent)\{\par
2148                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2149                         (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
2150                         QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
2151                         atributos = atributos.arg(j);\par
2152                         atributos = atributos.arg(tdi);\par
2153                     \}\par
2154                 \}\par
2155 \par
2156                 {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
2157                     atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
2158                     QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
2159                     atributos = atributos.arg(tensaoEficaz);\par
2160                 \}\par
2161 \par
2162                 {\cf20 // Fecha a tag </div> e </html>}\par
2163                 atributos += {\cf22 "</div></html>"};\par
2164 \par
2165                 {\cf20 // Cria a QLabel com os atributos}\par
2166                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
2167                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
2168                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2169                 labelAtributos->setFont(fontConteudo);\par
2170                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2171                 labelAtributos->setTextFormat(Qt::RichText);\par
2172                 labelAtributos->setText(atributos);\par
2173 \par
2174                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
2175                 QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
2176                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2177                 painter.setFont(fontHeader);\par
2178                 painter.setPen(QPen(Qt::white));\par
2179                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2180 \par
2181                 {\cf20 // Desenha a QLabel na imagem}\par
2182                 QPixmap pixmap = labelAtributos->grab();\par
2183                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
2184 \par
2185                 inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
2186             \}\par
2187         \}\par
2188     \}\par
2189 \par
2190     printer->newPage();\par
2191 \par
2192     {\cf20 // Desenha a imagem na p\'E1gina}\par
2193     painter.drawImage(logoRect, logo);\par
2194 \par
2195     QString TituloLinhas = {\cf22 "Linhas"};\par
2196 \par
2197     painter.setPen(QPen());\par
2198     painter.setFont(fontePrincipal);\par
2199     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
2200 \par
2201 \par
2202     printer->newPage();\par
2203 \par
2204     {\cf20 // Desenha a imagem na p\'E1gina}\par
2205     painter.drawImage(logoMenorRect, logo);\par
2206 \par
2207     inicioItem = 100;\par
2208 \par
2209     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
2210         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
2211         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
2212             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
2213                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
2214                     printer->newPage();\par
2215                     inicioItem = 100;\par
2216                     painter.drawImage(logoMenorRect, logo);\par
2217 \par
2218                 \}\par
2219 \par
2220                 QLabel* labelHeader = {\cf17 new} QLabel();\par
2221                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2222                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2223                 labelHeader->setFont(fontHeader);\par
2224                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2225                 labelHeader->setTextFormat(Qt::RichText);\par
2226 \par
2227 \par
2228                 {\cf20 // Cria a QString atributos com a tag <html>}\par
2229                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2230 \par
2231                 {\cf19 if}(FiltroLinha::correntePu)\{\par
2232                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
2233                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
2234                     atributos = atributos.arg(corrente);\par
2235                 \}\par
2236                 {\cf19 if}(FiltroLinha::dht)\{\par
2237                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
2238                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
2239                     atributos = atributos.arg(dht);\par
2240                 \}\par
2241                 {\cf19 if}(FiltroLinha::dit)\{\par
2242                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2243                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
2244                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
2245                         atributos = atributos.arg(j);\par
2246                         atributos = atributos.arg(tdi);\par
2247                     \}\par
2248                 \}\par
2249                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
2250                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2251                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
2252                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
2253                         atributos = atributos.arg(j);\par
2254                         atributos = atributos.arg(tdiPercent);\par
2255                     \}\par
2256                 \}\par
2257                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
2258                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
2259                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
2260                     atributos = atributos.arg(correnteEficaz);\par
2261                 \}\par
2262                 {\cf19 if}(FiltroLinha::resistencia)\{\par
2263                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
2264                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
2265                     atributos = atributos.arg(resistencia);\par
2266                 \}\par
2267                 {\cf19 if}(FiltroLinha::perdas)\{\par
2268                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2269                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
2270                     atributos = atributos.arg(perdas);\par
2271                 \}\par
2272                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
2273                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2274                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
2275                     atributos = atributos.arg(perdasEficaz);\par
2276                 \}\par
2277 \par
2278                 {\cf20 // Fecha a tag </div> e </html>}\par
2279                 atributos += {\cf22 "</div></html>"};\par
2280 \par
2281                 {\cf20 // Cria a QLabel com os atributos}\par
2282                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
2283                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
2284                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2285                 labelAtributos->setFont(fontConteudo);\par
2286                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2287                 labelAtributos->setTextFormat(Qt::RichText);\par
2288                 labelAtributos->setText(atributos);\par
2289 \par
2290                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
2291                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
2292                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
2293                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
2294 \par
2295 \par
2296                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2297                 painter.setFont(fontHeader);\par
2298                 painter.setPen(QPen(Qt::white));\par
2299                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2300 \par
2301                 {\cf20 // Desenha a QLabel na imagem}\par
2302                 QPixmap pixmap = labelAtributos->grab();\par
2303                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
2304 \par
2305                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
2306             \}\par
2307         \}\par
2308     \}\par
2309 \par
2310     painter.end();\par
2311 \}\par
}
}
{\xe \v ContInfecBarrasInterL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInfecBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInfecBarrasInterL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 2600                                                                 \{\par
2601     QPainter painter(printer);\par
2602     painter.begin(printer);\par
2603     {\cf18 int} w = painter.device()->width();\par
2604     {\cf18 int} h = painter.device()->height();\par
2605 \par
2606     {\cf20 // Carrega a imagem do arquivo}\par
2607     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
2608 \par
2609     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2610     QRectF logoRect(20, 20, 300, 56);\par
2611 \par
2612     {\cf20 // Desenha a imagem na p\'E1gina}\par
2613     painter.drawImage(logoRect, logo);\par
2614 \par
2615     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
2616     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
2617 \par
2618     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
2619     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
2620 \par
2621     QFontMetrics fmPrincipal(fontePrincipal);\par
2622     QFontMetrics fmSubtexto(fonteSubtexto);\par
2623 \par
2624     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
2625     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
2626 \par
2627     painter.setFont(fontePrincipal);\par
2628     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
2629 \par
2630     painter.setFont(fonteSubtexto);\par
2631     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
2632 \par
2633     printer->newPage();\par
2634 \par
2635     {\cf20 // Desenha a imagem na p\'E1gina}\par
2636     painter.drawImage(logoRect, logo);\par
2637 \par
2638     QString TituloBarras = {\cf22 "Barras"};\par
2639 \par
2640 \par
2641     painter.setFont(fontePrincipal);\par
2642     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
2643 \par
2644     printer->newPage();\par
2645 \par
2646 \par
2647 \par
2648     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2649     QRectF logoMenorRect(20, 20, 100, 19);\par
2650 \par
2651     {\cf20 // Desenha a imagem na p\'E1gina}\par
2652     painter.drawImage(logoMenorRect, logo);\par
2653 \par
2654     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
2655     gradient.setColorAt(0, QColor(180, 235, 249));\par
2656     gradient.setColorAt(1, QColor(30, 56, 91));\par
2657     painter.setBrush(QBrush(gradient));\par
2658     {\cf20 //estilo da fonte do header}\par
2659     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
2660 \par
2661     {\cf20 // Define o estilo da fonte}\par
2662     QFont fontConteudo({\cf22 "Roboto"},12);\par
2663 \par
2664     {\cf18 int} inicioItem = 100;\par
2665 \par
2666 \par
2667     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
2668         {\cf18 bool} infectada = {\cf17 false};\par
2669         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
2670             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
2671                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
2672                     infectada = {\cf17 true};\par
2673                     {\cf19 break};\par
2674                 \}\par
2675             \}\par
2676         \}{\cf19 else}\{\par
2677             infectada = {\cf17 true};\par
2678         \}\par
2679         {\cf19 if}(infectada)\{\par
2680             {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
2681                 printer->newPage();\par
2682                 inicioItem = 100;\par
2683                 painter.drawImage(logoMenorRect, logo);\par
2684             \}\par
2685             QLabel* labelHeader = {\cf17 new} QLabel();\par
2686             labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2687             labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2688             labelHeader->setFont(fontHeader);\par
2689             labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2690             labelHeader->setTextFormat(Qt::RichText);\par
2691 \par
2692             {\cf20 // Cria a QString atributos com a tag <html>}\par
2693             QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2694 \par
2695             {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
2696                 atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
2697                     QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
2698                 atributos = atributos.arg(tensao);\par
2699             \}\par
2700 \par
2701             {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
2702                 atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
2703                     QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
2704                 atributos = atributos.arg(tensaoNominal);\par
2705             \}\par
2706 \par
2707             {\cf19 if} (FiltrosBarra::thdv) \{\par
2708                 (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
2709                 QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
2710                 atributos = atributos.arg(thdv);\par
2711             \}\par
2712 \par
2713             {\cf19 if}(FiltrosBarra::dit)\{\par
2714                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2715                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
2716                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
2717                     atributos = atributos.arg(j);\par
2718                     atributos = atributos.arg(tdi);\par
2719                 \}\par
2720             \}\par
2721 \par
2722             {\cf19 if}(FiltrosBarra::ditPercent)\{\par
2723                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2724                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
2725                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
2726                     atributos = atributos.arg(j);\par
2727                     atributos = atributos.arg(tdi);\par
2728                 \}\par
2729             \}\par
2730 \par
2731             {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
2732                 atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
2733                 QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
2734                 atributos = atributos.arg(tensaoEficaz);\par
2735             \}\par
2736 \par
2737             {\cf20 // Fecha a tag </div> e </html>}\par
2738             atributos += {\cf22 "</div></html>"};\par
2739 \par
2740             {\cf20 // Cria a QLabel com os atributos}\par
2741             QLabel* labelAtributos = {\cf17 new} QLabel();\par
2742             labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
2743             labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2744             labelAtributos->setFont(fontConteudo);\par
2745             labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2746             labelAtributos->setTextFormat(Qt::RichText);\par
2747             labelAtributos->setText(atributos);\par
2748 \par
2749             {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
2750             QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
2751             painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2752             painter.setFont(fontHeader);\par
2753             painter.setPen(QPen(Qt::white));\par
2754             painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2755 \par
2756             {\cf20 // Desenha a QLabel na imagem}\par
2757             QPixmap pixmap = labelAtributos->grab();\par
2758             painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
2759 \par
2760             inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
2761         \}\par
2762     \}\par
2763 \par
2764     printer->newPage();\par
2765 \par
2766     {\cf20 // Desenha a imagem na p\'E1gina}\par
2767     painter.drawImage(logoRect, logo);\par
2768 \par
2769     QString TituloLinhas = {\cf22 "Linhas"};\par
2770 \par
2771     painter.setPen(QPen());\par
2772     painter.setFont(fontePrincipal);\par
2773     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
2774 \par
2775 \par
2776     printer->newPage();\par
2777 \par
2778     {\cf20 // Desenha a imagem na p\'E1gina}\par
2779     painter.drawImage(logoMenorRect, logo);\par
2780 \par
2781     inicioItem = 100;\par
2782 \par
2783     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
2784         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
2785         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
2786         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
2787             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
2788                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
2789                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
2790                         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
2791                             printer->newPage();\par
2792                             inicioItem = 100;\par
2793                             painter.drawImage(logoMenorRect, logo);\par
2794                         \}\par
2795 \par
2796                         QLabel* labelHeader = {\cf17 new} QLabel();\par
2797                         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2798                         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2799                         labelHeader->setFont(fontHeader);\par
2800                         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2801                         labelHeader->setTextFormat(Qt::RichText);\par
2802 \par
2803 \par
2804                         {\cf20 // Cria a QString atributos com a tag <html>}\par
2805                         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2806 \par
2807                         {\cf19 if}(FiltroLinha::correntePu)\{\par
2808                             atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
2809                             QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
2810                             atributos = atributos.arg(corrente);\par
2811                         \}\par
2812                         {\cf19 if}(FiltroLinha::dht)\{\par
2813                             atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
2814                             QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
2815                             atributos = atributos.arg(dht);\par
2816                         \}\par
2817                         {\cf19 if}(FiltroLinha::dit)\{\par
2818                             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2819                                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
2820                                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
2821                                 atributos = atributos.arg(j);\par
2822                                 atributos = atributos.arg(tdi);\par
2823                             \}\par
2824                         \}\par
2825                         {\cf19 if}(FiltroLinha::ditPercent)\{\par
2826                             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
2827                                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
2828                                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
2829                                 atributos = atributos.arg(j);\par
2830                                 atributos = atributos.arg(tdiPercent);\par
2831                             \}\par
2832                         \}\par
2833                         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
2834                             atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
2835                             QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
2836                             atributos = atributos.arg(correnteEficaz);\par
2837                         \}\par
2838                         {\cf19 if}(FiltroLinha::resistencia)\{\par
2839                             atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
2840                             QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
2841                             atributos = atributos.arg(resistencia);\par
2842                         \}\par
2843                         {\cf19 if}(FiltroLinha::perdas)\{\par
2844                             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2845                             QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
2846                             atributos = atributos.arg(perdas);\par
2847                         \}\par
2848                         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
2849                             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
2850                             QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
2851                             atributos = atributos.arg(perdasEficaz);\par
2852                         \}\par
2853 \par
2854                         {\cf20 // Fecha a tag </div> e </html>}\par
2855                         atributos += {\cf22 "</div></html>"};\par
2856 \par
2857                         {\cf20 // Cria a QLabel com os atributos}\par
2858                         QLabel* labelAtributos = {\cf17 new} QLabel();\par
2859                         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
2860                         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
2861                         labelAtributos->setFont(fontConteudo);\par
2862                         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
2863                         labelAtributos->setTextFormat(Qt::RichText);\par
2864                         labelAtributos->setText(atributos);\par
2865 \par
2866                         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
2867                         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
2868                         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
2869                         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
2870 \par
2871 \par
2872                         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
2873                         painter.setFont(fontHeader);\par
2874                         painter.setPen(QPen(Qt::white));\par
2875                         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
2876 \par
2877                         {\cf20 // Desenha a QLabel na imagem}\par
2878                         QPixmap pixmap = labelAtributos->grab();\par
2879                         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
2880 \par
2881                         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
2882                     \}\par
2883                 \}\par
2884             \}\par
2885         \}\par
2886     \}\par
2887 \par
2888     painter.end();\par
2889 \}\par
}
}
{\xe \v ContInfecBarrasInterL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInfecBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInfecBarrasInterL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 2897                                                               \{\par
2898     QPainter painter(printer);\par
2899     painter.begin(printer);\par
2900     {\cf18 int} w = painter.device()->width();\par
2901     {\cf18 int} h = painter.device()->height();\par
2902 \par
2903     {\cf20 // Carrega a imagem do arquivo}\par
2904     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
2905 \par
2906     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2907     QRectF logoRect(20, 20, 300, 56);\par
2908 \par
2909     {\cf20 // Desenha a imagem na p\'E1gina}\par
2910     painter.drawImage(logoRect, logo);\par
2911 \par
2912     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
2913     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
2914 \par
2915     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
2916     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
2917 \par
2918     QFontMetrics fmPrincipal(fontePrincipal);\par
2919     QFontMetrics fmSubtexto(fonteSubtexto);\par
2920 \par
2921     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
2922     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
2923 \par
2924     painter.setFont(fontePrincipal);\par
2925     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
2926 \par
2927     painter.setFont(fonteSubtexto);\par
2928     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
2929 \par
2930     printer->newPage();\par
2931 \par
2932     {\cf20 // Desenha a imagem na p\'E1gina}\par
2933     painter.drawImage(logoRect, logo);\par
2934 \par
2935     QString TituloBarras = {\cf22 "Barras"};\par
2936 \par
2937 \par
2938     painter.setFont(fontePrincipal);\par
2939     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
2940 \par
2941     printer->newPage();\par
2942 \par
2943 \par
2944 \par
2945     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
2946     QRectF logoMenorRect(20, 20, 100, 19);\par
2947 \par
2948     {\cf20 // Desenha a imagem na p\'E1gina}\par
2949     painter.drawImage(logoMenorRect, logo);\par
2950 \par
2951     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
2952     gradient.setColorAt(0, QColor(180, 235, 249));\par
2953     gradient.setColorAt(1, QColor(30, 56, 91));\par
2954     painter.setBrush(QBrush(gradient));\par
2955     {\cf20 //estilo da fonte do header}\par
2956     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
2957 \par
2958     {\cf20 // Define o estilo da fonte}\par
2959     QFont fontConteudo({\cf22 "Roboto"},12);\par
2960 \par
2961     {\cf18 int} inicioItem = 100;\par
2962 \par
2963 \par
2964     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
2965         {\cf18 bool} infectada = {\cf17 false};\par
2966         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
2967             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
2968                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
2969                     infectada = {\cf17 true};\par
2970                     {\cf19 break};\par
2971                 \}\par
2972             \}\par
2973         \}{\cf19 else}\{\par
2974             infectada = {\cf17 true};\par
2975         \}\par
2976         {\cf19 if}(infectada)\{\par
2977             {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
2978                 printer->newPage();\par
2979                 inicioItem = 100;\par
2980                 painter.drawImage(logoMenorRect, logo);\par
2981             \}\par
2982             QLabel* labelHeader = {\cf17 new} QLabel();\par
2983             labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
2984             labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
2985             labelHeader->setFont(fontHeader);\par
2986             labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
2987             labelHeader->setTextFormat(Qt::RichText);\par
2988 \par
2989             {\cf20 // Cria a QString atributos com a tag <html>}\par
2990             QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
2991 \par
2992             {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
2993                 atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
2994                     QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
2995                 atributos = atributos.arg(tensao);\par
2996             \}\par
2997 \par
2998             {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
2999                 atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
3000                     QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
3001                 atributos = atributos.arg(tensaoNominal);\par
3002             \}\par
3003 \par
3004             {\cf19 if} (FiltrosBarra::thdv) \{\par
3005                 (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
3006                 QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
3007                 atributos = atributos.arg(thdv);\par
3008             \}\par
3009 \par
3010             {\cf19 if}(FiltrosBarra::dit)\{\par
3011                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3012                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
3013                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
3014                     atributos = atributos.arg(j);\par
3015                     atributos = atributos.arg(tdi);\par
3016                 \}\par
3017             \}\par
3018 \par
3019             {\cf19 if}(FiltrosBarra::ditPercent)\{\par
3020                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3021                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
3022                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
3023                     atributos = atributos.arg(j);\par
3024                     atributos = atributos.arg(tdi);\par
3025                 \}\par
3026             \}\par
3027 \par
3028             {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
3029                 atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
3030                 QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
3031                 atributos = atributos.arg(tensaoEficaz);\par
3032             \}\par
3033 \par
3034             {\cf20 // Fecha a tag </div> e </html>}\par
3035             atributos += {\cf22 "</div></html>"};\par
3036 \par
3037             {\cf20 // Cria a QLabel com os atributos}\par
3038             QLabel* labelAtributos = {\cf17 new} QLabel();\par
3039             labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
3040             labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3041             labelAtributos->setFont(fontConteudo);\par
3042             labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3043             labelAtributos->setTextFormat(Qt::RichText);\par
3044             labelAtributos->setText(atributos);\par
3045 \par
3046             {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
3047             QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
3048             painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3049             painter.setFont(fontHeader);\par
3050             painter.setPen(QPen(Qt::white));\par
3051             painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3052 \par
3053             {\cf20 // Desenha a QLabel na imagem}\par
3054             QPixmap pixmap = labelAtributos->grab();\par
3055             painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
3056 \par
3057             inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
3058         \}\par
3059     \}\par
3060 \par
3061     printer->newPage();\par
3062 \par
3063     {\cf20 // Desenha a imagem na p\'E1gina}\par
3064     painter.drawImage(logoRect, logo);\par
3065 \par
3066     QString TituloLinhas = {\cf22 "Linhas"};\par
3067 \par
3068     painter.setPen(QPen());\par
3069     painter.setFont(fontePrincipal);\par
3070     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
3071 \par
3072 \par
3073     printer->newPage();\par
3074 \par
3075     {\cf20 // Desenha a imagem na p\'E1gina}\par
3076     painter.drawImage(logoMenorRect, logo);\par
3077 \par
3078     inicioItem = 100;\par
3079     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
3080         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
3081         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
3082             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
3083                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
3084                     printer->newPage();\par
3085                     inicioItem = 100;\par
3086                     painter.drawImage(logoMenorRect, logo);\par
3087                 \}\par
3088 \par
3089                 QLabel* labelHeader = {\cf17 new} QLabel();\par
3090                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3091                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3092                 labelHeader->setFont(fontHeader);\par
3093                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3094                 labelHeader->setTextFormat(Qt::RichText);\par
3095 \par
3096 \par
3097                 {\cf20 // Cria a QString atributos com a tag <html>}\par
3098                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3099 \par
3100                 {\cf19 if}(FiltroLinha::correntePu)\{\par
3101                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
3102                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
3103                     atributos = atributos.arg(corrente);\par
3104                 \}\par
3105                 {\cf19 if}(FiltroLinha::dht)\{\par
3106                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
3107                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
3108                     atributos = atributos.arg(dht);\par
3109                 \}\par
3110                 {\cf19 if}(FiltroLinha::dit)\{\par
3111                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3112                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
3113                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
3114                         atributos = atributos.arg(j);\par
3115                         atributos = atributos.arg(tdi);\par
3116                     \}\par
3117                 \}\par
3118                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
3119                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3120                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
3121                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
3122                         atributos = atributos.arg(j);\par
3123                         atributos = atributos.arg(tdiPercent);\par
3124                     \}\par
3125                 \}\par
3126                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
3127                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
3128                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
3129                     atributos = atributos.arg(correnteEficaz);\par
3130                 \}\par
3131                 {\cf19 if}(FiltroLinha::resistencia)\{\par
3132                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
3133                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
3134                     atributos = atributos.arg(resistencia);\par
3135                 \}\par
3136                 {\cf19 if}(FiltroLinha::perdas)\{\par
3137                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3138                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
3139                     atributos = atributos.arg(perdas);\par
3140                 \}\par
3141                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
3142                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3143                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
3144                     atributos = atributos.arg(perdasEficaz);\par
3145                 \}\par
3146 \par
3147                 {\cf20 // Fecha a tag </div> e </html>}\par
3148                 atributos += {\cf22 "</div></html>"};\par
3149 \par
3150                 {\cf20 // Cria a QLabel com os atributos}\par
3151                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
3152                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
3153                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3154                 labelAtributos->setFont(fontConteudo);\par
3155                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3156                 labelAtributos->setTextFormat(Qt::RichText);\par
3157                 labelAtributos->setText(atributos);\par
3158 \par
3159                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
3160                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
3161                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
3162                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
3163 \par
3164 \par
3165                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3166                 painter.setFont(fontHeader);\par
3167                 painter.setPen(QPen(Qt::white));\par
3168                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3169 \par
3170                 {\cf20 // Desenha a QLabel na imagem}\par
3171                 QPixmap pixmap = labelAtributos->grab();\par
3172                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
3173 \par
3174                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
3175             \}\par
3176         \}\par
3177     \}\par
3178 \par
3179     painter.end();\par
3180 \}\par
}
}
{\xe \v ContInfecBarrasTodL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInfecBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInfecBarrasTodL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3188                                                                \{\par
3189     QPainter painter(printer);\par
3190     painter.begin(printer);\par
3191     {\cf18 int} w = painter.device()->width();\par
3192     {\cf18 int} h = painter.device()->height();\par
3193 \par
3194     {\cf20 // Carrega a imagem do arquivo}\par
3195     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
3196 \par
3197     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
3198     QRectF logoRect(20, 20, 300, 56);\par
3199 \par
3200     {\cf20 // Desenha a imagem na p\'E1gina}\par
3201     painter.drawImage(logoRect, logo);\par
3202 \par
3203     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
3204     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
3205 \par
3206     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
3207     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
3208 \par
3209     QFontMetrics fmPrincipal(fontePrincipal);\par
3210     QFontMetrics fmSubtexto(fonteSubtexto);\par
3211 \par
3212     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
3213     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
3214 \par
3215     painter.setFont(fontePrincipal);\par
3216     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
3217 \par
3218     painter.setFont(fonteSubtexto);\par
3219     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
3220 \par
3221     printer->newPage();\par
3222 \par
3223     {\cf20 // Desenha a imagem na p\'E1gina}\par
3224     painter.drawImage(logoRect, logo);\par
3225 \par
3226     QString TituloBarras = {\cf22 "Barras"};\par
3227 \par
3228 \par
3229     painter.setFont(fontePrincipal);\par
3230     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
3231 \par
3232     printer->newPage();\par
3233 \par
3234 \par
3235 \par
3236     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
3237     QRectF logoMenorRect(20, 20, 100, 19);\par
3238 \par
3239     {\cf20 // Desenha a imagem na p\'E1gina}\par
3240     painter.drawImage(logoMenorRect, logo);\par
3241 \par
3242     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
3243     gradient.setColorAt(0, QColor(180, 235, 249));\par
3244     gradient.setColorAt(1, QColor(30, 56, 91));\par
3245     painter.setBrush(QBrush(gradient));\par
3246     {\cf20 //estilo da fonte do header}\par
3247     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
3248 \par
3249     {\cf20 // Define o estilo da fonte}\par
3250     QFont fontConteudo({\cf22 "Roboto"},12);\par
3251 \par
3252     {\cf18 int} inicioItem = 100;\par
3253 \par
3254 \par
3255     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
3256         {\cf18 bool} infectada = {\cf17 false};\par
3257         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
3258             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
3259                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
3260                     infectada = {\cf17 true};\par
3261                     {\cf19 break};\par
3262                 \}\par
3263             \}\par
3264         \}{\cf19 else}\{\par
3265             infectada = {\cf17 true};\par
3266         \}\par
3267         {\cf19 if}(infectada)\{\par
3268             {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
3269                 printer->newPage();\par
3270                 inicioItem = 100;\par
3271                 painter.drawImage(logoMenorRect, logo);\par
3272             \}\par
3273             QLabel* labelHeader = {\cf17 new} QLabel();\par
3274             labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3275             labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3276             labelHeader->setFont(fontHeader);\par
3277             labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3278             labelHeader->setTextFormat(Qt::RichText);\par
3279 \par
3280             {\cf20 // Cria a QString atributos com a tag <html>}\par
3281             QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3282 \par
3283             {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
3284                 atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
3285                     QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
3286                 atributos = atributos.arg(tensao);\par
3287             \}\par
3288 \par
3289             {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
3290                 atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
3291                     QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
3292                 atributos = atributos.arg(tensaoNominal);\par
3293             \}\par
3294 \par
3295             {\cf19 if} (FiltrosBarra::thdv) \{\par
3296                 (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
3297                 QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
3298                 atributos = atributos.arg(thdv);\par
3299             \}\par
3300 \par
3301             {\cf19 if}(FiltrosBarra::dit)\{\par
3302                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3303                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
3304                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
3305                     atributos = atributos.arg(j);\par
3306                     atributos = atributos.arg(tdi);\par
3307                 \}\par
3308             \}\par
3309 \par
3310             {\cf19 if}(FiltrosBarra::ditPercent)\{\par
3311                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3312                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
3313                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
3314                     atributos = atributos.arg(j);\par
3315                     atributos = atributos.arg(tdi);\par
3316                 \}\par
3317             \}\par
3318 \par
3319             {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
3320                 atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
3321                 QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
3322                 atributos = atributos.arg(tensaoEficaz);\par
3323             \}\par
3324 \par
3325             {\cf20 // Fecha a tag </div> e </html>}\par
3326             atributos += {\cf22 "</div></html>"};\par
3327 \par
3328             {\cf20 // Cria a QLabel com os atributos}\par
3329             QLabel* labelAtributos = {\cf17 new} QLabel();\par
3330             labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
3331             labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3332             labelAtributos->setFont(fontConteudo);\par
3333             labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3334             labelAtributos->setTextFormat(Qt::RichText);\par
3335             labelAtributos->setText(atributos);\par
3336 \par
3337             {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
3338             QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
3339             painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3340             painter.setFont(fontHeader);\par
3341             painter.setPen(QPen(Qt::white));\par
3342             painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3343 \par
3344             {\cf20 // Desenha a QLabel na imagem}\par
3345             QPixmap pixmap = labelAtributos->grab();\par
3346             painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
3347 \par
3348             inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
3349         \}\par
3350     \}\par
3351 \par
3352     printer->newPage();\par
3353 \par
3354     {\cf20 // Desenha a imagem na p\'E1gina}\par
3355     painter.drawImage(logoRect, logo);\par
3356 \par
3357     QString TituloLinhas = {\cf22 "Linhas"};\par
3358 \par
3359     painter.setPen(QPen());\par
3360     painter.setFont(fontePrincipal);\par
3361     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
3362 \par
3363 \par
3364     printer->newPage();\par
3365 \par
3366     {\cf20 // Desenha a imagem na p\'E1gina}\par
3367     painter.drawImage(logoMenorRect, logo);\par
3368 \par
3369     inicioItem = 100;\par
3370 \par
3371     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
3372         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
3373         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
3374             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
3375                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
3376                     printer->newPage();\par
3377                     inicioItem = 100;\par
3378                     painter.drawImage(logoMenorRect, logo);\par
3379 \par
3380                 \}\par
3381 \par
3382                 QLabel* labelHeader = {\cf17 new} QLabel();\par
3383                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3384                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3385                 labelHeader->setFont(fontHeader);\par
3386                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3387                 labelHeader->setTextFormat(Qt::RichText);\par
3388 \par
3389 \par
3390                 {\cf20 // Cria a QString atributos com a tag <html>}\par
3391                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3392 \par
3393                 {\cf19 if}(FiltroLinha::correntePu)\{\par
3394                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
3395                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
3396                     atributos = atributos.arg(corrente);\par
3397                 \}\par
3398                 {\cf19 if}(FiltroLinha::dht)\{\par
3399                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
3400                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
3401                     atributos = atributos.arg(dht);\par
3402                 \}\par
3403                 {\cf19 if}(FiltroLinha::dit)\{\par
3404                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3405                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
3406                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
3407                         atributos = atributos.arg(j);\par
3408                         atributos = atributos.arg(tdi);\par
3409                     \}\par
3410                 \}\par
3411                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
3412                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3413                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
3414                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
3415                         atributos = atributos.arg(j);\par
3416                         atributos = atributos.arg(tdiPercent);\par
3417                     \}\par
3418                 \}\par
3419                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
3420                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
3421                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
3422                     atributos = atributos.arg(correnteEficaz);\par
3423                 \}\par
3424                 {\cf19 if}(FiltroLinha::resistencia)\{\par
3425                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
3426                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
3427                     atributos = atributos.arg(resistencia);\par
3428                 \}\par
3429                 {\cf19 if}(FiltroLinha::perdas)\{\par
3430                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3431                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
3432                     atributos = atributos.arg(perdas);\par
3433                 \}\par
3434                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
3435                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3436                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
3437                     atributos = atributos.arg(perdasEficaz);\par
3438                 \}\par
3439 \par
3440                 {\cf20 // Fecha a tag </div> e </html>}\par
3441                 atributos += {\cf22 "</div></html>"};\par
3442 \par
3443                 {\cf20 // Cria a QLabel com os atributos}\par
3444                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
3445                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
3446                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3447                 labelAtributos->setFont(fontConteudo);\par
3448                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3449                 labelAtributos->setTextFormat(Qt::RichText);\par
3450                 labelAtributos->setText(atributos);\par
3451 \par
3452                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
3453                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
3454                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
3455                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
3456 \par
3457 \par
3458                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3459                 painter.setFont(fontHeader);\par
3460                 painter.setPen(QPen(Qt::white));\par
3461                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3462 \par
3463                 {\cf20 // Desenha a QLabel na imagem}\par
3464                 QPixmap pixmap = labelAtributos->grab();\par
3465                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
3466 \par
3467                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
3468             \}\par
3469         \}\par
3470     \}\par
3471 \par
3472     painter.end();\par
3473 \}\par
}
}
{\xe \v ContInfecBarrasTodL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInfecBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInfecBarrasTodL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3481                                                             \{\par
3482     QPainter painter(printer);\par
3483     painter.begin(printer);\par
3484     {\cf18 int} w = painter.device()->width();\par
3485     {\cf18 int} h = painter.device()->height();\par
3486 \par
3487     {\cf20 // Carrega a imagem do arquivo}\par
3488     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
3489 \par
3490     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
3491     QRectF logoRect(20, 20, 300, 56);\par
3492 \par
3493     {\cf20 // Desenha a imagem na p\'E1gina}\par
3494     painter.drawImage(logoRect, logo);\par
3495 \par
3496     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
3497     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
3498 \par
3499     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
3500     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
3501 \par
3502     QFontMetrics fmPrincipal(fontePrincipal);\par
3503     QFontMetrics fmSubtexto(fonteSubtexto);\par
3504 \par
3505     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
3506     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
3507 \par
3508     painter.setFont(fontePrincipal);\par
3509     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
3510 \par
3511     painter.setFont(fonteSubtexto);\par
3512     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
3513 \par
3514     printer->newPage();\par
3515 \par
3516     {\cf20 // Desenha a imagem na p\'E1gina}\par
3517     painter.drawImage(logoRect, logo);\par
3518 \par
3519     QString TituloBarras = {\cf22 "Barras"};\par
3520 \par
3521 \par
3522     painter.setFont(fontePrincipal);\par
3523     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
3524 \par
3525     printer->newPage();\par
3526 \par
3527 \par
3528 \par
3529     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
3530     QRectF logoMenorRect(20, 20, 100, 19);\par
3531 \par
3532     {\cf20 // Desenha a imagem na p\'E1gina}\par
3533     painter.drawImage(logoMenorRect, logo);\par
3534 \par
3535     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
3536     gradient.setColorAt(0, QColor(180, 235, 249));\par
3537     gradient.setColorAt(1, QColor(30, 56, 91));\par
3538     painter.setBrush(QBrush(gradient));\par
3539     {\cf20 //estilo da fonte do header}\par
3540     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
3541 \par
3542     {\cf20 // Define o estilo da fonte}\par
3543     QFont fontConteudo({\cf22 "Roboto"},12);\par
3544 \par
3545     {\cf18 int} inicioItem = 100;\par
3546 \par
3547 \par
3548     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
3549         {\cf18 bool} infectada = {\cf17 false};\par
3550         {\cf19 if}(!FrameBarras::barras[i].getBarraInfectadaThdv())\{\par
3551             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax  ; j+=2 )\{\par
3552                 {\cf19 if}(FrameBarras::barras[i].getDti().find(j)->second.second.second)\{\par
3553                     infectada = {\cf17 true};\par
3554                     {\cf19 break};\par
3555                 \}\par
3556             \}\par
3557         \}{\cf19 else}\{\par
3558             infectada = {\cf17 true};\par
3559         \}\par
3560         {\cf19 if}(infectada)\{\par
3561             {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
3562                 printer->newPage();\par
3563                 inicioItem = 100;\par
3564                 painter.drawImage(logoMenorRect, logo);\par
3565             \}\par
3566             QLabel* labelHeader = {\cf17 new} QLabel();\par
3567             labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3568             labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3569             labelHeader->setFont(fontHeader);\par
3570             labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3571             labelHeader->setTextFormat(Qt::RichText);\par
3572 \par
3573             {\cf20 // Cria a QString atributos com a tag <html>}\par
3574             QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3575 \par
3576             {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
3577                 atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
3578                     QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
3579                 atributos = atributos.arg(tensao);\par
3580             \}\par
3581 \par
3582             {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
3583                 atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
3584                     QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
3585                 atributos = atributos.arg(tensaoNominal);\par
3586             \}\par
3587 \par
3588             {\cf19 if} (FiltrosBarra::thdv) \{\par
3589                 (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
3590                 QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
3591                 atributos = atributos.arg(thdv);\par
3592             \}\par
3593 \par
3594             {\cf19 if}(FiltrosBarra::dit)\{\par
3595                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3596                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
3597                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
3598                     atributos = atributos.arg(j);\par
3599                     atributos = atributos.arg(tdi);\par
3600                 \}\par
3601             \}\par
3602 \par
3603             {\cf19 if}(FiltrosBarra::ditPercent)\{\par
3604                 {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3605                     (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
3606                     QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
3607                     atributos = atributos.arg(j);\par
3608                     atributos = atributos.arg(tdi);\par
3609                 \}\par
3610             \}\par
3611 \par
3612             {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
3613                 atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
3614                 QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
3615                 atributos = atributos.arg(tensaoEficaz);\par
3616             \}\par
3617 \par
3618             {\cf20 // Fecha a tag </div> e </html>}\par
3619             atributos += {\cf22 "</div></html>"};\par
3620 \par
3621             {\cf20 // Cria a QLabel com os atributos}\par
3622             QLabel* labelAtributos = {\cf17 new} QLabel();\par
3623             labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
3624             labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3625             labelAtributos->setFont(fontConteudo);\par
3626             labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3627             labelAtributos->setTextFormat(Qt::RichText);\par
3628             labelAtributos->setText(atributos);\par
3629 \par
3630             {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
3631             QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
3632             painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3633             painter.setFont(fontHeader);\par
3634             painter.setPen(QPen(Qt::white));\par
3635             painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3636 \par
3637             {\cf20 // Desenha a QLabel na imagem}\par
3638             QPixmap pixmap = labelAtributos->grab();\par
3639             painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
3640 \par
3641             inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
3642         \}\par
3643     \}\par
3644 \par
3645     printer->newPage();\par
3646 \par
3647     {\cf20 // Desenha a imagem na p\'E1gina}\par
3648     painter.drawImage(logoRect, logo);\par
3649 \par
3650     QString TituloLinhas = {\cf22 "Linhas"};\par
3651 \par
3652     painter.setPen(QPen());\par
3653     painter.setFont(fontePrincipal);\par
3654     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
3655 \par
3656 \par
3657     printer->newPage();\par
3658 \par
3659     {\cf20 // Desenha a imagem na p\'E1gina}\par
3660     painter.drawImage(logoMenorRect, logo);\par
3661 \par
3662     inicioItem = 100;\par
3663 \par
3664     {\cf19 for}({\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
3665 \par
3666         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
3667             printer->newPage();\par
3668             inicioItem = 100;\par
3669             painter.drawImage(logoMenorRect, logo);\par
3670 \par
3671         \}\par
3672 \par
3673         QLabel* labelHeader = {\cf17 new} QLabel();\par
3674         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
3675         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
3676         labelHeader->setFont(fontHeader);\par
3677         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
3678         labelHeader->setTextFormat(Qt::RichText);\par
3679 \par
3680 \par
3681         {\cf20 // Cria a QString atributos com a tag <html>}\par
3682         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
3683 \par
3684         {\cf19 if}(FiltroLinha::correntePu)\{\par
3685             atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
3686             QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
3687             atributos = atributos.arg(corrente);\par
3688         \}\par
3689         {\cf19 if}(FiltroLinha::dht)\{\par
3690             atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
3691             QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
3692             atributos = atributos.arg(dht);\par
3693         \}\par
3694         {\cf19 if}(FiltroLinha::dit)\{\par
3695             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3696                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
3697                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
3698                 atributos = atributos.arg(j);\par
3699                 atributos = atributos.arg(tdi);\par
3700             \}\par
3701         \}\par
3702         {\cf19 if}(FiltroLinha::ditPercent)\{\par
3703             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
3704                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
3705                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
3706                 atributos = atributos.arg(j);\par
3707                 atributos = atributos.arg(tdiPercent);\par
3708             \}\par
3709         \}\par
3710         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
3711             atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
3712             QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
3713             atributos = atributos.arg(correnteEficaz);\par
3714         \}\par
3715         {\cf19 if}(FiltroLinha::resistencia)\{\par
3716             atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
3717             QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
3718             atributos = atributos.arg(resistencia);\par
3719         \}\par
3720         {\cf19 if}(FiltroLinha::perdas)\{\par
3721             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3722             QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
3723             atributos = atributos.arg(perdas);\par
3724         \}\par
3725         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
3726             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
3727             QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
3728             atributos = atributos.arg(perdasEficaz);\par
3729         \}\par
3730 \par
3731         {\cf20 // Fecha a tag </div> e </html>}\par
3732         atributos += {\cf22 "</div></html>"};\par
3733 \par
3734         {\cf20 // Cria a QLabel com os atributos}\par
3735         QLabel* labelAtributos = {\cf17 new} QLabel();\par
3736         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
3737         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
3738         labelAtributos->setFont(fontConteudo);\par
3739         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
3740         labelAtributos->setTextFormat(Qt::RichText);\par
3741         labelAtributos->setText(atributos);\par
3742 \par
3743         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
3744         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
3745         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
3746         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
3747 \par
3748 \par
3749         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
3750         painter.setFont(fontHeader);\par
3751         painter.setPen(QPen(Qt::white));\par
3752         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
3753 \par
3754         {\cf20 // Desenha a QLabel na imagem}\par
3755         QPixmap pixmap = labelAtributos->grab();\par
3756         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
3757 \par
3758         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
3759 \par
3760     \}\par
3761 \par
3762     painter.end();\par
3763 \}\par
}
}
{\xe \v ContInterBarrasTodL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInterBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInterBarrasTodL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 894                                                               \{\par
895     QPainter painter(printer);\par
896     painter.begin(printer);\par
897     {\cf18 int} w = painter.device()->width();\par
898     {\cf18 int} h = painter.device()->height();\par
899 \par
900     {\cf20 // Carrega a imagem do arquivo}\par
901     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
902 \par
903     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
904     QRectF logoRect(20, 20, 300, 56);\par
905 \par
906     {\cf20 // Desenha a imagem na p\'E1gina}\par
907     painter.drawImage(logoRect, logo);\par
908 \par
909     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
910     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
911 \par
912     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
913     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
914 \par
915     QFontMetrics fmPrincipal(fontePrincipal);\par
916     QFontMetrics fmSubtexto(fonteSubtexto);\par
917 \par
918     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
919     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
920 \par
921     painter.setFont(fontePrincipal);\par
922     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
923 \par
924     painter.setFont(fonteSubtexto);\par
925     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
926 \par
927     printer->newPage();\par
928 \par
929     {\cf20 // Desenha a imagem na p\'E1gina}\par
930     painter.drawImage(logoRect, logo);\par
931 \par
932     QString TituloBarras = {\cf22 "Barras"};\par
933 \par
934 \par
935     painter.setFont(fontePrincipal);\par
936     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
937 \par
938     printer->newPage();\par
939 \par
940 \par
941 \par
942     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
943     QRectF logoMenorRect(20, 20, 100, 19);\par
944 \par
945     {\cf20 // Desenha a imagem na p\'E1gina}\par
946     painter.drawImage(logoMenorRect, logo);\par
947 \par
948     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
949     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
950 \par
951     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
952     gradient.setColorAt(0, QColor(180, 235, 249));\par
953     gradient.setColorAt(1, QColor(30, 56, 91));\par
954     painter.setBrush(QBrush(gradient));\par
955     {\cf20 //estilo da fonte do header}\par
956     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
957 \par
958     {\cf20 // Define o estilo da fonte}\par
959     QFont fontConteudo({\cf22 "Roboto"},12);\par
960 \par
961     {\cf18 int} inicioItem = 100;\par
962 \par
963 \par
964     {\cf19 for} ({\cf18 int} i = inicio; i <= fim; i++) \{\par
965 \par
966         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
967             printer->newPage();\par
968             inicioItem = 100;\par
969             painter.drawImage(logoMenorRect, logo);\par
970 \par
971         \}\par
972 \par
973         QLabel* labelHeader = {\cf17 new} QLabel();\par
974         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
975         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
976         labelHeader->setFont(fontHeader);\par
977         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
978         labelHeader->setTextFormat(Qt::RichText);\par
979 \par
980         {\cf20 // Cria a QString atributos com a tag <html>}\par
981         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
982 \par
983         {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
984             atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
985                 QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
986             atributos = atributos.arg(tensao);\par
987         \}\par
988 \par
989         {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
990             atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
991                 QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
992             atributos = atributos.arg(tensaoNominal);\par
993         \}\par
994 \par
995         {\cf19 if} (FiltrosBarra::thdv) \{\par
996             (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
997             QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
998             atributos = atributos.arg(thdv);\par
999         \}\par
1000 \par
1001         {\cf19 if}(FiltrosBarra::dit)\{\par
1002             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1003                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
1004                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
1005                 atributos = atributos.arg(j);\par
1006                 atributos = atributos.arg(tdi);\par
1007             \}\par
1008         \}\par
1009 \par
1010         {\cf19 if}(FiltrosBarra::ditPercent)\{\par
1011             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1012                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
1013                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
1014                 atributos = atributos.arg(j);\par
1015                 atributos = atributos.arg(tdi);\par
1016             \}\par
1017         \}\par
1018 \par
1019         {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
1020             atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
1021             QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
1022             atributos = atributos.arg(tensaoEficaz);\par
1023         \}\par
1024 \par
1025         {\cf20 // Fecha a tag </div> e </html>}\par
1026         atributos += {\cf22 "</div></html>"};\par
1027 \par
1028         {\cf20 // Cria a QLabel com os atributos}\par
1029         QLabel* labelAtributos = {\cf17 new} QLabel();\par
1030         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
1031         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1032         labelAtributos->setFont(fontConteudo);\par
1033         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1034         labelAtributos->setTextFormat(Qt::RichText);\par
1035         labelAtributos->setText(atributos);\par
1036 \par
1037         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
1038         QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
1039         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1040         painter.setFont(fontHeader);\par
1041         painter.setPen(QPen(Qt::white));\par
1042         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1043 \par
1044         {\cf20 // Desenha a QLabel na imagem}\par
1045         QPixmap pixmap = labelAtributos->grab();\par
1046         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
1047 \par
1048         inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
1049 \par
1050     \}\par
1051 \par
1052     printer->newPage();\par
1053 \par
1054     {\cf20 // Desenha a imagem na p\'E1gina}\par
1055     painter.drawImage(logoRect, logo);\par
1056 \par
1057     QString TituloLinhas = {\cf22 "Linhas"};\par
1058 \par
1059     painter.setPen(QPen());\par
1060     painter.setFont(fontePrincipal);\par
1061     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
1062 \par
1063 \par
1064     printer->newPage();\par
1065 \par
1066     {\cf20 // Desenha a imagem na p\'E1gina}\par
1067     painter.drawImage(logoMenorRect, logo);\par
1068 \par
1069     inicioItem = 100;\par
1070 \par
1071     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1072         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
1073         {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
1074             {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
1075                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
1076                     printer->newPage();\par
1077                     inicioItem = 100;\par
1078                     painter.drawImage(logoMenorRect, logo);\par
1079 \par
1080                 \}\par
1081 \par
1082                 QLabel* labelHeader = {\cf17 new} QLabel();\par
1083                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1084                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1085                 labelHeader->setFont(fontHeader);\par
1086                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1087                 labelHeader->setTextFormat(Qt::RichText);\par
1088 \par
1089 \par
1090                 {\cf20 // Cria a QString atributos com a tag <html>}\par
1091                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1092 \par
1093                 {\cf19 if}(FiltroLinha::correntePu)\{\par
1094                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
1095                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
1096                     atributos = atributos.arg(corrente);\par
1097                 \}\par
1098                 {\cf19 if}(FiltroLinha::dht)\{\par
1099                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
1100                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
1101                     atributos = atributos.arg(dht);\par
1102                 \}\par
1103                 {\cf19 if}(FiltroLinha::dit)\{\par
1104                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1105                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
1106                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
1107                         atributos = atributos.arg(j);\par
1108                         atributos = atributos.arg(tdi);\par
1109                     \}\par
1110                 \}\par
1111                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
1112                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1113                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
1114                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
1115                         atributos = atributos.arg(j);\par
1116                         atributos = atributos.arg(tdiPercent);\par
1117                     \}\par
1118                 \}\par
1119                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
1120                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
1121                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
1122                     atributos = atributos.arg(correnteEficaz);\par
1123                 \}\par
1124                 {\cf19 if}(FiltroLinha::resistencia)\{\par
1125                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
1126                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
1127                     atributos = atributos.arg(resistencia);\par
1128                 \}\par
1129                 {\cf19 if}(FiltroLinha::perdas)\{\par
1130                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1131                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
1132                     atributos = atributos.arg(perdas);\par
1133                 \}\par
1134                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
1135                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1136                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
1137                     atributos = atributos.arg(perdasEficaz);\par
1138                 \}\par
1139 \par
1140                 {\cf20 // Fecha a tag </div> e </html>}\par
1141                 atributos += {\cf22 "</div></html>"};\par
1142 \par
1143                 {\cf20 // Cria a QLabel com os atributos}\par
1144                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
1145                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
1146                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1147                 labelAtributos->setFont(fontConteudo);\par
1148                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1149                 labelAtributos->setTextFormat(Qt::RichText);\par
1150                 labelAtributos->setText(atributos);\par
1151 \par
1152                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
1153                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
1154                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
1155                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
1156 \par
1157 \par
1158                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1159                 painter.setFont(fontHeader);\par
1160                 painter.setPen(QPen(Qt::white));\par
1161                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1162 \par
1163                 {\cf20 // Desenha a QLabel na imagem}\par
1164                 QPixmap pixmap = labelAtributos->grab();\par
1165                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
1166 \par
1167                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
1168             \}\par
1169         \}\par
1170     \}\par
1171 \par
1172     painter.end();\par
1173 \}\par
}
}
{\xe \v ContInterBarrasTodL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInterBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInterBarrasTodL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1181                                                             \{\par
1182     QPainter painter(printer);\par
1183     painter.begin(printer);\par
1184     {\cf18 int} w = painter.device()->width();\par
1185     {\cf18 int} h = painter.device()->height();\par
1186 \par
1187     {\cf20 // Carrega a imagem do arquivo}\par
1188     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
1189 \par
1190     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1191     QRectF logoRect(20, 20, 300, 56);\par
1192 \par
1193     {\cf20 // Desenha a imagem na p\'E1gina}\par
1194     painter.drawImage(logoRect, logo);\par
1195 \par
1196     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
1197     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
1198 \par
1199     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
1200     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
1201 \par
1202     QFontMetrics fmPrincipal(fontePrincipal);\par
1203     QFontMetrics fmSubtexto(fonteSubtexto);\par
1204 \par
1205     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
1206     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
1207 \par
1208     painter.setFont(fontePrincipal);\par
1209     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
1210 \par
1211     painter.setFont(fonteSubtexto);\par
1212     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
1213 \par
1214     printer->newPage();\par
1215 \par
1216     {\cf20 // Desenha a imagem na p\'E1gina}\par
1217     painter.drawImage(logoRect, logo);\par
1218 \par
1219     QString TituloBarras = {\cf22 "Barras"};\par
1220 \par
1221 \par
1222     painter.setFont(fontePrincipal);\par
1223     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
1224 \par
1225     printer->newPage();\par
1226 \par
1227 \par
1228 \par
1229     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
1230     QRectF logoMenorRect(20, 20, 100, 19);\par
1231 \par
1232     {\cf20 // Desenha a imagem na p\'E1gina}\par
1233     painter.drawImage(logoMenorRect, logo);\par
1234 \par
1235     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
1236     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
1237 \par
1238     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
1239     gradient.setColorAt(0, QColor(180, 235, 249));\par
1240     gradient.setColorAt(1, QColor(30, 56, 91));\par
1241     painter.setBrush(QBrush(gradient));\par
1242     {\cf20 //estilo da fonte do header}\par
1243     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
1244 \par
1245     {\cf20 // Define o estilo da fonte}\par
1246     QFont fontConteudo({\cf22 "Roboto"},12);\par
1247 \par
1248     {\cf18 int} inicioItem = 100;\par
1249 \par
1250 \par
1251     {\cf19 for} ({\cf18 int} i = inicio; i <= fim; i++) \{\par
1252 \par
1253         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
1254             printer->newPage();\par
1255             inicioItem = 100;\par
1256             painter.drawImage(logoMenorRect, logo);\par
1257 \par
1258         \}\par
1259 \par
1260         QLabel* labelHeader = {\cf17 new} QLabel();\par
1261         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1262         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1263         labelHeader->setFont(fontHeader);\par
1264         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1265         labelHeader->setTextFormat(Qt::RichText);\par
1266 \par
1267         {\cf20 // Cria a QString atributos com a tag <html>}\par
1268         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1269 \par
1270         {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
1271             atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
1272                 QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
1273             atributos = atributos.arg(tensao);\par
1274         \}\par
1275 \par
1276         {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
1277             atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
1278                 QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
1279             atributos = atributos.arg(tensaoNominal);\par
1280         \}\par
1281 \par
1282         {\cf19 if} (FiltrosBarra::thdv) \{\par
1283             (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
1284             QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
1285             atributos = atributos.arg(thdv);\par
1286         \}\par
1287 \par
1288         {\cf19 if}(FiltrosBarra::dit)\{\par
1289             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1290                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
1291                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
1292                 atributos = atributos.arg(j);\par
1293                 atributos = atributos.arg(tdi);\par
1294             \}\par
1295         \}\par
1296 \par
1297         {\cf19 if}(FiltrosBarra::ditPercent)\{\par
1298             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1299                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
1300                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
1301                 atributos = atributos.arg(j);\par
1302                 atributos = atributos.arg(tdi);\par
1303             \}\par
1304         \}\par
1305 \par
1306         {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
1307             atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
1308             QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
1309             atributos = atributos.arg(tensaoEficaz);\par
1310         \}\par
1311 \par
1312         {\cf20 // Fecha a tag </div> e </html>}\par
1313         atributos += {\cf22 "</div></html>"};\par
1314 \par
1315         {\cf20 // Cria a QLabel com os atributos}\par
1316         QLabel* labelAtributos = {\cf17 new} QLabel();\par
1317         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
1318         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1319         labelAtributos->setFont(fontConteudo);\par
1320         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1321         labelAtributos->setTextFormat(Qt::RichText);\par
1322         labelAtributos->setText(atributos);\par
1323 \par
1324         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
1325         QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
1326         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1327         painter.setFont(fontHeader);\par
1328         painter.setPen(QPen(Qt::white));\par
1329         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1330 \par
1331         {\cf20 // Desenha a QLabel na imagem}\par
1332         QPixmap pixmap = labelAtributos->grab();\par
1333         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
1334 \par
1335         inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
1336 \par
1337     \}\par
1338 \par
1339     printer->newPage();\par
1340 \par
1341     {\cf20 // Desenha a imagem na p\'E1gina}\par
1342     painter.drawImage(logoRect, logo);\par
1343 \par
1344     QString TituloLinhas = {\cf22 "Linhas"};\par
1345 \par
1346     painter.setPen(QPen());\par
1347     painter.setFont(fontePrincipal);\par
1348     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
1349 \par
1350 \par
1351     printer->newPage();\par
1352 \par
1353     {\cf20 // Desenha a imagem na p\'E1gina}\par
1354     painter.drawImage(logoMenorRect, logo);\par
1355 \par
1356     inicioItem = 100;\par
1357 \par
1358     {\cf19 for}({\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
1359 \par
1360         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
1361             printer->newPage();\par
1362             inicioItem = 100;\par
1363             painter.drawImage(logoMenorRect, logo);\par
1364 \par
1365         \}\par
1366 \par
1367         QLabel* labelHeader = {\cf17 new} QLabel();\par
1368         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
1369         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
1370         labelHeader->setFont(fontHeader);\par
1371         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
1372         labelHeader->setTextFormat(Qt::RichText);\par
1373 \par
1374 \par
1375         {\cf20 // Cria a QString atributos com a tag <html>}\par
1376         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
1377 \par
1378         {\cf19 if}(FiltroLinha::correntePu)\{\par
1379             atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
1380             QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
1381             atributos = atributos.arg(corrente);\par
1382         \}\par
1383         {\cf19 if}(FiltroLinha::dht)\{\par
1384             atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
1385             QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
1386             atributos = atributos.arg(dht);\par
1387         \}\par
1388         {\cf19 if}(FiltroLinha::dit)\{\par
1389             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1390                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
1391                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
1392                 atributos = atributos.arg(j);\par
1393                 atributos = atributos.arg(tdi);\par
1394             \}\par
1395         \}\par
1396         {\cf19 if}(FiltroLinha::ditPercent)\{\par
1397             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
1398                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
1399                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
1400                 atributos = atributos.arg(j);\par
1401                 atributos = atributos.arg(tdiPercent);\par
1402             \}\par
1403         \}\par
1404         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
1405             atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
1406             QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
1407             atributos = atributos.arg(correnteEficaz);\par
1408         \}\par
1409         {\cf19 if}(FiltroLinha::resistencia)\{\par
1410             atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
1411             QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
1412             atributos = atributos.arg(resistencia);\par
1413         \}\par
1414         {\cf19 if}(FiltroLinha::perdas)\{\par
1415             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1416             QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
1417             atributos = atributos.arg(perdas);\par
1418         \}\par
1419         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
1420             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
1421             QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
1422             atributos = atributos.arg(perdasEficaz);\par
1423         \}\par
1424 \par
1425         {\cf20 // Fecha a tag </div> e </html>}\par
1426         atributos += {\cf22 "</div></html>"};\par
1427 \par
1428         {\cf20 // Cria a QLabel com os atributos}\par
1429         QLabel* labelAtributos = {\cf17 new} QLabel();\par
1430         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
1431         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
1432         labelAtributos->setFont(fontConteudo);\par
1433         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
1434         labelAtributos->setTextFormat(Qt::RichText);\par
1435         labelAtributos->setText(atributos);\par
1436 \par
1437         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
1438         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
1439         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
1440         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
1441 \par
1442 \par
1443         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
1444         painter.setFont(fontHeader);\par
1445         painter.setPen(QPen(Qt::white));\par
1446         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
1447 \par
1448         {\cf20 // Desenha a QLabel na imagem}\par
1449         QPixmap pixmap = labelAtributos->grab();\par
1450         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
1451 \par
1452         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
1453 \par
1454     \}\par
1455 \par
1456     painter.end();\par
1457 \}\par
}
}
{\xe \v ContInterBInterL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInterBInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInterBInterL1InterL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 317                                                            \{\par
318     QPainter painter(printer);\par
319     painter.begin(printer);\par
320     {\cf18 int} w = painter.device()->width();\par
321     {\cf18 int} h = painter.device()->height();\par
322 \par
323     {\cf20 // Carrega a imagem do arquivo}\par
324     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
325 \par
326     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
327     QRectF logoRect(20, 20, 300, 56);\par
328 \par
329     {\cf20 // Desenha a imagem na p\'E1gina}\par
330     painter.drawImage(logoRect, logo);\par
331 \par
332     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
333     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
334 \par
335     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
336     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
337 \par
338     QFontMetrics fmPrincipal(fontePrincipal);\par
339     QFontMetrics fmSubtexto(fonteSubtexto);\par
340 \par
341     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
342     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
343 \par
344     painter.setFont(fontePrincipal);\par
345     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
346 \par
347     painter.setFont(fonteSubtexto);\par
348     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
349 \par
350     printer->newPage();\par
351 \par
352     {\cf20 // Desenha a imagem na p\'E1gina}\par
353     painter.drawImage(logoRect, logo);\par
354 \par
355     QString TituloBarras = {\cf22 "Barras"};\par
356 \par
357 \par
358     painter.setFont(fontePrincipal);\par
359     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
360 \par
361     printer->newPage();\par
362 \par
363 \par
364 \par
365     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
366     QRectF logoMenorRect(20, 20, 100, 19);\par
367 \par
368     {\cf20 // Desenha a imagem na p\'E1gina}\par
369     painter.drawImage(logoMenorRect, logo);\par
370 \par
371     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
372     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
373 \par
374     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
375     gradient.setColorAt(0, QColor(180, 235, 249));\par
376     gradient.setColorAt(1, QColor(30, 56, 91));\par
377     painter.setBrush(QBrush(gradient));\par
378     {\cf20 //estilo da fonte do header}\par
379     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
380 \par
381     {\cf20 // Define o estilo da fonte}\par
382     QFont fontConteudo({\cf22 "Roboto"},12);\par
383 \par
384     {\cf18 int} inicioItem = 100;\par
385 \par
386 \par
387     {\cf19 for} ({\cf18 int} i = inicio; i <= fim; i++) \{\par
388 \par
389         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
390             printer->newPage();\par
391             inicioItem = 100;\par
392             painter.drawImage(logoMenorRect, logo);\par
393 \par
394         \}\par
395 \par
396         QLabel* labelHeader = {\cf17 new} QLabel();\par
397         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
398         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
399         labelHeader->setFont(fontHeader);\par
400         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
401         labelHeader->setTextFormat(Qt::RichText);\par
402 \par
403         {\cf20 // Cria a QString atributos com a tag <html>}\par
404         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
405 \par
406         {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
407             atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
408                 QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
409             atributos = atributos.arg(tensao);\par
410         \}\par
411 \par
412         {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
413             atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
414                 QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
415             atributos = atributos.arg(tensaoNominal);\par
416         \}\par
417 \par
418         {\cf19 if} (FiltrosBarra::thdv) \{\par
419             (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
420             QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
421             atributos = atributos.arg(thdv);\par
422         \}\par
423 \par
424         {\cf19 if}(FiltrosBarra::dit)\{\par
425             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
426                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
427                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
428                 atributos = atributos.arg(j);\par
429                 atributos = atributos.arg(tdi);\par
430             \}\par
431         \}\par
432 \par
433         {\cf19 if}(FiltrosBarra::ditPercent)\{\par
434             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
435                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
436                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
437                 atributos = atributos.arg(j);\par
438                 atributos = atributos.arg(tdi);\par
439             \}\par
440         \}\par
441 \par
442         {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
443             atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
444             QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
445             atributos = atributos.arg(tensaoEficaz);\par
446         \}\par
447 \par
448         {\cf20 // Fecha a tag </div> e </html>}\par
449         atributos += {\cf22 "</div></html>"};\par
450 \par
451         {\cf20 // Cria a QLabel com os atributos}\par
452         QLabel* labelAtributos = {\cf17 new} QLabel();\par
453         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
454         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
455         labelAtributos->setFont(fontConteudo);\par
456         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
457         labelAtributos->setTextFormat(Qt::RichText);\par
458         labelAtributos->setText(atributos);\par
459 \par
460         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
461         QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
462         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
463         painter.setFont(fontHeader);\par
464         painter.setPen(QPen(Qt::white));\par
465         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
466 \par
467         {\cf20 // Desenha a QLabel na imagem}\par
468         QPixmap pixmap = labelAtributos->grab();\par
469         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
470 \par
471         inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
472 \par
473     \}\par
474 \par
475     printer->newPage();\par
476 \par
477     {\cf20 // Desenha a imagem na p\'E1gina}\par
478     painter.drawImage(logoRect, logo);\par
479 \par
480     QString TituloLinhas = {\cf22 "Linhas"};\par
481 \par
482     painter.setPen(QPen());\par
483     painter.setFont(fontePrincipal);\par
484     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
485 \par
486 \par
487     printer->newPage();\par
488 \par
489     {\cf20 // Desenha a imagem na p\'E1gina}\par
490     painter.drawImage(logoMenorRect, logo);\par
491 \par
492     inicioItem = 100;\par
493 \par
494     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
495         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
496         {\cf18 int} barraDeDestino = FrameBarras::linhas[i].getDestino();\par
497         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
498             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
499                 {\cf19 for}( {\cf18 int} k = 0 ; k < FiltroLinha::indiceDestinosEscolhidos.size() ; k++)\{\par
500                     {\cf19 if}(FiltroLinha::indiceDestinosEscolhidos.at(k).toInt() == barraDeDestino)\{\par
501                         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
502                             printer->newPage();\par
503                             inicioItem = 100;\par
504                             painter.drawImage(logoMenorRect, logo);\par
505                         \}\par
506 \par
507                         QLabel* labelHeader = {\cf17 new} QLabel();\par
508                         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
509                         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
510                         labelHeader->setFont(fontHeader);\par
511                         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
512                         labelHeader->setTextFormat(Qt::RichText);\par
513 \par
514 \par
515                         {\cf20 // Cria a QString atributos com a tag <html>}\par
516                         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
517 \par
518                         {\cf19 if}(FiltroLinha::correntePu)\{\par
519                             atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
520                             QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
521                             atributos = atributos.arg(corrente);\par
522                         \}\par
523                         {\cf19 if}(FiltroLinha::dht)\{\par
524                             atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
525                             QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
526                             atributos = atributos.arg(dht);\par
527                         \}\par
528                         {\cf19 if}(FiltroLinha::dit)\{\par
529                             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
530                                 atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
531                                 QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
532                                 atributos = atributos.arg(j);\par
533                                 atributos = atributos.arg(tdi);\par
534                             \}\par
535                         \}\par
536                         {\cf19 if}(FiltroLinha::ditPercent)\{\par
537                             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
538                                 atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
539                                 QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
540                                 atributos = atributos.arg(j);\par
541                                 atributos = atributos.arg(tdiPercent);\par
542                             \}\par
543                         \}\par
544                         {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
545                             atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
546                             QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
547                             atributos = atributos.arg(correnteEficaz);\par
548                         \}\par
549                         {\cf19 if}(FiltroLinha::resistencia)\{\par
550                             atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
551                             QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
552                             atributos = atributos.arg(resistencia);\par
553                         \}\par
554                         {\cf19 if}(FiltroLinha::perdas)\{\par
555                             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
556                             QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
557                             atributos = atributos.arg(perdas);\par
558                         \}\par
559                         {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
560                             atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
561                             QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
562                             atributos = atributos.arg(perdasEficaz);\par
563                         \}\par
564 \par
565                         {\cf20 // Fecha a tag </div> e </html>}\par
566                         atributos += {\cf22 "</div></html>"};\par
567 \par
568                         {\cf20 // Cria a QLabel com os atributos}\par
569                         QLabel* labelAtributos = {\cf17 new} QLabel();\par
570                         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
571                         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
572                         labelAtributos->setFont(fontConteudo);\par
573                         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
574                         labelAtributos->setTextFormat(Qt::RichText);\par
575                         labelAtributos->setText(atributos);\par
576 \par
577                         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
578                         QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
579                         titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
580                         titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
581 \par
582 \par
583                         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
584                         painter.setFont(fontHeader);\par
585                         painter.setPen(QPen(Qt::white));\par
586                         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
587 \par
588                         {\cf20 // Desenha a QLabel na imagem}\par
589                         QPixmap pixmap = labelAtributos->grab();\par
590                         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
591 \par
592                         inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
593                     \}\par
594                 \}\par
595             \}\par
596         \}\par
597     \}\par
598 \par
599     painter.end();\par
600 \}\par
}
}
{\xe \v ContInterBInterL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:ContInterBInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::ContInterBInterL1TodL2 (QPrinter *  {\i printer})}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 609                                                          \{\par
610     QPainter painter(printer);\par
611     painter.begin(printer);\par
612     {\cf18 int} w = painter.device()->width();\par
613     {\cf18 int} h = painter.device()->height();\par
614 \par
615     {\cf20 // Carrega a imagem do arquivo}\par
616     QImage logo({\cf22 ":/logo/imgs/logo/logo.jpg"});\par
617 \par
618     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
619     QRectF logoRect(20, 20, 300, 56);\par
620 \par
621     {\cf20 // Desenha a imagem na p\'E1gina}\par
622     painter.drawImage(logoRect, logo);\par
623 \par
624     QString textoPrincipal = {\cf22 "Relat\'F3rio de Sistema El\'E9trico"};\par
625     QString subtexto = {\cf22 "Sistema com "} + QString::number(FrameTensoes::numeroDeBarras) + {\cf22 " barras e "} + QString::number(FrameBarras::numeroDeLinhas) + {\cf22 " linhas"};\par
626 \par
627     QFont fontePrincipal({\cf22 "Arial"}, 20, QFont::Bold);\par
628     QFont fonteSubtexto({\cf22 "Arial"}, 12);\par
629 \par
630     QFontMetrics fmPrincipal(fontePrincipal);\par
631     QFontMetrics fmSubtexto(fonteSubtexto);\par
632 \par
633     {\cf18 int} alturaTextoPrincipal = fmPrincipal.height();\par
634     {\cf18 int} alturaSubtexto = fmSubtexto.height();\par
635 \par
636     painter.setFont(fontePrincipal);\par
637     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, textoPrincipal);\par
638 \par
639     painter.setFont(fonteSubtexto);\par
640     painter.drawText(QRectF(0, (h - alturaSubtexto) / 2 + alturaTextoPrincipal, w, alturaSubtexto), Qt::AlignHCenter | Qt::AlignTop, subtexto);\par
641 \par
642     printer->newPage();\par
643 \par
644     {\cf20 // Desenha a imagem na p\'E1gina}\par
645     painter.drawImage(logoRect, logo);\par
646 \par
647     QString TituloBarras = {\cf22 "Barras"};\par
648 \par
649 \par
650     painter.setFont(fontePrincipal);\par
651     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloBarras);\par
652 \par
653     printer->newPage();\par
654 \par
655 \par
656 \par
657     {\cf20 // Define a posi\'E7\'E3o e tamanho da imagem}\par
658     QRectF logoMenorRect(20, 20, 100, 19);\par
659 \par
660     {\cf20 // Desenha a imagem na p\'E1gina}\par
661     painter.drawImage(logoMenorRect, logo);\par
662 \par
663     {\cf18 int} inicio = FiltrosBarra::indiceBarrasEscolhidas.at(0).toInt()-1;\par
664     {\cf18 int} fim = FiltrosBarra::indiceBarrasEscolhidas.at(1).toInt()-1;\par
665 \par
666     QLinearGradient gradient = QLinearGradient(0, 0, 0, 50);\par
667     gradient.setColorAt(0, QColor(180, 235, 249));\par
668     gradient.setColorAt(1, QColor(30, 56, 91));\par
669     painter.setBrush(QBrush(gradient));\par
670     {\cf20 //estilo da fonte do header}\par
671     QFont fontHeader({\cf22 "Roboto"},16,QFont::Bold);\par
672 \par
673     {\cf20 // Define o estilo da fonte}\par
674     QFont fontConteudo({\cf22 "Roboto"},12);\par
675 \par
676     {\cf18 int} inicioItem = 100;\par
677 \par
678 \par
679     {\cf19 for} ({\cf18 int} i = inicio; i <= fim; i++) \{\par
680 \par
681         {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoBarra()) < 10 ))\{\par
682             printer->newPage();\par
683             inicioItem = 100;\par
684             painter.drawImage(logoMenorRect, logo);\par
685 \par
686         \}\par
687 \par
688         QLabel* labelHeader = {\cf17 new} QLabel();\par
689         labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
690         labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
691         labelHeader->setFont(fontHeader);\par
692         labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
693         labelHeader->setTextFormat(Qt::RichText);\par
694 \par
695         {\cf20 // Cria a QString atributos com a tag <html>}\par
696         QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
697 \par
698         {\cf19 if} (FiltrosBarra::tensaoPu) \{\par
699             atributos += {\cf22 "<p><b>Tens\'E3o na Barra[pu]:</b> %1</p>"};\par
700                 QString tensao = QString::number(FrameBarras::barras[i].getTensaoPu(),{\cf23 'f'},5);\par
701             atributos = atributos.arg(tensao);\par
702         \}\par
703 \par
704         {\cf19 if} (FiltrosBarra::tensaoNominal) \{\par
705             atributos += {\cf22 "<p><b>Tens\'E3o Nominal[kV]:</b> %1</p>"};\par
706                 QString tensaoNominal = QString::number(FrameBarras::barras[i].getTensaoNominalKv(),{\cf23 'f'},5);\par
707             atributos = atributos.arg(tensaoNominal);\par
708         \}\par
709 \par
710         {\cf19 if} (FiltrosBarra::thdv) \{\par
711             (FrameBarras::barras[i].getBarraInfectadaThdv()) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>DHT[%]:</b> %1</p>"} : atributos += {\cf22 "<p><b>THDV[%]:</b> %1</p>"};\par
712             QString thdv = QString::number(FrameBarras::barras[i].getThdvPercent(),{\cf23 'f'},5);\par
713             atributos = atributos.arg(thdv);\par
714         \}\par
715 \par
716         {\cf19 if}(FiltrosBarra::dit)\{\par
717             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
718                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[pu]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[pu]:</b> %2</p>"};\par
719                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.first,{\cf23 'g'},5);\par
720                 atributos = atributos.arg(j);\par
721                 atributos = atributos.arg(tdi);\par
722             \}\par
723         \}\par
724 \par
725         {\cf19 if}(FiltrosBarra::ditPercent)\{\par
726             {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
727                 (FrameBarras::barras[i].getDti().find(j)->second.second.second) ? atributos +=  {\cf22 "<p style='background-color: #FF8080;'><b>TDI%1[%]:</b> %2</p>"} : atributos += {\cf22 "<p><b>TDI%1[%]:</b> %2</p>"};\par
728                 QString tdi = QString::number(FrameBarras::barras[i].getDti().find(j)->second.first.second,{\cf23 'f'},5);\par
729                 atributos = atributos.arg(j);\par
730                 atributos = atributos.arg(tdi);\par
731             \}\par
732         \}\par
733 \par
734         {\cf19 if}(FiltrosBarra::tensaoEficaz)\{\par
735             atributos += {\cf22 "<p><b>Tensao Eficaz[pu]:</b> %1</p>"};\par
736             QString tensaoEficaz = QString::number(FrameBarras::barras[i].getTensaoEficaz(),{\cf23 'f'},5);\par
737             atributos = atributos.arg(tensaoEficaz);\par
738         \}\par
739 \par
740         {\cf20 // Fecha a tag </div> e </html>}\par
741         atributos += {\cf22 "</div></html>"};\par
742 \par
743         {\cf20 // Cria a QLabel com os atributos}\par
744         QLabel* labelAtributos = {\cf17 new} QLabel();\par
745         labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra());\par
746         labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
747         labelAtributos->setFont(fontConteudo);\par
748         labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
749         labelAtributos->setTextFormat(Qt::RichText);\par
750         labelAtributos->setText(atributos);\par
751 \par
752         {\cf20 // Cria o t\'EDtulo com o n\'FAmero da barra}\par
753         QString titulo = QString({\cf22 "Barra %1"}).arg(i+1);\par
754         painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
755         painter.setFont(fontHeader);\par
756         painter.setPen(QPen(Qt::white));\par
757         painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
758 \par
759         {\cf20 // Desenha a QLabel na imagem}\par
760         QPixmap pixmap = labelAtributos->grab();\par
761         painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoBarra()).toRect(), pixmap);\par
762 \par
763         inicioItem += 100 + 30*QtdLinhasInfoBarra();\par
764 \par
765     \}\par
766 \par
767     printer->newPage();\par
768 \par
769     {\cf20 // Desenha a imagem na p\'E1gina}\par
770     painter.drawImage(logoRect, logo);\par
771 \par
772     QString TituloLinhas = {\cf22 "Linhas"};\par
773 \par
774     painter.setPen(QPen());\par
775     painter.setFont(fontePrincipal);\par
776     painter.drawText(QRectF(0, (h - alturaTextoPrincipal - alturaSubtexto) / 2, w, alturaTextoPrincipal), Qt::AlignHCenter | Qt::AlignTop, TituloLinhas);\par
777 \par
778 \par
779     printer->newPage();\par
780 \par
781     {\cf20 // Desenha a imagem na p\'E1gina}\par
782     painter.drawImage(logoMenorRect, logo);\par
783 \par
784     inicioItem = 100;\par
785     {\cf19 for}( {\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
786         {\cf18 int} barraDeOrigem = FrameBarras::linhas[i].getOrigem();\par
787         {\cf19 for}( {\cf18 int} j = 0 ; j < FiltroLinha::indiceOrigensEscolhidas.size() ; j++)\{\par
788             {\cf19 if}(FiltroLinha::indiceOrigensEscolhidas.at(j).toInt() == barraDeOrigem)\{\par
789                 {\cf19 if}((h - (inicioItem+100+30*QtdLinhasInfoLinha()) < 10 ))\{\par
790                     printer->newPage();\par
791                     inicioItem = 100;\par
792                     painter.drawImage(logoMenorRect, logo);\par
793                 \}\par
794 \par
795                 QLabel* labelHeader = {\cf17 new} QLabel();\par
796                 labelHeader->setGeometry((w-500)/2, inicioItem, 500, 30);\par
797                 labelHeader->setStyleSheet({\cf22 "background-color: #1E385B; border-top-left-radius: 10px; border-top-right-radius: 10px; padding: 10px;"});\par
798                 labelHeader->setFont(fontHeader);\par
799                 labelHeader->setAlignment(Qt::AlignTop | Qt::AlignHCenter);\par
800                 labelHeader->setTextFormat(Qt::RichText);\par
801 \par
802 \par
803                 {\cf20 // Cria a QString atributos com a tag <html>}\par
804                 QString atributos = {\cf22 "<html><div style='color: black; border-radius: 10px; padding: 10px'>"};\par
805 \par
806                 {\cf19 if}(FiltroLinha::correntePu)\{\par
807                     atributos += {\cf22 "<p><b>Corrente na Linha[pu]:</b> %1</p>"};\par
808                     QString corrente = QString::number(FrameBarras::linhas[i].getCorrente(),{\cf23 'f'},5);\par
809                     atributos = atributos.arg(corrente);\par
810                 \}\par
811                 {\cf19 if}(FiltroLinha::dht)\{\par
812                     atributos += {\cf22 "<p><b>DHT[%]:</b> %1</p>"};\par
813                     QString dht = QString::number(FrameBarras::linhas[i].getDhtPercent(),{\cf23 'f'},5);\par
814                     atributos = atributos.arg(dht);\par
815                 \}\par
816                 {\cf19 if}(FiltroLinha::dit)\{\par
817                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
818                         atributos += {\cf22 "<p><b>DHI%1[pu]:</b> %2</p>"};\par
819                         QString tdi = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.first,{\cf23 'g'},5);\par
820                         atributos = atributos.arg(j);\par
821                         atributos = atributos.arg(tdi);\par
822                     \}\par
823                 \}\par
824                 {\cf19 if}(FiltroLinha::ditPercent)\{\par
825                     {\cf19 for}( {\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
826                         atributos += {\cf22 "<p><b>DHI%1[%]:</b> %2</p>"};\par
827                         QString tdiPercent = QString::number(FrameBarras::linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5);\par
828                         atributos = atributos.arg(j);\par
829                         atributos = atributos.arg(tdiPercent);\par
830                     \}\par
831                 \}\par
832                 {\cf19 if}(FiltroLinha::correnteEficaz)\{\par
833                     atributos += {\cf22 "<p><b>Corrente Eficaz[pu]:</b> %1</p>"};\par
834                     QString correnteEficaz = QString::number(FrameBarras::linhas[i].getCorrenteEficaz(),{\cf23 'f'},5);\par
835                     atributos = atributos.arg(correnteEficaz);\par
836                 \}\par
837                 {\cf19 if}(FiltroLinha::resistencia)\{\par
838                     atributos += {\cf22 "<p><b>Resistencia[ohm]:</b> %1</p>"};\par
839                     QString resistencia = QString::number(FrameBarras::linhas[i].getResistencia(),{\cf23 'f'},5);\par
840                     atributos = atributos.arg(resistencia);\par
841                 \}\par
842                 {\cf19 if}(FiltroLinha::perdas)\{\par
843                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
844                     QString perdas = QString::number(FrameBarras::linhas[i].getPerdas(),{\cf23 'f'},5);\par
845                     atributos = atributos.arg(perdas);\par
846                 \}\par
847                 {\cf19 if}(FiltroLinha::perdasEficaz)\{\par
848                     atributos += {\cf22 "<p><b>Perdas[pu]:</b> %1</p>"};\par
849                     QString perdasEficaz = QString::number(FrameBarras::linhas[i].getPerdasEficaz(),{\cf23 'f'},5);\par
850                     atributos = atributos.arg(perdasEficaz);\par
851                 \}\par
852 \par
853                 {\cf20 // Fecha a tag </div> e </html>}\par
854                 atributos += {\cf22 "</div></html>"};\par
855 \par
856                 {\cf20 // Cria a QLabel com os atributos}\par
857                 QLabel* labelAtributos = {\cf17 new} QLabel();\par
858                 labelAtributos->setGeometry((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha());\par
859                 labelAtributos->setStyleSheet({\cf22 "background-color: #F5F5F5; border-radius: 10px; padding: 10px;"});\par
860                 labelAtributos->setFont(fontConteudo);\par
861                 labelAtributos->setAlignment(Qt::AlignLeft | Qt::AlignTop);\par
862                 labelAtributos->setTextFormat(Qt::RichText);\par
863                 labelAtributos->setText(atributos);\par
864 \par
865                 {\cf20 // Cria o t\'EDtulo com o n\'FAmero da linha}\par
866                 QString titulo = QString({\cf22 "Linha %1 \\u279E %2"});\par
867                 titulo = titulo.arg(FrameBarras::linhas[i].getOrigem());\par
868                 titulo = titulo.arg(FrameBarras::linhas[i].getDestino());\par
869 \par
870 \par
871                 painter.fillRect(QRectF((w-500)/2, inicioItem, 500, 30), QBrush(QColor({\cf22 "#1E385B"})));\par
872                 painter.setFont(fontHeader);\par
873                 painter.setPen(QPen(Qt::white));\par
874                 painter.drawText(QRectF((w-500)/2, inicioItem, 500, 30), titulo, QTextOption(Qt::AlignCenter));\par
875 \par
876                 {\cf20 // Desenha a QLabel na imagem}\par
877                 QPixmap pixmap = labelAtributos->grab();\par
878                 painter.drawPixmap(QRectF((w-500)/2, inicioItem + 30, 500,10+ 30*QtdLinhasInfoLinha()).toRect(), pixmap);\par
879 \par
880                 inicioItem += 100 + 30*QtdLinhasInfoLinha();\par
881             \}\par
882         \}\par
883     \}\par
884 \par
885     painter.end();\par
886 \}\par
}
}
{\xe \v PdfCompBarrasaTodL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfCompBarrasaTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfCompBarrasaTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 201                                           \{\par
202     QPrinter printer;\par
203     printer.setPrinterName({\cf22 "PDF"});\par
204 \par
205     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
206 \par
207     {\cf19 if} (filename.isEmpty()) \{\par
208         {\cf19 return};\par
209     \}\par
210 \par
211     printer.setOutputFormat(QPrinter::PdfFormat);\par
212     printer.setOutputFileName(filename);\par
213 \par
214     ContCompBarrasaTodL1TodL2(&printer);\par
215 \par
216     QDesktopServices::openUrl(QUrl(filename));\par
217 \}\par
}
}
{\xe \v PdfCompBarrasInterL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfCompBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfCompBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 132                                              \{\par
133     QPrinter printer;\par
134     printer.setPrinterName({\cf22 "PDF"});\par
135 \par
136     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
137 \par
138     {\cf19 if} (filename.isEmpty()) \{\par
139         {\cf19 return};\par
140     \}\par
141 \par
142     printer.setOutputFormat(QPrinter::PdfFormat);\par
143     printer.setOutputFileName(filename);\par
144 \par
145     ContCompBarrasInterL1InterL2(&printer);\par
146 \par
147     QDesktopServices::openUrl(QUrl(filename));\par
148 \}\par
}
}
{\xe \v PdfCompBarrasInterL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfCompBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfCompBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 155                                            \{\par
156     QPrinter printer;\par
157     printer.setPrinterName({\cf22 "PDF"});\par
158 \par
159     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
160 \par
161     {\cf19 if} (filename.isEmpty()) \{\par
162         {\cf19 return};\par
163     \}\par
164 \par
165     printer.setOutputFormat(QPrinter::PdfFormat);\par
166     printer.setOutputFileName(filename);\par
167 \par
168     ContCompBarrasInterL1TodL2(&printer);\par
169 \par
170     QDesktopServices::openUrl(QUrl(filename));\par
171 \}\par
}
}
{\xe \v PdfCompBarrasTodL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfCompBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfCompBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 178                                            \{\par
179     QPrinter printer;\par
180     printer.setPrinterName({\cf22 "PDF"});\par
181 \par
182     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
183 \par
184     {\cf19 if} (filename.isEmpty()) \{\par
185         {\cf19 return};\par
186     \}\par
187 \par
188     printer.setOutputFormat(QPrinter::PdfFormat);\par
189     printer.setOutputFileName(filename);\par
190 \par
191     ContCompBarrasTodL1InterL2(&printer);\par
192 \par
193     QDesktopServices::openUrl(QUrl(filename));\par
194 \}\par
}
}
{\xe \v PdfInfecBarrasInterL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInfecBarrasInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInfecBarrasInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 224                                               \{\par
225     QPrinter printer;\par
226     printer.setPrinterName({\cf22 "PDF"});\par
227 \par
228     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
229 \par
230     {\cf19 if} (filename.isEmpty()) \{\par
231         {\cf19 return};\par
232     \}\par
233 \par
234     printer.setOutputFormat(QPrinter::PdfFormat);\par
235     printer.setOutputFileName(filename);\par
236 \par
237     ContInfecBarrasInterL1InterL2(&printer);\par
238 \par
239     QDesktopServices::openUrl(QUrl(filename));\par
240 \}\par
}
}
{\xe \v PdfInfecBarrasInterL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInfecBarrasInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInfecBarrasInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 247                                             \{\par
248     QPrinter printer;\par
249     printer.setPrinterName({\cf22 "PDF"});\par
250 \par
251     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
252 \par
253     {\cf19 if} (filename.isEmpty()) \{\par
254         {\cf19 return};\par
255     \}\par
256 \par
257     printer.setOutputFormat(QPrinter::PdfFormat);\par
258     printer.setOutputFileName(filename);\par
259 \par
260     ContInfecBarrasInterL1TodL2(&printer);\par
261 \par
262     QDesktopServices::openUrl(QUrl(filename));\par
263 \}\par
}
}
{\xe \v PdfInfecBarrasTodL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInfecBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInfecBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 270                                             \{\par
271     QPrinter printer;\par
272     printer.setPrinterName({\cf22 "PDF"});\par
273 \par
274     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
275 \par
276     {\cf19 if} (filename.isEmpty()) \{\par
277         {\cf19 return};\par
278     \}\par
279 \par
280     printer.setOutputFormat(QPrinter::PdfFormat);\par
281     printer.setOutputFileName(filename);\par
282 \par
283     ContInfecBarrasTodL1InterL2(&printer);\par
284 \par
285     QDesktopServices::openUrl(QUrl(filename));\par
286 \}\par
}
}
{\xe \v PdfInfecBarrasTodL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInfecBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInfecBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 293                                           \{\par
294     QPrinter printer;\par
295     printer.setPrinterName({\cf22 "PDF"});\par
296 \par
297     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
298 \par
299     {\cf19 if} (filename.isEmpty()) \{\par
300         {\cf19 return};\par
301     \}\par
302 \par
303     printer.setOutputFormat(QPrinter::PdfFormat);\par
304     printer.setOutputFileName(filename);\par
305 \par
306     ContInfecBarrasTodL1TodL2(&printer);\par
307 \par
308     QDesktopServices::openUrl(QUrl(filename));\par
309 \}\par
}
}
{\xe \v PdfInterBarrasTodL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInterBarrasTodL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInterBarrasTodL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 86                                             \{\par
87     QPrinter printer;\par
88     printer.setPrinterName({\cf22 "PDF"});\par
89 \par
90     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
91 \par
92     {\cf19 if} (filename.isEmpty()) \{\par
93         {\cf19 return};\par
94     \}\par
95 \par
96     printer.setOutputFormat(QPrinter::PdfFormat);\par
97     printer.setOutputFileName(filename);\par
98 \par
99     ContInterBarrasTodL1InterL2(&printer);\par
100 \par
101     QDesktopServices::openUrl(QUrl(filename));\par
102 \}\par
}
}
{\xe \v PdfInterBarrasTodL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInterBarrasTodL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInterBarrasTodL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 109                                           \{\par
110     QPrinter printer;\par
111     printer.setPrinterName({\cf22 "PDF"});\par
112 \par
113     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
114 \par
115     {\cf19 if} (filename.isEmpty()) \{\par
116         {\cf19 return};\par
117     \}\par
118 \par
119     printer.setOutputFormat(QPrinter::PdfFormat);\par
120     printer.setOutputFileName(filename);\par
121 \par
122     ContInterBarrasTodL1TodL2(&printer);\par
123 \par
124     QDesktopServices::openUrl(QUrl(filename));\par
125 \}\par
}
}
{\xe \v PdfInterBInterL1InterL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInterBInterL1InterL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInterBInterL1InterL2 ()}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 40                                          \{\par
41     QPrinter printer;\par
42     printer.setPrinterName({\cf22 "PDF"});\par
43 \par
44     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
45 \par
46     {\cf19 if} (filename.isEmpty()) \{\par
47         {\cf19 return};\par
48     \}\par
49 \par
50     printer.setOutputFormat(QPrinter::PdfFormat);\par
51     printer.setOutputFileName(filename);\par
52 \par
53     ContInterBInterL1InterL2(&printer);\par
54 \par
55     QDesktopServices::openUrl(QUrl(filename));\par
56 \}\par
}
}
{\xe \v PdfInterBInterL1TodL2\:ExportarPdf}
{\xe \v ExportarPdf\:PdfInterBInterL1TodL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExportarPdf::PdfInterBInterL1TodL2 ()}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 63                                        \{\par
64     QPrinter printer;\par
65     printer.setPrinterName({\cf22 "PDF"});\par
66 \par
67     QString filename = QFileDialog::getSaveFileName(parenteExportarPdf, {\cf22 "Salvar Arquivo"}, QDir::homePath(), {\cf22 "Arquivos PDF (*.pdf)"});\par
68 \par
69     {\cf19 if} (filename.isEmpty()) \{\par
70         {\cf19 return};\par
71     \}\par
72 \par
73     printer.setOutputFormat(QPrinter::PdfFormat);\par
74     printer.setOutputFileName(filename);\par
75 \par
76     ContInterBInterL1TodL2(&printer);\par
77 \par
78     QDesktopServices::openUrl(QUrl(filename));\par
79 \}\par
}
}
{\xe \v QtdLinhasInfoBarra\:ExportarPdf}
{\xe \v ExportarPdf\:QtdLinhasInfoBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ExportarPdf::QtdLinhasInfoBarra ()}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3771                                    \{\par
3772     {\cf18 int} linhas = 0 ;\par
3773 \par
3774     linhas += (int)FiltrosBarra::tensaoPu;\par
3775     linhas += (int)FiltrosBarra::tensaoNominal;\par
3776     linhas += (int)FiltrosBarra::thdv;\par
3777     linhas += (int)FiltrosBarra::dit * (FrameBarras::quantidadeDeComponentesHarm);\par
3778     linhas += (int)FiltrosBarra::ditPercent * (FrameBarras::quantidadeDeComponentesHarm);\par
3779     linhas += (int)FiltrosBarra::tensaoEficaz;\par
3780 \par
3781     {\cf19 return} linhas;\par
3782 \}\par
}
}
{\xe \v QtdLinhasInfoLinha\:ExportarPdf}
{\xe \v ExportarPdf\:QtdLinhasInfoLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ExportarPdf::QtdLinhasInfoLinha ()}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3789                                    \{\par
3790     {\cf18 int} linhas = 0 ;\par
3791 \par
3792     linhas += (int) FiltroLinha::correntePu;\par
3793     linhas += (int) FiltroLinha::dht;\par
3794     linhas += (int) FiltroLinha::dit * (FrameBarras::quantidadeDeComponentesHarm);\par
3795     linhas += (int) FiltroLinha::ditPercent * (FrameBarras::quantidadeDeComponentesHarm);\par
3796     linhas += (int) FiltroLinha::correnteEficaz;\par
3797     linhas += (int) FiltroLinha::resistencia;\par
3798     linhas += (int) FiltroLinha::perdas;\par
3799     linhas += (int) FiltroLinha::perdasEficaz;\par
3800 \par
3801     {\cf19 return} linhas;\par
3802 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b exportarpdf.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b exportarpdf.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FiltroLinha Class Reference\par \pard\plain 
{\tc\tcl2 \v FiltroLinha}
{\xe \v FiltroLinha}
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableLinhas do {\b FrameBarras}. }}\par
{
{\f2 #include <filtrolinha.h>}}\par
Inheritance diagram for FiltroLinha:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_filtro_linha.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::FiltroLinha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b FiltroLinha}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fb} \cell }{(Par\'E3metro do tipo Ui::FrameBarras para permitir acesso aos componentes da interface do frame {\b FrameBarras}) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FiltroLinha} (QWidget *parent=nullptr, Ui::FrameBarras *fb=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::~FiltroLinha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b FiltroLinha} \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FiltroLinha} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inserindoQssFiltrosLinha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar m\'E9todos que inserem Qss nos componentes do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssFiltrosLinha} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inserindoQssCheckBox\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos Checkbox's do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssCheckBox} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inserindoQssLineEdit\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no LineEdit\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssLineEdit} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inserindoQssBtnAplicar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o Aplicar\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssBtnAplicar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inserindoQssComboBox\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no ComboBox\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssComboBox} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inserindoQssGroupBox\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos GroupBox's\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssGroupBox} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inserindoQssJanela\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir icon e title na janela\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssJanela} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::inicializandoFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primeiro m\'E9todo a ser chamada no construtor, respons\'E1vel por chamar os m\'E9todos subsequ\'EAntes que modelam a Interface do frame.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializandoFrame} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::atualizaVariaveis\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por atualizar variaveis est\'E1ticas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b atualizaVariaveis} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::filtrarLinhasTabela\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as linhas da tabela Linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarLinhasTabela} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::filtrarColunasTabela\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar metodos que filtram as colunas \'E0 depender da escolha do us\'FAario\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColunasTabela} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::filtrarColTod1Tod2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as colunas - Aparecer\'E3o todas as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColTod1Tod2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::filtrarColTod1Ind2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as colunas - Aparecer\'E3o todas que correponderem aos destinos escolhidos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColTod1Ind2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::filtrarColInd1Tod2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as colunas - Aparecer\'E3o todas que correponderem as origens escolhidas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColInd1Tod2} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltroLinha::filtrarColInd1Ind2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as colunas - Aparecer\'E3o todas que correponderem as origens e aos destinos escolhidos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColInd1Ind2} ()\par
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b correntePu} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da corrente na linha dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b dht} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dht dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b dit} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b ditPercent} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit percentual dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b correnteEficaz} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da corrente eficaz dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b resistencia} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da resist\'EAncia dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b perdas} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox das perdas dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b perdasEficaz} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox das perdas eficaz dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexComboBoxOrigem} = 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual checkbox est\'E1 selecionado para a origem das linhas ( 0 para todas as linhas , 1 para selecionar as origens) Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexComboBoxDestino} = 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual checkbox est\'E1 selecionado para a destino das linhas ( 0 para todas as linhas , 1 para selecionar os destinos) Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexComboBoxOrigemEnvio} =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das linhas para a origem foi a ultima a ser selecionada e concluida Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexComboBoxDestinoEnvio} =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das linhas para o destino foi a ultima a ser selecionada e concluida Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QStringList {\b indiceOrigensEscolhidas}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o indice das origens escolhidas em um QStringList. Caso seja escolhido o metodo de selecionar as linhas de forma individual, as origens sao separadas por virgula. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QStringList {\b indiceDestinosEscolhidos}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o indice dos destinos escolhidas em um QStringList. Caso seja escolhido o metodo de selecionar as linhas de forma individual, os destinos sao separados por virgula. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableLinhas do {\b FrameBarras}. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FiltroLinha\:FiltroLinha}
{\xe \v FiltroLinha\:FiltroLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FiltroLinha::FiltroLinha (QWidget *  {\i parent} = {\f2 nullptr}, Ui::FrameBarras *  {\i fb} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 135                                                             :\par
136     QDialog(parent),\par
137     ui({\cf17 new} Ui::FiltroLinha)\par
138 \{\par
139     ui->setupUi({\cf17 this});\par
140     Style style;\par
141     setParent(parent);\par
142     frameBarras2 = fb;\par
143 \par
144     inicializandoFrame();\par
145 \par
146 \}\par
}
}
{\xe \v ~FiltroLinha\:FiltroLinha}
{\xe \v FiltroLinha\:~FiltroLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FiltroLinha::~FiltroLinha ()}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 153 \{\par
154     {\cf17 delete} ui;\par
155 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v atualizaVariaveis\:FiltroLinha}
{\xe \v FiltroLinha\:atualizaVariaveis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::atualizaVariaveis ()}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 328                                    \{\par
329     correntePu = ui->checkBoxCorrente->isChecked();\par
330     dht = ui->checkBoxDht->isChecked();\par
331     dit = ui->checkboxDit->isChecked();\par
332     ditPercent = ui->checkBoxDitPercent->isChecked();\par
333     correnteEficaz = ui->checkBoxCorrenteEficaz->isChecked();\par
334     resistencia = ui->checkBoxResistencia->isChecked();\par
335     perdas = ui->checkBoxPerdas->isChecked();\par
336     perdasEficaz = ui->checkBoxPerdasEficaz->isChecked();\par
337 \}\par
}
}
{\xe \v filtrarColInd1Ind2\:FiltroLinha}
{\xe \v FiltroLinha\:filtrarColInd1Ind2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::filtrarColInd1Ind2 ()}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 525                                     \{\par
526     {\cf19 for} ({\cf18 int} i = 0; i < FrameBarras::numeroDeLinhas; i++) \{\par
527         frameBarras2->tableLinhas->setColumnHidden(i, {\cf17 false});\par
528     \}\par
529 \par
530     QStringList SelecionadasOrigem;\par
531     QStringList SelecionadasDestino;\par
532 \par
533     {\cf19 try} \{\par
534         SelecionadasOrigem = ui->lineEditFLinha->text().split({\cf22 ","});\par
535         {\cf19 if} (SelecionadasOrigem.isEmpty()) \{\par
536             {\cf19 throw} std::runtime_error({\cf22 "A lista de origens selecionadas est\'E1 vazia."});\par
537         \}\par
538     \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
539         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, e.what());\par
540         {\cf19 return};\par
541     \}\par
542 \par
543     {\cf19 try} \{\par
544         SelecionadasDestino = ui->lineEditFLinha2->text().split({\cf22 ","});\par
545         {\cf19 if} (SelecionadasDestino.isEmpty()) \{\par
546             {\cf19 throw} std::runtime_error({\cf22 "A lista de destinos selecionados est\'E1 vazia."});\par
547         \}\par
548     \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
549         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, e.what());\par
550         {\cf19 return};\par
551     \}\par
552 \par
553     {\cf19 for} ({\cf18 int} i = 0; i < FrameBarras::numeroDeLinhas; i++) \{\par
554         {\cf18 int} barraDeDestino = frameBarras2->tableLinhas->horizontalHeaderItem(i)->text().split({\cf22 "->"}).at(1).toInt();\par
555         {\cf18 int} barraDeOrigem = frameBarras2->tableLinhas->horizontalHeaderItem(i)->text().split({\cf22 "->"}).at(0).toInt();\par
556 \par
557         {\cf18 bool} origemEncontrada = {\cf17 false};\par
558         {\cf18 bool} destinoEncontrado = {\cf17 false};\par
559 \par
560         {\cf19 for} ({\cf18 int} j = 0; j < SelecionadasOrigem.size(); j++) \{\par
561             {\cf19 if} (SelecionadasOrigem.at(j).toInt() == barraDeOrigem) \{\par
562                 origemEncontrada = {\cf17 true};\par
563                 {\cf19 break};\par
564             \}\par
565         \}\par
566 \par
567         {\cf19 for} ({\cf18 int} j = 0; j < SelecionadasDestino.size(); j++) \{\par
568             {\cf19 if} (SelecionadasDestino.at(j).toInt() == barraDeDestino) \{\par
569                 destinoEncontrado = {\cf17 true};\par
570                 {\cf19 break};\par
571             \}\par
572         \}\par
573 \par
574         {\cf19 if} (!origemEncontrada || !destinoEncontrado) \{\par
575             frameBarras2->tableLinhas->setColumnHidden(i, {\cf17 true});\par
576         \}\par
577     \}\par
578 \par
579     indiceOrigensEscolhidas = SelecionadasOrigem;\par
580     indiceDestinosEscolhidos = SelecionadasDestino;\par
581     indexComboBoxOrigemEnvio = indexComboBoxOrigem;\par
582     indexComboBoxDestinoEnvio = indexComboBoxDestino;\par
583 \}\par
}
}
{\xe \v filtrarColInd1Tod2\:FiltroLinha}
{\xe \v FiltroLinha\:filtrarColInd1Tod2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::filtrarColInd1Tod2 ()}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 482                                     \{\par
483     {\cf19 for} ({\cf18 int} i = 0; i < FrameBarras::numeroDeLinhas; i++) \{\par
484         frameBarras2->tableLinhas->setColumnHidden(i, {\cf17 false});\par
485     \}\par
486 \par
487     {\cf19 try} \{\par
488         QString Selecionadas = ui->lineEditFLinha->text().trimmed();\par
489 \par
490         {\cf19 if} (Selecionadas.isEmpty()) \{\par
491             {\cf19 throw} std::runtime_error({\cf22 "O campo n\'E3o pode ser vazio."});\par
492         \}\par
493 \par
494         QStringList selecionadas = Selecionadas.split({\cf22 ","});\par
495 \par
496         {\cf19 for} ({\cf18 int} i = 0; i < FrameBarras::numeroDeLinhas; i++) \{\par
497             {\cf18 int} barraDeOrigem = frameBarras2->tableLinhas->horizontalHeaderItem(i)->text().split({\cf22 "->"}).at(0).toInt();\par
498             {\cf18 bool} selecionadaEncontrada = {\cf17 false};\par
499             {\cf19 for} ({\cf17 const} QString& selecionada : selecionadas) \{\par
500                 {\cf19 if} (selecionada.toInt() == barraDeOrigem) \{\par
501                     selecionadaEncontrada = {\cf17 true};\par
502                     {\cf19 break};\par
503                 \}\par
504             \}\par
505             {\cf19 if} (!selecionadaEncontrada) \{\par
506                 frameBarras2->tableLinhas->setColumnHidden(i, {\cf17 true});\par
507             \} {\cf19 else} \{\par
508                 frameBarras2->tableLinhas->setColumnHidden(i, {\cf17 false});\par
509             \}\par
510         \}\par
511 \par
512         indiceOrigensEscolhidas = selecionadas;\par
513         indexComboBoxOrigemEnvio = indexComboBoxOrigem;\par
514     \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
515         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, e.what());\par
516         {\cf19 return};\par
517     \}\par
518 \}\par
}
}
{\xe \v filtrarColTod1Ind2\:FiltroLinha}
{\xe \v FiltroLinha\:filtrarColTod1Ind2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::filtrarColTod1Ind2 ()}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 442                                     \{\par
443     {\cf19 try} \{\par
444         QString Selecionadas = ui->lineEditFLinha2->text().trimmed();\par
445 \par
446         {\cf19 if} (Selecionadas.isEmpty()) \{\par
447             {\cf19 throw} std::runtime_error({\cf22 "O campo n\'E3o pode ser vazio."});\par
448         \}\par
449 \par
450         {\cf19 for} ({\cf18 int} i = 0; i < FrameBarras::numeroDeLinhas; i++) \{\par
451             frameBarras2->tableLinhas->setColumnHidden(i, {\cf17 false});\par
452         \}\par
453 \par
454         QStringList indices = Selecionadas.split({\cf22 ","});\par
455         {\cf19 for} ({\cf18 int} i = 0; i < FrameBarras::numeroDeLinhas; i++) \{\par
456             {\cf18 int} barraDeDestino = frameBarras2->tableLinhas->horizontalHeaderItem(i)->text().split({\cf22 "->"}).at(1).toInt();\par
457             {\cf18 bool} encontrada = {\cf17 false};\par
458             {\cf19 for} ({\cf18 int} j = 0; j < indices.size(); j++) \{\par
459                 {\cf19 if} (indices.at(j).toInt() == barraDeDestino) \{\par
460                     encontrada = {\cf17 true};\par
461                     {\cf19 break};\par
462                 \}\par
463             \}\par
464             {\cf19 if} (!encontrada) \{\par
465                 frameBarras2->tableLinhas->setColumnHidden(i, {\cf17 true});\par
466             \}\par
467         \}\par
468 \par
469         indiceDestinosEscolhidos = indices;\par
470         indexComboBoxDestinoEnvio = indexComboBoxDestino;\par
471     \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
472         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, e.what());\par
473         {\cf19 return};\par
474     \}\par
475 \}\par
}
}
{\xe \v filtrarColTod1Tod2\:FiltroLinha}
{\xe \v FiltroLinha\:filtrarColTod1Tod2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::filtrarColTod1Tod2 ()}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 431                                     \{\par
432     {\cf19 for}({\cf18 int} i = 0 ; i < FrameBarras::numeroDeLinhas ; i++)\{\par
433         frameBarras2->tableLinhas->setColumnHidden(i,{\cf17 false});\par
434     \}\par
435 \}\par
}
}
{\xe \v filtrarColunasTabela\:FiltroLinha}
{\xe \v FiltroLinha\:filtrarColunasTabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::filtrarColunasTabela ()}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 412                                       \{\par
413     {\cf20 //filtra as colunas da tabela}\par
414     {\cf19 if}(indexComboBoxOrigem==0 && indexComboBoxDestino==0)\{\par
415         filtrarColTod1Tod2();\par
416     \}{\cf19 else} {\cf19 if} (indexComboBoxOrigem == 0 && indexComboBoxDestino == 1) \{\par
417         filtrarColTod1Ind2();\par
418     \}\par
419     {\cf19 else} {\cf19 if} (indexComboBoxOrigem == 1 && indexComboBoxDestino == 0) \{\par
420         filtrarColInd1Tod2();\par
421     \}{\cf19 else}\{\par
422         filtrarColInd1Ind2();\par
423     \}\par
424 \}\par
}
}
{\xe \v filtrarLinhasTabela\:FiltroLinha}
{\xe \v FiltroLinha\:filtrarLinhasTabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::filtrarLinhasTabela ()}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 344                                      \{\par
345     {\cf19 if}(!correntePu)\{\par
346         frameBarras2->tableLinhas->setRowHidden(0,{\cf17 true});\par
347     \}{\cf19 else}\{\par
348         frameBarras2->tableLinhas->setRowHidden(0,{\cf17 false});\par
349     \}\par
350     {\cf19 if}(!dht)\{\par
351         frameBarras2->tableLinhas->setRowHidden(1,{\cf17 true});\par
352     \}{\cf19 else}\{\par
353         frameBarras2->tableLinhas->setRowHidden(1,{\cf17 false});\par
354     \}\par
355     {\cf18 int} pos =2;\par
356     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
357         {\cf19 if}(!dit)\{\par
358             frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 true});\par
359             pos++;\par
360         \}{\cf19 else}\{\par
361             frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 false});\par
362             pos++;\par
363         \}\par
364     \}\par
365     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
366         {\cf19 if}(!ditPercent)\{\par
367             frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 true});\par
368             pos++;\par
369         \}{\cf19 else}\{\par
370             frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 false});\par
371             pos++;\par
372         \}\par
373     \}\par
374     {\cf19 if}(!correnteEficaz)\{\par
375         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 true});\par
376         pos++;\par
377     \}{\cf19 else}\{\par
378         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 false});\par
379         pos++;\par
380     \}\par
381 \par
382     {\cf19 if}(!resistencia)\{\par
383         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 true});\par
384         pos++;\par
385     \}{\cf19 else}\{\par
386         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 false});\par
387         pos++;\par
388     \}\par
389 \par
390     {\cf19 if}(!perdas)\{\par
391         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 true});\par
392         pos++;\par
393     \}{\cf19 else}\{\par
394         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 false});\par
395         pos++;\par
396     \}\par
397 \par
398     {\cf19 if}(!perdasEficaz)\{\par
399         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 true});\par
400         pos++;\par
401     \}{\cf19 else}\{\par
402         frameBarras2->tableLinhas->setRowHidden(pos,{\cf17 false});\par
403         pos++;\par
404     \}\par
405 \}\par
}
}
{\xe \v inicializandoFrame\:FiltroLinha}
{\xe \v FiltroLinha\:inicializandoFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inicializandoFrame ()}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 162                                     \{\par
163     inserindoQssFiltrosLinha();\par
164 \}\par
}
}
{\xe \v inserindoQssBtnAplicar\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssBtnAplicar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssBtnAplicar ()}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 230                                         \{\par
231     Style style;\par
232     ui->btnAplicar->setStyleSheet(style.cssBtn);\par
233 \par
234 \}\par
}
}
{\xe \v inserindoQssCheckBox\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssCheckBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssCheckBox ()}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 186                                       \{\par
187     Style style;\par
188     ui->checkBoxCorrente->setChecked(correntePu);\par
189     ui->checkBoxDht->setChecked(dht);\par
190     ui->checkboxDit->setChecked(dit);\par
191     ui->checkBoxDitPercent->setChecked(ditPercent);\par
192     ui->checkBoxCorrenteEficaz->setChecked(correnteEficaz);\par
193     ui->checkBoxResistencia->setChecked(resistencia);\par
194     ui->checkBoxPerdas->setChecked(perdas);\par
195     ui->checkBoxPerdasEficaz->setChecked(perdasEficaz);\par
196 \par
197     ui->checkBoxCorrente->setStyleSheet(style.cssCheckbox);\par
198     ui->checkBoxDht->setStyleSheet(style.cssCheckbox);\par
199     ui->checkboxDit->setStyleSheet(style.cssCheckbox);\par
200     ui->checkBoxDitPercent->setStyleSheet(style.cssCheckbox);\par
201     ui->checkBoxCorrenteEficaz->setStyleSheet(style.cssCheckbox);\par
202     ui->checkBoxResistencia->setStyleSheet(style.cssCheckbox);\par
203     ui->checkBoxPerdas->setStyleSheet(style.cssCheckbox);\par
204     ui->checkBoxPerdasEficaz->setStyleSheet(style.cssCheckbox);\par
205 \}\par
}
}
{\xe \v inserindoQssComboBox\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssComboBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssComboBox ()}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 241                                       \{\par
242     Style style;\par
243     ui->comboBoxOrigem->setCurrentIndex(indexComboBoxOrigem);\par
244     ui->comboBoxDestino->setCurrentIndex(indexComboBoxDestino);\par
245 \par
246 \}\par
}
}
{\xe \v inserindoQssFiltrosLinha\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssFiltrosLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssFiltrosLinha ()}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 171                                           \{\par
172     inserindoQssCheckBox();\par
173     inserindoQssLineEdit();\par
174     inserindoQssBtnAplicar();\par
175     inserindoQssComboBox();\par
176     inserindoQssGroupBox();\par
177     inserindoQssJanela();\par
178 \}\par
}
}
{\xe \v inserindoQssGroupBox\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssGroupBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssGroupBox ()}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 253                                       \{\par
254     Style style;\par
255     ui->groupBoxAtributos->setStyleSheet(style.cssGroupBox);\par
256     ui->groupBoxLinhas->setStyleSheet(style.cssGroupBox);\par
257 \}\par
}
}
{\xe \v inserindoQssJanela\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssJanela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssJanela ()}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 264                                     \{\par
265     setWindowTitle({\cf22 "Filtros"});\par
266     setWindowIcon(QIcon({\cf22 ":/icons/imgs/icons/engrenagem.png"}));\par
267 \}\par
}
}
{\xe \v inserindoQssLineEdit\:FiltroLinha}
{\xe \v FiltroLinha\:inserindoQssLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltroLinha::inserindoQssLineEdit ()}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 212                                       \{\par
213     Style style;\par
214     ui->lineEditFLinha->setPlaceholderText({\cf22 "Todas"});\par
215     ui->lineEditFLinha2->setPlaceholderText({\cf22 "Todas"});\par
216 \par
217 \par
218     ui->lineEditFLinha->setStyleSheet(style.cssLineEdit);\par
219     ui->lineEditFLinha2->setStyleSheet(style.cssLineEdit);\par
220 \par
221     ui->lineEditFLinha->setEnabled({\cf17 false});\par
222     ui->lineEditFLinha2->setEnabled({\cf17 false});\par
223 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v correnteEficaz\:FiltroLinha}
{\xe \v FiltroLinha\:correnteEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::correnteEficaz = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da corrente eficaz dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::correnteEficaz} \par
}}
{\xe \v correntePu\:FiltroLinha}
{\xe \v FiltroLinha\:correntePu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::correntePu = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da corrente na linha dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::correntePu} \par
}}
{\xe \v dht\:FiltroLinha}
{\xe \v FiltroLinha\:dht}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::dht = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dht dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::dht} \par
}}
{\xe \v dit\:FiltroLinha}
{\xe \v FiltroLinha\:dit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::dit = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::dit} \par
}}
{\xe \v ditPercent\:FiltroLinha}
{\xe \v FiltroLinha\:ditPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::ditPercent = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit percentual dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::ditPercent} \par
}}
{\xe \v indexComboBoxDestino\:FiltroLinha}
{\xe \v FiltroLinha\:indexComboBoxDestino}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FiltroLinha::indexComboBoxDestino = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual checkbox est\'E1 selecionado para a destino das linhas ( 0 para todas as linhas , 1 para selecionar os destinos) Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FiltroLinha::indexComboBoxDestino} \par
}}
{\xe \v indexComboBoxDestinoEnvio\:FiltroLinha}
{\xe \v FiltroLinha\:indexComboBoxDestinoEnvio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FiltroLinha::indexComboBoxDestinoEnvio =0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das linhas para o destino foi a ultima a ser selecionada e concluida Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FiltroLinha::indexComboBoxDestinoEnvio} \par
}}
{\xe \v indexComboBoxOrigem\:FiltroLinha}
{\xe \v FiltroLinha\:indexComboBoxOrigem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FiltroLinha::indexComboBoxOrigem = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual checkbox est\'E1 selecionado para a origem das linhas ( 0 para todas as linhas , 1 para selecionar as origens) Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FiltroLinha::indexComboBoxOrigem} \par
}}
{\xe \v indexComboBoxOrigemEnvio\:FiltroLinha}
{\xe \v FiltroLinha\:indexComboBoxOrigemEnvio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FiltroLinha::indexComboBoxOrigemEnvio =0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das linhas para a origem foi a ultima a ser selecionada e concluida Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FiltroLinha::indexComboBoxOrigemEnvio} \par
}}
{\xe \v indiceDestinosEscolhidos\:FiltroLinha}
{\xe \v FiltroLinha\:indiceDestinosEscolhidos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FiltroLinha::indiceDestinosEscolhidos{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o indice dos destinos escolhidas em um QStringList. Caso seja escolhido o metodo de selecionar as linhas de forma individual, os destinos sao separados por virgula. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable \par
}}
{\xe \v indiceOrigensEscolhidas\:FiltroLinha}
{\xe \v FiltroLinha\:indiceOrigensEscolhidas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FiltroLinha::indiceOrigensEscolhidas{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o indice das origens escolhidas em um QStringList. Caso seja escolhido o metodo de selecionar as linhas de forma individual, as origens sao separadas por virgula. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable \par
}}
{\xe \v perdas\:FiltroLinha}
{\xe \v FiltroLinha\:perdas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::perdas = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox das perdas dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::perdas} \par
}}
{\xe \v perdasEficaz\:FiltroLinha}
{\xe \v FiltroLinha\:perdasEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::perdasEficaz = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox das perdas eficaz dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::perdasEficaz} \par
}}
{\xe \v resistencia\:FiltroLinha}
{\xe \v FiltroLinha\:resistencia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltroLinha::resistencia = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da resist\'EAncia dos filtros da linha est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltroLinha::resistencia} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b filtrolinha.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b filtrolinha.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FiltrosBarra Class Reference\par \pard\plain 
{\tc\tcl2 \v FiltrosBarra}
{\xe \v FiltrosBarra}
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableBarras do {\b FrameBarras}. }}\par
{
{\f2 #include <filtrosbarra.h>}}\par
Inheritance diagram for FiltrosBarra:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_filtros_barra.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::FiltrosBarra * {\b getUi} ()\par
}
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::FiltrosBarra\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b FiltrosBarra}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fb} \cell }{(Par\'E3metro do tipo Ui::FrameBarras para permitir acesso aos componentes da interface do frame {\b FrameBarras}) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FiltrosBarra} (QWidget *parent=nullptr, Ui::FrameBarras *fb=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::~FiltrosBarra\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b FiltrosBarra} \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FiltrosBarra} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inserindoQssFiltrosBarra\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar m\'E9todos que inserem Qss nos componentes do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssFiltrosBarra} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inserindoQssCheckBox\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos Checkbox's do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssCheckBox} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inserindoQssLineEdit\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no LineEdit\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssLineEdit} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inserindoQssBtnAplicar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o Aplicar\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssBtnAplicar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inserindoQssComboBox\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no ComboBox\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssComboBox} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inserindoQssGroupBox\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos GroupBox's\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssGroupBox} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inserindoQssJanela\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir icon e title na janela\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserindoQssJanela} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::inicializaFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primeiro m\'E9todo a ser chamada no construtor, respons\'E1vel por chamar os m\'E9todos subsequ\'EAntes que modelam a Interface do frame.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializandoFrame} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::atualizaVariaveis\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por atualizar variaveis est\'E1ticas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b atualizaVariaveis} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::filtrarLinhasTabela\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as linhas da tabela Barras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarLinhasTabela} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::filtrarColunasTabela\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar metodos que filtram as colunas \'E0 depender da escolha do us\'FAario\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColunasTabela} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::filtrarColunasPorIndices\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as colunas da tabela barras por indices\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColunasPorIndices} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::filtrarColunasPorFaixa\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as colunas da tabela barras por faixa\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColunasPorFaixa} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FiltrosBarra::filtrarColunasPorMarcadores\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por filtrar as colunas da tabela barras por marcadores (apenas as poluidoras)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b filtrarColunasPorMarcadores} ()\par
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b tensaoPu} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da tens\'E3o na {\b Barra} pu dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b tensaoNominal} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da tens\'E3o nominal dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b thdv} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do thdv dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b dit} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b ditPercent} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit[%] dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b tensaoEficaz} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da tens\'E3o eficaz dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexComboBox} = 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das barras est\'E1 selecionada Seu valor inicial \'E9 0. 0 significa que o metodo de filtragem \'E9 para intervalo de numero de barras , 1 para escolha das barras de forma individual e 2 para escolher s\'F3 as poluidoras Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexComboBoxEnvio} = 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das barras foi a ultima a ser selecionada e concluida Seu valor inicial \'E9 0. 0 significa que o metodo de filtragem \'E9 para intervalo de numero de barras , 1 para escolha das barras de forma individual e 2 para escolher s\'F3 as poluidoras Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QStringList {\b indiceBarrasEscolhidas}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o indice das barras escolhidas em um QStringList. Caso seja escolhido o metodo de intervalo ser\'E3o 2 valores separados por tra\'E7o e caso sejam as individuais, separados por virgula. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableBarras do {\b FrameBarras}. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FiltrosBarra\:FiltrosBarra}
{\xe \v FiltrosBarra\:FiltrosBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FiltrosBarra::FiltrosBarra (QWidget *  {\i parent} = {\f2 nullptr}, Ui::FrameBarras *  {\i fb} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 97                                                                :\par
98     QDialog(parent),\par
99     ui({\cf17 new} Ui::FiltrosBarra)\par
100 \{\par
101     ui->setupUi({\cf17 this});\par
102     setParent(parent);\par
103     frameBarras = fb;\par
104 \par
105     inicializandoFrame();\par
106 \par
107 \}\par
}
}
{\xe \v ~FiltrosBarra\:FiltrosBarra}
{\xe \v FiltrosBarra\:~FiltrosBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FiltrosBarra::~FiltrosBarra ()}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 114 \{\par
115     {\cf17 delete} ui;\par
116 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v atualizaVariaveis\:FiltrosBarra}
{\xe \v FiltrosBarra\:atualizaVariaveis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::atualizaVariaveis ()}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 267                                     \{\par
268     {\cf20 //atualiza as variaveis est\'E1ticas}\par
269     tensaoPu = ui->checkBoxTensaoBarra->isChecked();\par
270     tensaoNominal = ui->checkBoxTensaoNominal->isChecked();\par
271     thdv = ui->checkBoxThdv->isChecked();\par
272     dit = ui->checkBoxDit->isChecked();\par
273     ditPercent = ui->checkBoxDitPercent->isChecked();\par
274     tensaoEficaz = ui->checkBoxTensaoEficaz->isChecked();\par
275 \}\par
}
}
{\xe \v filtrarColunasPorFaixa\:FiltrosBarra}
{\xe \v FiltrosBarra\:filtrarColunasPorFaixa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::filtrarColunasPorFaixa ()}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 391                                          \{\par
392     QStringList indices;\par
393     QString lineEditValue = ui->lineEditFBarra->text().trimmed();\par
394 \par
395     {\cf19 if} (lineEditValue.isEmpty()) \{\par
396         indices.append(QString::number(1));\par
397         indices.append(QString::number(FrameTensoes::numeroDeBarras));\par
398     \} {\cf19 else} \{\par
399         {\cf19 try} \{\par
400             QStringList values = lineEditValue.split({\cf22 "-"});\par
401             {\cf19 if} (values.size() != 2) \{\par
402                 {\cf19 throw} std::runtime_error({\cf22 "Formato inv\'E1lido. Digite dois n\'FAmeros separados por um tra\'E7o."});\par
403             \}\par
404 \par
405             {\cf18 int} inicio = values.at(0).toInt();\par
406             {\cf18 int} fim = values.at(1).toInt();\par
407 \par
408             {\cf19 if} (inicio < 1 || fim > FrameTensoes::numeroDeBarras || inicio >= fim) \{\par
409                 {\cf19 throw} std::runtime_error({\cf22 "Valores inv\'E1lidos. O primeiro n\'FAmero deve ser maior ou igual a 1, o segundo n\'FAmero deve ser menor ou igual a "} + QString::number(FrameTensoes::numeroDeBarras).toStdString() + {\cf22 ", e o primeiro n\'FAmero deve ser menor que o segundo n\'FAmero."});\par
410             \}\par
411 \par
412             indices.append(QString::number(inicio));\par
413             indices.append(QString::number(fim));\par
414         \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
415             QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, e.what());\par
416             {\cf19 return};\par
417         \}\par
418     \}\par
419 \par
420     {\cf19 for} ({\cf18 int} i = 0; i < FrameTensoes::numeroDeBarras; i++) \{\par
421         {\cf19 if} (i >= indices.at(0).toInt() - 1 && i <= indices.at(1).toInt() - 1) \{\par
422             frameBarras->tableBarras->setColumnHidden(i, {\cf17 false});\par
423         \} {\cf19 else} \{\par
424             frameBarras->tableBarras->setColumnHidden(i, {\cf17 true});\par
425         \}\par
426     \}\par
427 \par
428     indiceBarrasEscolhidas = indices;\par
429     indexComboBoxEnvio = indexComboBox;\par
430 \par
431 \}\par
}
}
{\xe \v filtrarColunasPorIndices\:FiltrosBarra}
{\xe \v FiltrosBarra\:filtrarColunasPorIndices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::filtrarColunasPorIndices ()}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 349                                             \{\par
350     QString lineEditValue = ui->lineEditFBarra->text().trimmed();\par
351     {\cf19 if} (lineEditValue.isEmpty()) \{\par
352         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, {\cf22 "O campo n\'E3o pode ser vazio."});\par
353         ui->lineEditFBarra->clear();\par
354         indexComboBox = 0;\par
355         {\cf19 return};\par
356     \}\par
357 \par
358     {\cf19 try} \{\par
359         QStringList indices = lineEditValue.split({\cf22 ","});\par
360         QList<bool> barrasEscolhidas(FrameTensoes::numeroDeBarras, {\cf17 false});\par
361 \par
362         {\cf19 for} ({\cf17 auto} it = indices.begin(); it != indices.end(); it++) \{\par
363             {\cf18 int} index = it->toInt();\par
364             {\cf19 if} (index < 1 || index > FrameTensoes::numeroDeBarras) \{\par
365                 {\cf19 throw} std::runtime_error({\cf22 "Valores inv\'E1lidos. Os n\'FAmeros devem ser maiores ou iguais a 1 e menores ou iguais a "} + QString::number(FrameTensoes::numeroDeBarras).toStdString() + {\cf22 "."});\par
366             \}\par
367             barrasEscolhidas[index - 1] = {\cf17 true};\par
368         \}\par
369 \par
370         {\cf19 for} ({\cf18 int} i = 0; i < FrameTensoes::numeroDeBarras; i++) \{\par
371             frameBarras->tableBarras->setColumnHidden(i, !barrasEscolhidas[i]);\par
372         \}\par
373 \par
374         indiceBarrasEscolhidas = indices;\par
375     \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
376         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, e.what());\par
377         ui->lineEditFBarra->clear();\par
378         indexComboBox = 0;\par
379         {\cf19 return};\par
380     \}\par
381 \par
382     indexComboBoxEnvio = indexComboBox;\par
383 \par
384 \}\par
}
}
{\xe \v filtrarColunasPorMarcadores\:FiltrosBarra}
{\xe \v FiltrosBarra\:filtrarColunasPorMarcadores}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::filtrarColunasPorMarcadores ()}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 438                                               \{\par
439     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
440         {\cf19 if}(frameBarras->tableBarras->item(2,i)->background() == QColor(255, 128, 128) )\{\par
441             frameBarras->tableBarras->setColumnHidden(i,{\cf17 false});\par
442         \}{\cf19 else}\{\par
443             {\cf18 int} pos =3;\par
444             {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
445                 {\cf19 if}(frameBarras->tableBarras->item(pos,i)->background() == QColor(255, 128, 128) )\{\par
446                     frameBarras->tableBarras->setColumnHidden(i,{\cf17 false});\par
447                     {\cf19 break};\par
448                 \}{\cf19 else}\{\par
449                     frameBarras->tableBarras->setColumnHidden(i,{\cf17 true});\par
450                 \}\par
451                 pos++;\par
452             \}\par
453         \}\par
454     \}\par
455 \}\par
}
}
{\xe \v filtrarColunasTabela\:FiltrosBarra}
{\xe \v FiltrosBarra\:filtrarColunasTabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::filtrarColunasTabela ()}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 332                                        \{\par
333     {\cf19 if} (indexComboBox == 1) \{\par
334         filtrarColunasPorIndices();\par
335     \}\par
336     {\cf19 else} {\cf19 if} (indexComboBox == 0) \{\par
337         filtrarColunasPorFaixa();\par
338     \}\par
339     {\cf19 else}\{\par
340         filtrarColunasPorMarcadores();\par
341     \}\par
342 \}\par
}
}
{\xe \v filtrarLinhasTabela\:FiltrosBarra}
{\xe \v FiltrosBarra\:filtrarLinhasTabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::filtrarLinhasTabela ()}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 282                                       \{\par
283     {\cf20 //filtra as linhas da tabela}\par
284 \par
285     {\cf19 if}(!tensaoPu)\{\par
286         frameBarras->tableBarras->setRowHidden(0,{\cf17 true});\par
287     \}{\cf19 else}\{\par
288         frameBarras->tableBarras->setRowHidden(0,{\cf17 false});\par
289     \}\par
290     {\cf19 if}(!tensaoNominal)\{\par
291         frameBarras->tableBarras->setRowHidden(1,{\cf17 true});\par
292     \}{\cf19 else}\{\par
293         frameBarras->tableBarras->setRowHidden(1,{\cf17 false});\par
294     \}\par
295     {\cf19 if}(!thdv)\{\par
296         frameBarras->tableBarras->setRowHidden(2,{\cf17 true});\par
297     \}{\cf19 else}\{\par
298         frameBarras->tableBarras->setRowHidden(2,{\cf17 false});\par
299     \}\par
300     {\cf18 int} pos =3;\par
301     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
302         {\cf19 if}(!dit)\{\par
303             frameBarras->tableBarras->setRowHidden(pos,{\cf17 true});\par
304             pos++;\par
305         \}{\cf19 else}\{\par
306             frameBarras->tableBarras->setRowHidden(pos,{\cf17 false});\par
307             pos++;\par
308         \}\par
309     \}\par
310     {\cf19 for}({\cf18 int} j = 3 ; j <= FrameBarras::indiceHarmMax ; j+=2)\{\par
311         {\cf19 if}(!ditPercent)\{\par
312             frameBarras->tableBarras->setRowHidden(pos,{\cf17 true});\par
313             pos++;\par
314         \}{\cf19 else}\{\par
315             frameBarras->tableBarras->setRowHidden(pos,{\cf17 false});\par
316             pos++;\par
317         \}\par
318     \}\par
319     {\cf19 if}(!tensaoEficaz)\{\par
320         frameBarras->tableBarras->setRowHidden(pos,{\cf17 true});\par
321     \}{\cf19 else}\{\par
322         frameBarras->tableBarras->setRowHidden(pos,{\cf17 false});\par
323     \}\par
324 \}\par
}
}
{\xe \v getUi\:FiltrosBarra}
{\xe \v FiltrosBarra\:getUi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::FiltrosBarra * FiltrosBarra::getUi (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                            \{\par
21         {\cf19 return} ui;\par
22     \}\par
}
}
{\xe \v inicializandoFrame\:FiltrosBarra}
{\xe \v FiltrosBarra\:inicializandoFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inicializandoFrame ()}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 123                                      \{\par
124     inserindoQssFiltrosBarra();\par
125 \}\par
}
}
{\xe \v inserindoQssBtnAplicar\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssBtnAplicar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssBtnAplicar ()}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 180                                          \{\par
181     Style style;\par
182     ui->btnAplicar->setStyleSheet(style.cssBtn);\par
183 \}\par
}
}
{\xe \v inserindoQssCheckBox\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssCheckBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssCheckBox ()}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 146                                        \{\par
147     Style style;\par
148     ui->checkBoxTensaoBarra->setChecked(tensaoPu);\par
149     ui->checkBoxTensaoNominal->setChecked(tensaoNominal);\par
150     ui->checkBoxThdv->setChecked(thdv);\par
151     ui->checkBoxDit->setChecked(dit);\par
152     ui->checkBoxDitPercent->setChecked(ditPercent);\par
153     ui->checkBoxTensaoEficaz->setChecked(tensaoEficaz);\par
154 \par
155     ui->checkBoxTensaoBarra->setStyleSheet(style.cssCheckbox);\par
156     ui->checkBoxTensaoNominal->setStyleSheet(style.cssCheckbox);\par
157     ui->checkBoxThdv->setStyleSheet(style.cssCheckbox);\par
158     ui->checkBoxDit->setStyleSheet(style.cssCheckbox);\par
159     ui->checkBoxDitPercent->setStyleSheet(style.cssCheckbox);\par
160     ui->checkBoxTensaoEficaz->setStyleSheet(style.cssCheckbox);\par
161 \}\par
}
}
{\xe \v inserindoQssComboBox\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssComboBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssComboBox ()}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 190                                        \{\par
191     Style style;\par
192     ui->comboBoxFBarra->setCurrentIndex(indexComboBox);\par
193     ui->comboBoxFBarra->setStyleSheet(style.cssComboBox);\par
194 \}\par
}
}
{\xe \v inserindoQssFiltrosBarra\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssFiltrosBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssFiltrosBarra ()}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 132                                            \{\par
133     inserindoQssCheckBox();\par
134     inserindoQssLineEdit();\par
135     inserindoQssBtnAplicar();\par
136     inserindoQssComboBox();\par
137     inserindoQssGroupBox();\par
138     inserindoQssJanela();\par
139 \}\par
}
}
{\xe \v inserindoQssGroupBox\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssGroupBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssGroupBox ()}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 201                                        \{\par
202     Style style;\par
203     ui->groupBoxBarras->setStyleSheet(style.cssGroupBox);\par
204     ui->groupBoxAtributos->setStyleSheet(style.cssGroupBox);\par
205 \}\par
}
}
{\xe \v inserindoQssJanela\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssJanela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssJanela ()}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 212                                      \{\par
213 \par
214     setWindowTitle({\cf22 "Filtros"});\par
215     setWindowIcon(QIcon({\cf22 ":/icons/imgs/icons/engrenagem.png"}));\par
216 \}\par
}
}
{\xe \v inserindoQssLineEdit\:FiltrosBarra}
{\xe \v FiltrosBarra\:inserindoQssLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FiltrosBarra::inserindoQssLineEdit ()}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 168                                        \{\par
169     Style style;\par
170     ui->lineEditFBarra->setStyleSheet(style.cssLineEdit);\par
171     ui->lineEditFBarra->setPlaceholderText({\cf22 "1-"}+QString::number(FrameTensoes::numeroDeBarras));\par
172 \par
173 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dit\:FiltrosBarra}
{\xe \v FiltrosBarra\:dit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::dit = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::dit} \par
}}
{\xe \v ditPercent\:FiltrosBarra}
{\xe \v FiltrosBarra\:ditPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::ditPercent = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do dit[%] dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::ditPercent} \par
}}
{\xe \v indexComboBox\:FiltrosBarra}
{\xe \v FiltrosBarra\:indexComboBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FiltrosBarra::indexComboBox = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das barras est\'E1 selecionada Seu valor inicial \'E9 0. 0 significa que o metodo de filtragem \'E9 para intervalo de numero de barras , 1 para escolha das barras de forma individual e 2 para escolher s\'F3 as poluidoras Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::indexComboBox} \par
}}
{\xe \v indexComboBoxEnvio\:FiltrosBarra}
{\xe \v FiltrosBarra\:indexComboBoxEnvio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FiltrosBarra::indexComboBoxEnvio = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica qual tipo de filtragem das barras foi a ultima a ser selecionada e concluida Seu valor inicial \'E9 0. 0 significa que o metodo de filtragem \'E9 para intervalo de numero de barras , 1 para escolha das barras de forma individual e 2 para escolher s\'F3 as poluidoras Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::indexComboBoxEnvio} \par
}}
{\xe \v indiceBarrasEscolhidas\:FiltrosBarra}
{\xe \v FiltrosBarra\:indiceBarrasEscolhidas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FiltrosBarra::indiceBarrasEscolhidas{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o indice das barras escolhidas em um QStringList. Caso seja escolhido o metodo de intervalo ser\'E3o 2 valores separados por tra\'E7o e caso sejam as individuais, separados por virgula. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable \par
}}
{\xe \v tensaoEficaz\:FiltrosBarra}
{\xe \v FiltrosBarra\:tensaoEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::tensaoEficaz = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da tens\'E3o eficaz dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::tensaoEficaz} \par
}}
{\xe \v tensaoNominal\:FiltrosBarra}
{\xe \v FiltrosBarra\:tensaoNominal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::tensaoNominal = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da tens\'E3o nominal dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::tensaoNominal} \par
}}
{\xe \v tensaoPu\:FiltrosBarra}
{\xe \v FiltrosBarra\:tensaoPu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::tensaoPu = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox da tens\'E3o na {\b Barra} pu dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::tensaoPu} \par
}}
{\xe \v thdv\:FiltrosBarra}
{\xe \v FiltrosBarra\:thdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FiltrosBarra::thdv = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica se o checkBox do thdv dos filtros da barra est\'E1 selecionado Seu valor inicial \'E9 true, para caso o us\'FAario nao filtrar nada, os dados sejam mostrados. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable bool {\b FiltrosBarra::thdv} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b filtrosbarra.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b filtrosbarra.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FrameBarras Class Reference\par \pard\plain 
{\tc\tcl2 \v FrameBarras}
{\xe \v FrameBarras}
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pelo armazenamento dos dados em nos atributos da classes {\b Barra} e {\b Linha}. Al\'E9m de etregar ao us\'FAario uma TabWidget amig\'E1vel, para que possa filtrar os dados que quiser para realizar sua an\'E1lise. @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar. }}\par
{
{\f2 #include <framebarras.h>}}\par
Inheritance diagram for FrameBarras:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_frame_barras.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b verificaAvanco} ()\par
}
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::FrameBarras\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b FrameBarras}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mw} \cell }{(Par\'E3metro do tipo Ui::MainWindow para permitir acesso aos componentes da interface do frame {\b MainWindow}) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ft} \cell }{(Par\'E3metro do tipo Ui::FrameTensoes para permitir acesso aos componentes da interface do frame {\b FrameTensoes}) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FrameBarras} (QWidget *parent=nullptr, Ui::MainWindow *mw=nullptr, Ui::FrameTensoes *ft=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::~FrameBarras\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b FrameBarras} \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FrameBarras} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::buscaIndiceHarmMax\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por buscar o indice harm\'F4nico maximo a ser estudado no sistema e devolver esse valor a uma v\'E1riavel\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
um inteiro que representa o indice harmonico maximo \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b buscaIndiceHarmMax} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::buscaQtdHarm\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por c\'E1lcular a quantidade de componentes harm\'F4nicas escolhidas para serem an\'E1lisadas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i indiceHarmMax} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
um inteiro que representa a quantidade de componentes harm\'F4nicas as serem an\'E1lisadas \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b buscaQtdHarm} (int)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::preencheFrameBarras\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por realizar a chamada de m\'E9todos que s\'E3o respons\'E1veis por inserir o Qss do frame e preencher as tabelas com as informa\'E7\'F5es das barras e das linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheFrameBarras} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::inicializaVariaveisStatic\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por iniciar as variaveis est\'E1ticas : indiceHarmMax,quantidadeDeComponentesHarm e numeroDeLinhas.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaVariaveisStatic} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::inicializaFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primeiro m\'E9todo a ser chamada no construtor, respons\'E1vel por chamar os m\'E9todos subsequ\'EAntes que modelam a Interface do frame.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaFrame} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::cabecalhoBarras\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por criar um QStringList com o cabe\'E7aho para as barras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
QStringList do cabe\'E7alho das linhas \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QStringList {\b cabecalhoBarras} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::cabecalhoLinhas\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por criar um QStringList com o cabe\'E7aho para as linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
QStringList do cabe\'E7alho das linhas \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QStringList {\b cabecalhoLinhas} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::preencheBarra\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preencher o QList<Barra> com as informa\'E7\'F5es de todas as barras do sistema\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheBarra} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::inicializaBarra\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inicializar todo o QList<Barra> com o tamanho do numero de Barras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaBarra} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::linhasDoSistema\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Preenche um QStringList com as linhas do sistema no no padr\'E3o (... , origem -> destino, ...)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
QStringList gerado na fun\'E7\'E3o \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QStringList {\b linhasDoSistema} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereQssBtnAvancar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o avan\'E7ar\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnAvancar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereQssBtnVoltar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o voltar\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnVoltar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereQssTabWidget\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no tabWidget\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssTabWidget} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereQssTableBarras\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no TableBarras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssTableBarras} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereQssTableLinhas\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no TableLinhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssTableLinhas} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereQssFrameBarras\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar m\'E9todos que inserem Qss nos componentes do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssFrameBarras} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::preencheTabelaBarra\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preencher a tabela que mostra as informa\'E7\'F5s das barras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheTabelaBarra} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::preencheTabelaLinha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preencher a tabela que mostra as informa\'E7\'F5s das linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheTabelaLinha} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::preencheLimites\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preencher o map est\'E1tico com os limites para cada n\'EDvel de tens\'E3o e n\'EDveis harm\'F4nicos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheLimites} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereQSSBtnFiltrar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o filtrar\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQSSBtnFiltrar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::preencheLinha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por preencher o QList<Linha> com as informa\'E7\'F5es de todas as linhas do sistema\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preencheLinha} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::inicializaLinha\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inicializar todo o QList<Linha> com o tamanho do numero de linhas\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaLinha} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameBarras::insereBackgroundNasPoluidoras\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Background nos itens que possuem as barras poluidoras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereBackgroundNasPoluidoras} ()\par
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::map< int, std::map< int, double > > {\b getLimitesDti} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b setLimitesDti} (int nivelTensao, int harmonica, double limite)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexTab} = 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica em qual index do TabWidget o us\'FAario est\'E1. 0 para barras e 1 para linhas. Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indiceHarmMax}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
V\'E1riavel est\'E1tica respons\'E1vel por armazenar o \'EDndice harm\'F4nico m\'E1ximo a ser an\'E1lisado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b numeroDeLinhas}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o n\'FAmero de linhas do sistema. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b quantidadeDeComponentesHarm}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
V\'E1riavel est\'E1tica respons\'E1vel por armazenar a quantidade de componentes harm\'F4nicas a serem an\'E1lisadas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QList< {\b Barra} > {\b barras} = QList<{\b Barra}>()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QList est\'E1tico do tipo '{\b Barra}', respons\'E1vel por armazenar todas as barras do sistema,seus atributos e m\'E9todos. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QList< {\b Linha} > {\b linhas} = QList<{\b Linha}>()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QList est\'E1tico do tipo '{\b Linha}', respons\'E1vel por armazenar todas as linhas do sistema,seus atributos e m\'E9todos. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b filtroLinhaInserido}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b filtroBarraInserido}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
FrameBarras::potencia\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por calcular pot\'EAncia matem\'E1tica\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i base} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i expoente} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
um double representando o valor da pot\'EAncia calculada \par
}}}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b potencia} (double, int)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pelo armazenamento dos dados em nos atributos da classes {\b Barra} e {\b Linha}. Al\'E9m de etregar ao us\'FAario uma TabWidget amig\'E1vel, para que possa filtrar os dados que quiser para realizar sua an\'E1lise. @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FrameBarras\:FrameBarras}
{\xe \v FrameBarras\:FrameBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameBarras::FrameBarras (QWidget *  {\i parent} = {\f2 nullptr}, Ui::MainWindow *  {\i mw} = {\f2 nullptr}, Ui::FrameTensoes *  {\i ft} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 90                                                                             :\par
91     QFrame(parent),\par
92     ui({\cf17 new} Ui::FrameBarras)\par
93 \{\par
94     ui->setupUi({\cf17 this});\par
95 \par
96     inicializaFrame();\par
97     frameT = ft;\par
98     frameM = mw;\par
99     p = parent;\par
100 \}\par
}
}
{\xe \v ~FrameBarras\:FrameBarras}
{\xe \v FrameBarras\:~FrameBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameBarras::~FrameBarras ()}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 107 \{\par
108     {\cf17 delete} ui;\par
109 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v buscaIndiceHarmMax\:FrameBarras}
{\xe \v FrameBarras\:buscaIndiceHarmMax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::buscaIndiceHarmMax ()}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 138                                     \{\par
139     {\cf18 int} indiceHarm = 0;\par
140 \par
141     {\cf19 if} (!MainWindow::arquivoVsoln->open(QFile::ReadOnly | QFile::Text)) \{\par
142         {\cf19 if} (MainWindow::arquivoVsoln->error() == QFile::OpenError) \{\par
143             {\cf19 return} 0;\par
144         \}\par
145         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, {\cf22 "Erro ao abrir arquivo"});\par
146         {\cf19 return} 0;\par
147     \}\par
148 \par
149     {\cf19 while} (!MainWindow::arquivoVsoln->atEnd()) \{\par
150         QString line = MainWindow::arquivoVsoln->readLine();\par
151         QStringList indice = line.split({\cf22 ","});\par
152         {\cf18 bool} ok = {\cf17 false};\par
153         {\cf18 int} valorInt = indice.at(0).trimmed().toInt(&ok, 10);\par
154         {\cf19 if} (ok && valorInt > indiceHarm) \{\par
155             indiceHarm = valorInt;\par
156         \}\par
157     \}\par
158 \par
159     MainWindow::arquivoVsoln->close();\par
160     {\cf19 return} indiceHarm;\par
161 \}\par
}
}
{\xe \v buscaQtdHarm\:FrameBarras}
{\xe \v FrameBarras\:buscaQtdHarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::buscaQtdHarm (int  {\i indiceHarmMax}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 169                                                      \{\par
170     {\cf19 return} (indiceHarmMax/2) > 1 ? indiceHarmMax/2 : 0;\par
171 \}\par
}
}
{\xe \v cabecalhoBarras\:FrameBarras}
{\xe \v FrameBarras\:cabecalhoBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FrameBarras::cabecalhoBarras ()}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 387                                         \{\par
388     QStringList cabecalhos=\{{\cf22 "Tens\'E3o na Barra[pu]"},{\cf22 "Tens\'E3o Nominal[Kv]"},{\cf22 "TDHV[%]"}\};\par
389                                {\cf19 for}({\cf18 int} i = 0 , j = 3; i < quantidadeDeComponentesHarm ; i++ , j+=2)\{\par
390                                                                                                     QString item = {\cf22 "DIT"}+QString::number(j);\par
391     cabecalhos.push_back(item);\par
392 \}\par
393 {\cf19 for}({\cf18 int} i = 0 , j = 3; i < quantidadeDeComponentesHarm ; i++ , j+=2)\{\par
394     QString item = {\cf22 "DIT"}+QString::number(j)+{\cf22 "[%]"};\par
395     cabecalhos.push_back(item);\par
396 \}\par
397 cabecalhos.push_back({\cf22 "Tens\'E3o Eficaz[pu]"});\par
398 \par
399     {\cf19 return} cabecalhos;\par
400 \}\par
}
}
{\xe \v cabecalhoLinhas\:FrameBarras}
{\xe \v FrameBarras\:cabecalhoLinhas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FrameBarras::cabecalhoLinhas ()}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 430                                         \{\par
431 \par
432     QStringList cabecalhos=\{{\cf22 "Corrente na Linha[pu]"},{\cf22 "DHT[%]"}\};\par
433     {\cf19 for}({\cf18 int} i = 0 , j = 3; i < quantidadeDeComponentesHarm ; i++ , j+=2)\{\par
434         QString item = {\cf22 "DHI"}+QString::number(j);\par
435         cabecalhos.push_back(item);\par
436     \}\par
437     {\cf19 for}({\cf18 int} i = 0 , j = 3; i < quantidadeDeComponentesHarm ; i++ , j+=2)\{\par
438         QString item = {\cf22 "DHI"}+QString::number(j)+{\cf22 "[%]"};\par
439         cabecalhos.push_back(item);\par
440     \}\par
441     cabecalhos.push_back({\cf22 "Corrente Eficaz[pu]"});\par
442     cabecalhos.push_back({\cf22 "Resistencia[ohm]"});\par
443     cabecalhos.push_back({\cf22 "Perdas[pu]"});\par
444     cabecalhos.push_back({\cf22 "Perdas eficaz[pu]"});\par
445 \par
446     {\cf19 return} cabecalhos;\par
447 \}\par
}
}
{\xe \v getLimitesDti\:FrameBarras}
{\xe \v FrameBarras\:getLimitesDti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::map< int, std::map< int, double > > FrameBarras::getLimitesDti (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58                                                               \{\par
59         {\cf19 return} limitesDti;\par
60     \}\par
}
}
{\xe \v inicializaBarra\:FrameBarras}
{\xe \v FrameBarras\:inicializaBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::inicializaBarra ()}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 454                                   \{\par
455     barras.resize(FrameTensoes::numeroDeBarras, Barra());\par
456 \}\par
}
}
{\xe \v inicializaFrame\:FrameBarras}
{\xe \v FrameBarras\:inicializaFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::inicializaFrame ()}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                  \{\par
117     inicializaVariaveisStatic();\par
118     preencheLimites();\par
119     preencheFrameBarras();\par
120 \}\par
}
}
{\xe \v inicializaLinha\:FrameBarras}
{\xe \v FrameBarras\:inicializaLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::inicializaLinha ()}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 620                                   \{\par
621     linhas.resize(numeroDeLinhas, Linha());\par
622 \}\par
}
}
{\xe \v inicializaVariaveisStatic\:FrameBarras}
{\xe \v FrameBarras\:inicializaVariaveisStatic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::inicializaVariaveisStatic ()}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 127                                            \{\par
128     indiceHarmMax = buscaIndiceHarmMax() ;\par
129     quantidadeDeComponentesHarm = buscaQtdHarm(indiceHarmMax);\par
130     numeroDeLinhas = linhasDoSistema().size();\par
131 \}\par
}
}
{\xe \v insereBackgroundNasPoluidoras\:FrameBarras}
{\xe \v FrameBarras\:insereBackgroundNasPoluidoras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereBackgroundNasPoluidoras ()}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 794                                                \{\par
795     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras ; i++)\{\par
796         {\cf19 if}(barras[i].getBarraInfectadaThdv())\{\par
797             ui->tableBarras->item(2,i)->setBackground( QColor(255, 128, 128));\par
798         \}\par
799         {\cf18 int} pos =3;\par
800         {\cf19 for}({\cf18 int} j = 3 ; j <= indiceHarmMax ; j+=2)\{\par
801             {\cf19 if}(barras[i].getDti().find(j)->second.second.second)\{\par
802                 ui->tableBarras->item(pos,i)->setBackground( QColor(255, 128, 128));\par
803             \}\par
804             pos++;\par
805         \}\par
806         {\cf19 for}({\cf18 int} j = 3 ; j <= indiceHarmMax ; j+=2)\{\par
807             {\cf19 if}(barras[i].getDti().find(j)->second.second.second)\{\par
808                 ui->tableBarras->item(pos,i)->setBackground( QColor(255, 128, 128));\par
809             \}\par
810             pos++;\par
811         \}\par
812     \}\par
813 \}\par
}
}
{\xe \v insereQssBtnAvancar\:FrameBarras}
{\xe \v FrameBarras\:insereQssBtnAvancar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssBtnAvancar ()}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 319                                      \{\par
320     Style style;\par
321     ui->btnAvancar->setStyleSheet(style.cssBtnTransition);\par
322     ui->btnAvancar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/proximo.png"})); {\cf20 //insere um icon ao bot\'E3o}\par
323     ui->btnAvancar->setLayoutDirection(Qt::RightToLeft); {\cf20 //define que o icon ser\'E1 colocado ap\'F3s o texto}\par
324 \}\par
}
}
{\xe \v insereQSSBtnFiltrar\:FrameBarras}
{\xe \v FrameBarras\:insereQSSBtnFiltrar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQSSBtnFiltrar ()}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 342                                      \{\par
343     Style style;\par
344     ui->btnFiltrar->setStyleSheet(style.cssBtn);\par
345     ui->btnFiltrar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/filtro.png"}));\par
346 \}\par
}
}
{\xe \v insereQssBtnVoltar\:FrameBarras}
{\xe \v FrameBarras\:insereQssBtnVoltar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssBtnVoltar ()}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 331                                     \{\par
332     Style style;\par
333     ui->btnVoltar->setStyleSheet(style.cssBtn);\par
334     ui->btnVoltar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/anterior.png"}));\par
335 \}\par
}
}
{\xe \v insereQssFrameBarras\:FrameBarras}
{\xe \v FrameBarras\:insereQssFrameBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssFrameBarras ()}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 305                                       \{\par
306     insereQssBtnAvancar();\par
307     insereQssBtnVoltar();\par
308     insereQSSBtnFiltrar();\par
309     insereQssTabWidget();\par
310     insereQssTableBarras();\par
311     insereQssTableLinhas();\par
312 \}\par
}
}
{\xe \v insereQssTableBarras\:FrameBarras}
{\xe \v FrameBarras\:insereQssTableBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssTableBarras ()}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 363                                       \{\par
364     Style style;\par
365     {\cf20 //Inserindo cabe\'E7alho vertical na priemira coluna}\par
366     ui->tableBarras->setRowCount(3 + 2*quantidadeDeComponentesHarm + 1);\par
367     ui->tableBarras->setColumnCount(FrameTensoes::numeroDeBarras);\par
368     ui->tableBarras->setVerticalHeaderLabels(cabecalhoBarras());\par
369     ui->tableBarras->setStyleSheet(style.cssTabelaBarras); {\cf20 //insere QSS na tabela}\par
370     ui->tableBarras->verticalHeader()->setStyleSheet(style.cssHeaderTabela);\par
371     ui->tableBarras->verticalHeader()->setLineWidth(1);\par
372     {\cf20 //insere um numero de linhas \'E0 tabela correspondente ao numero de Barras}\par
373     ui->tableBarras->horizontalHeader()->setVisible({\cf17 true});\par
374     ui->tableBarras->setAlternatingRowColors({\cf17 true}); {\cf20 //aplica anternacia de cores na tabela}\par
375     ui->tableBarras->verticalHeader()->setDefaultSectionSize(30);\par
376     {\cf19 for}({\cf18 int} i = 0 ; i < (3 + 2*quantidadeDeComponentesHarm + 1) ; i++)\{\par
377         ui->tableBarras->setRowHeight(i, 31);\par
378     \}\par
379     ui->tableBarras->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOn);\par
380 \}\par
}
}
{\xe \v insereQssTableLinhas\:FrameBarras}
{\xe \v FrameBarras\:insereQssTableLinhas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssTableLinhas ()}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 407                                       \{\par
408     Style style;\par
409     ui->tableLinhas->setRowCount(2 + 2*quantidadeDeComponentesHarm + 4);\par
410     ui->tableLinhas->setColumnCount(numeroDeLinhas);\par
411     ui->tableLinhas->setVerticalHeaderLabels(cabecalhoLinhas());\par
412     ui->tableLinhas->setStyleSheet(style.cssTabelaBarras); {\cf20 //insere QSS na tabela}\par
413     ui->tableLinhas->verticalHeader()->setStyleSheet(style.cssHeaderTabela);\par
414     ui->tableLinhas->verticalHeader()->setLineWidth(1);\par
415     ui->tableLinhas->horizontalHeader()->setVisible({\cf17 true});\par
416     ui->tableLinhas->setAlternatingRowColors({\cf17 true}); {\cf20 //aplica anternacia de cores na tabela}\par
417     ui->tableLinhas->verticalHeader()->setDefaultSectionSize(30);\par
418     {\cf19 for}({\cf18 int} i = 0 ; i < (2 + 2*quantidadeDeComponentesHarm + 4) ; i++)\{\par
419         ui->tableLinhas->setRowHeight(i, 31);\par
420     \}\par
421     ui->tableBarras->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOn);\par
422     ui->tableLinhas->setHorizontalHeaderLabels(linhasDoSistema());\par
423 \}\par
}
}
{\xe \v insereQssTabWidget\:FrameBarras}
{\xe \v FrameBarras\:insereQssTabWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::insereQssTabWidget ()}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 353                                     \{\par
354     Style style;\par
355     ui->tabLinhas->setStyleSheet(style.cssTabWidget);\par
356 \}\par
}
}
{\xe \v linhasDoSistema\:FrameBarras}
{\xe \v FrameBarras\:linhasDoSistema}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStringList FrameBarras::linhasDoSistema ()}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 178                                         \{\par
179     {\cf18 int} origem;\par
180     {\cf18 int} destino;\par
181     QStringList linhas;\par
182     {\cf19 if}(!MainWindow::arquivoThdi->open(QFile::ReadOnly|QFile::Text))\{\par
183         {\cf19 if}(MainWindow::arquivoThdi->error() == QFile::OpenError)\{\par
184             {\cf19 return} QStringList();\par
185         \}\par
186         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
187         {\cf19 return} QStringList();\par
188     \}\par
189 \par
190     {\cf19 for}({\cf18 int} i = 0 ; i < 2 ; i++)\{\par
191         MainWindow::arquivoThdi->readLine();\par
192     \}\par
193 \par
194     {\cf19 while}(!MainWindow::arquivoThdi->atEnd())\{\par
195         QString line = MainWindow::arquivoThdi->readLine();\par
196         QStringList indice = line.split({\cf22 ","});\par
197         origem = indice.at(0).trimmed().toInt();\par
198         destino = indice.at(2).trimmed().toInt();\par
199         {\cf19 if}(origem < destino)\{\par
200             QString item = QString::number(origem) +{\cf22 " -> "}+QString::number(destino);\par
201             linhas.push_back(item);\par
202         \}\par
203     \}\par
204     MainWindow::arquivoThdi->close();\par
205     {\cf19 return} linhas;\par
206 \}\par
}
}
{\xe \v potencia\:FrameBarras}
{\xe \v FrameBarras\:potencia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double FrameBarras::potencia (double  {\i base}, int  {\i expoente}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 822                                                              \{\par
823     {\cf19 return} (expoente==0) ? 1 : (expoente == 1) ? base : base*potencia(base,expoente-1);\par
824 \}\par
}
}
{\xe \v preencheBarra\:FrameBarras}
{\xe \v FrameBarras\:preencheBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheBarra ()}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 463                                \{\par
464 \par
465     {\cf20 //O arquivo thdv possui uma linha de informa~\'E7\'E3o para cada barra -- por isso foi selecionado}\par
466     {\cf20 //realiza o procedimento de abertura do arquivo e alerta caso aconte\'E7a algum erro -- Conforme explicado no mainwindow.cpp}\par
467     {\cf19 if}(!MainWindow::arquivoThdv->open(QFile::ReadOnly|QFile::Text))\{\par
468         {\cf19 if}(MainWindow::arquivoThdv->error() == QFile::OpenError)\{\par
469             return ;\par
470         \}\par
471         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
472         return ;\par
473     \}\par
474 \par
475     {\cf19 for} ({\cf18 int} i = 0; i < 2; i++) \{\par
476         MainWindow::arquivoThdv->readLine();\par
477     \}\par
478 \par
479     {\cf19 for} ({\cf18 int} i = 0; i < FrameTensoes::numeroDeBarras; i++) \{\par
480         QString line = MainWindow::arquivoThdv->readLine();\par
481         QStringList indice = line.split({\cf22 ","});\par
482         {\cf18 bool} ok = {\cf17 false};\par
483         {\cf18 double} tensaoPu = indice.at(2).trimmed().toDouble(&ok);\par
484         {\cf19 if} (ok) \{\par
485             barras[i].setTensaoPu(tensaoPu);\par
486         \}\par
487         ok = {\cf17 false};\par
488         {\cf18 double} thdv = indice.at(3).trimmed().toDouble(&ok);\par
489         {\cf19 if} (ok) \{\par
490             barras[i].setThdvPercent(thdv);\par
491         \}\par
492         {\cf18 double} tensaoNominal = FrameTensoes::tensoesNominais[i];\par
493         barras[i].setTensaoNominalKv(tensaoNominal);\par
494 \par
495         {\cf18 int} classeTensaoThdv;\par
496         {\cf19 if} (tensaoNominal <= 1) \{\par
497             classeTensaoThdv = 1;\par
498         \} {\cf19 else} {\cf19 if} (tensaoNominal < 69) \{\par
499             classeTensaoThdv = 2;\par
500         \} {\cf19 else} \{\par
501             classeTensaoThdv = 3;\par
502         \}\par
503 \par
504         {\cf18 bool} barraInfectadaThdv = {\cf17 false};\par
505         {\cf19 switch} (classeTensaoThdv) \{\par
506         {\cf19 case} 1:\par
507             barraInfectadaThdv = (barras[i].getThdvPercent() > 10);\par
508             {\cf19 break};\par
509         {\cf19 case} 2:\par
510             barraInfectadaThdv = (barras[i].getThdvPercent() > 8);\par
511             {\cf19 break};\par
512         {\cf19 case} 3:\par
513             barraInfectadaThdv = (barras[i].getThdvPercent() > 5);\par
514             {\cf19 break};\par
515         \}\par
516         barras[i].setbarraInfectadaThdv(barraInfectadaThdv);\par
517 \par
518         {\cf18 double} tensaoEficaz = tensaoPu * sqrt(1 + pow((thdv / 100), 2));\par
519         barras[i].setTensaoEficaz(tensaoEficaz);\par
520     \}\par
521     MainWindow::arquivoThdv->close();\par
522 \par
523     {\cf19 if}(!MainWindow::arquivoVsoln->open(QFile::ReadOnly|QFile::Text))\{\par
524         {\cf19 if}(MainWindow::arquivoVsoln->error() == QFile::OpenError)\{\par
525             return  ;\par
526         \}\par
527         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
528         return  ;\par
529     \}\par
530 \par
531     {\cf19 for}({\cf18 int} i = 0 ; i < 4 ; i++)\{\par
532         MainWindow::arquivoVsoln->readLine();\par
533     \}\par
534 \par
535     {\cf18 int} numBarra;\par
536     {\cf18 int} numHarm;\par
537     {\cf18 double} magHarm;\par
538     {\cf18 double} percentHarm;\par
539     {\cf18 int} classeTensaoThdi;\par
540     std::setlocale(LC_ALL,{\cf22 ""});\par
541     {\cf19 for}({\cf18 int} i = 0 ; i < FrameTensoes::numeroDeBarras*(quantidadeDeComponentesHarm+1) ; i++)\{\par
542         QString line = MainWindow::arquivoVsoln->readLine();\par
543         QStringList indice = line.split({\cf22 ","});\par
544 \par
545         numBarra = indice.at(1).trimmed().toInt()-1;\par
546         numHarm = indice.at(0).trimmed().toInt();\par
547         magHarm = indice.at(2).trimmed().toDouble();\par
548         percentHarm = 100*magHarm/(barras[numBarra].getTensaoPu());\par
549 \par
550         {\cf19 if}(barras[numBarra].getTensaoNominalKv() <= 1 )\{\par
551             classeTensaoThdi = 1;\par
552         \}{\cf19 else} {\cf19 if}(barras[numBarra].getTensaoNominalKv() > 1 && barras[numBarra].getTensaoNominalKv() <= 13.8)\{\par
553             classeTensaoThdi = 2;\par
554         \}{\cf19 else} {\cf19 if}(barras[numBarra].getTensaoNominalKv() > 13.8 && barras[numBarra].getTensaoNominalKv() <= 69)\{\par
555             classeTensaoThdi = 3;\par
556         \}{\cf19 else}\{\par
557             classeTensaoThdi = 4;\par
558         \}\par
559 \par
560 \par
561         {\cf19 if}(indice.at(0).trimmed().toInt()!=1)\{\par
562 \par
563             {\cf19 if}(numHarm > 25 && numHarm%3==0)\{\par
564                 {\cf19 if}(percentHarm > limitesDti[classeTensaoThdi][997])\{\par
565                     barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 true});\par
566                 \}{\cf19 else}\{\par
567                     barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 false});\par
568                 \}\par
569             \}{\cf19 else} {\cf19 if}(numHarm > 25 && numHarm%3!=0)\{\par
570                 {\cf19 if}(percentHarm > limitesDti[classeTensaoThdi][998])\{\par
571                     barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 true});\par
572                 \}{\cf19 else}\{\par
573                     barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 false});\par
574                 \}\par
575             \}{\cf19 else}\{\par
576                 {\cf19 if}(percentHarm > limitesDti[classeTensaoThdi][numHarm])\{\par
577                     barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 true});\par
578                 \}{\cf19 else}\{\par
579                     barras[numBarra].somatorioHarmonico(numHarm,magHarm,percentHarm,classeTensaoThdi,{\cf17 false});\par
580                 \}\par
581             \}\par
582         \}\par
583     \}\par
584 \par
585     MainWindow::arquivoVsoln->close();\par
586 \}\par
}
}
{\xe \v preencheFrameBarras\:FrameBarras}
{\xe \v FrameBarras\:preencheFrameBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheFrameBarras ()}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 289                                      \{\par
290     insereQssFrameBarras();\par
291     inicializaBarra();\par
292     preencheBarra();\par
293     preencheTabelaBarra();\par
294     inicializaLinha();\par
295     preencheLinha();\par
296     preencheTabelaLinha();\par
297     insereBackgroundNasPoluidoras();\par
298 \}\par
}
}
{\xe \v preencheLimites\:FrameBarras}
{\xe \v FrameBarras\:preencheLimites}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheLimites ()}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 213                                  \{\par
214 \par
215     {\cf20 /*}\par
216 {\cf20      * 1 equivale a (Tensao Nominal <= 1kV)}\par
217 {\cf20      * 2 equivale a (Tensao Nominal > 1 kv && Tensao Nonimal <= 13.8 kV)}\par
218 {\cf20      * 3 equivale a (Tensao Nominal > 13.8 kV && Tensao Nominal <= 69kV)}\par
219 {\cf20      * 4 equivale a (Tensao Nominal > 69kV)}\par
220 {\cf20     */}\par
221 \par
222     limitesDti[1][3] = 6.5;\par
223     limitesDti[1][5] = 7.5;\par
224     limitesDti[1][7] = 6.5;\par
225     limitesDti[1][9] = 2;\par
226     limitesDti[1][11] = 4.5;\par
227     limitesDti[1][13] = 4;\par
228     limitesDti[1][15] = 1;\par
229     limitesDti[1][17] = 2.5;\par
230     limitesDti[1][19] = 2;\par
231     limitesDti[1][21] = 1;\par
232     limitesDti[1][23] = 2;\par
233     limitesDti[1][25] = 2;\par
234     limitesDti[1][997] = 1.5; {\cf20 // impar nao multplica de 3}\par
235     limitesDti[1][998] = 1; {\cf20 // impar multipla de 3}\par
236 \par
237     limitesDti[2][3] = 5;\par
238     limitesDti[2][5] = 6;\par
239     limitesDti[2][7] = 5;\par
240     limitesDti[2][9] = 1.5;\par
241     limitesDti[2][11] = 3.5;\par
242     limitesDti[2][13] = 3;\par
243     limitesDti[2][15] = 0.5;\par
244     limitesDti[2][17] = 2;\par
245     limitesDti[2][19] = 1.5;\par
246     limitesDti[2][21] = 0.5;\par
247     limitesDti[2][23] = 1.5;\par
248     limitesDti[2][25] = 2;\par
249     limitesDti[1][997] = 1.5; {\cf20 // impar nao multplica de 3 maior q 25}\par
250     limitesDti[1][998] = 1; {\cf20 // impar multipla de 3 maior q 21}\par
251 \par
252 \par
253     limitesDti[3][3] = 1;\par
254     limitesDti[3][5] = 4.5;\par
255     limitesDti[3][7] = 4;\par
256     limitesDti[3][9] = 1.5;\par
257     limitesDti[3][11] = 3;\par
258     limitesDti[3][13] = 2.5;\par
259     limitesDti[3][15] = 0.5;\par
260     limitesDti[3][17] = 1.5;\par
261     limitesDti[3][19] = 1.5;\par
262     limitesDti[3][21] = 0.5;\par
263     limitesDti[3][23] = 1.5;\par
264     limitesDti[3][25] = 1.5;\par
265     limitesDti[3][997] = 1.5; {\cf20 // impar nao multplica de 3 maior q 25}\par
266     limitesDti[3][998] = 0.5; {\cf20 // impar multipla de 3 maior q 21}\par
267 \par
268     limitesDti[4][3] = 0.5;\par
269     limitesDti[4][5] = 2.5;\par
270     limitesDti[4][7] = 2;\par
271     limitesDti[4][9] = 1;\par
272     limitesDti[4][11] = 1.5;\par
273     limitesDti[4][13] = 1.5;\par
274     limitesDti[4][15] = 0.5;\par
275     limitesDti[4][17] = 1;\par
276     limitesDti[4][19] = 1;\par
277     limitesDti[4][21] = 0.5;\par
278     limitesDti[4][23] = 1;\par
279     limitesDti[4][25] = 1;\par
280     limitesDti[4][997] = 0.5; {\cf20 // impar nao multplica de 3 maior q 25}\par
281     limitesDti[4][998] = 0.5; {\cf20 // impar multipla de 3 maior q 21}\par
282 \}\par
}
}
{\xe \v preencheLinha\:FrameBarras}
{\xe \v FrameBarras\:preencheLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheLinha ()}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 630 \{\par
631     {\cf19 if} (!MainWindow::arquivoThdi->open(QFile::ReadOnly | QFile::Text)) \{\par
632         {\cf19 if} (MainWindow::arquivoThdi->error() == QFile::OpenError) \{\par
633             {\cf19 return};\par
634         \}\par
635         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, {\cf22 "Erro ao abrir arquivo"});\par
636         {\cf19 return};\par
637     \}\par
638 \par
639     {\cf19 for} ({\cf18 int} i = 0; i < 2; i++) \{\par
640         MainWindow::arquivoThdi->readLine();\par
641     \}\par
642 \par
643     {\cf18 int} origem, destino;\par
644     {\cf18 double} corrente, dht;\par
645     {\cf18 int} cont = 0;\par
646     {\cf18 double} correnteEficaz;\par
647 \par
648     {\cf19 while} (!MainWindow::arquivoThdi->atEnd()) \{\par
649         QString line = MainWindow::arquivoThdi->readLine();\par
650         QStringList indice = line.split({\cf22 ","});\par
651         origem = indice.at(0).trimmed().toInt();\par
652         destino = indice.at(2).trimmed().toInt();\par
653         corrente = indice.at(5).trimmed().toDouble();\par
654         dht = indice.at(6).trimmed().toDouble();\par
655         correnteEficaz = corrente * sqrt(1 + pow((dht / 100), 2));\par
656 \par
657         {\cf19 if} (origem < destino) \{\par
658             linhas[cont].setOrigem(origem);\par
659             linhas[cont].setDestino(destino);\par
660             linhas[cont].setCorrente(corrente);\par
661             linhas[cont].setDhtPercent(dht);\par
662             linhas[cont].setCorrenteEficaz(correnteEficaz);\par
663             cont++;\par
664         \}\par
665     \}\par
666 \par
667     MainWindow::arquivoThdi->close();\par
668 \par
669     {\cf20 // ...}\par
670 \par
671     {\cf19 if} (!MainWindow::arquivoIsoln->open(QFile::ReadOnly | QFile::Text)) \{\par
672         {\cf19 if} (MainWindow::arquivoIsoln->error() == QFile::OpenError) \{\par
673             {\cf19 return};\par
674         \}\par
675         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, {\cf22 "Erro ao abrir arquivo"});\par
676         {\cf19 return};\par
677     \}\par
678 \par
679     {\cf19 for} ({\cf18 int} i = 0; i < 4; i++) \{\par
680         MainWindow::arquivoIsoln->readLine();\par
681     \}\par
682 \par
683     {\cf18 int} numHarm;\par
684     {\cf18 double} magHarm;\par
685     {\cf18 double} percentHarm;\par
686 \par
687     {\cf19 for} ({\cf18 int} i = 0; i < quantidadeDeComponentesHarm; i++) \{\par
688         {\cf19 for} ({\cf18 int} j = 0; j < numeroDeLinhas;) \{\par
689             QString line = MainWindow::arquivoIsoln->readLine();\par
690             {\cf19 if} (line.trimmed().isEmpty()) \{\par
691                 {\cf19 break};\par
692             \}\par
693             QStringList indice = line.split({\cf22 ","});\par
694             numHarm = indice.at(0).trimmed().toInt();\par
695             origem = indice.at(1).trimmed().toInt();\par
696             destino = indice.at(2).trimmed().toInt();\par
697             magHarm = indice.at(4).trimmed().toDouble();\par
698             percentHarm = 100 * (magHarm / linhas[j].getCorrente());\par
699             {\cf19 if} (numHarm != 1 && origem < destino && origem != 0 && destino != 0) \{\par
700                 linhas[j].setDti(numHarm, magHarm, percentHarm);\par
701                 j++;\par
702             \}\par
703         \}\par
704     \}\par
705 \par
706     MainWindow::arquivoIsoln->close();\par
707 \par
708     {\cf19 if}(!MainWindow::arquivoLdat->open(QFile::ReadOnly|QFile::Text))\{\par
709         {\cf19 if}(MainWindow::arquivoLdat->error() == QFile::OpenError)\{\par
710             return  ;\par
711         \}\par
712         QMessageBox::warning({\cf17 this},{\cf22 "Erro"},{\cf22 "Erro ao abrir arquivo"});\par
713         return  ;\par
714     \}\par
715 \par
716     {\cf19 for}({\cf18 int} i = 0 ; i < 9 ; i++)\{\par
717         MainWindow::arquivoLdat->readLine();\par
718     \}\par
719     {\cf18 double} resistencia;\par
720     {\cf18 double} perdas;\par
721     {\cf18 double} perdasEficaz;\par
722     {\cf19 for} ({\cf18 int} i = 0; i < numeroDeLinhas; i++) \{\par
723         QString line = MainWindow::arquivoLdat->readLine();\par
724         {\cf19 if} (line.trimmed().isEmpty()) \{ {\cf20 // verificar se \'E9 uma linha vazia}\par
725             {\cf19 break};\par
726         \}\par
727         QStringList indice = line.split({\cf22 ","});\par
728         origem = indice.at(0).trimmed().toInt();\par
729         destino = indice.at(1).trimmed().toInt();\par
730         {\cf19 if} (origem < destino) \{\par
731             resistencia = indice.at(3).trimmed().toDouble();\par
732 \par
733             {\cf19 for} ({\cf18 int} j = 0; j < numeroDeLinhas; j++) \{\par
734                 {\cf19 if} (linhas[j].getOrigem() == origem && linhas[j].getDestino() == destino) \{\par
735                     linhas[j].setResistencia(resistencia);\par
736                     perdas = linhas[j].getCorrente() * resistencia;\par
737                     perdasEficaz = linhas[j].getCorrenteEficaz() * resistencia;\par
738                     linhas[j].setPerdas(perdas);\par
739                     linhas[j].setPerdasEficaz(perdasEficaz);\par
740                 \}\par
741             \}\par
742         \}\par
743     \}\par
744 \par
745     MainWindow::arquivoLdat->close();\par
746     {\cf19 return};\par
747 \}\par
}
}
{\xe \v preencheTabelaBarra\:FrameBarras}
{\xe \v FrameBarras\:preencheTabelaBarra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheTabelaBarra ()}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 593                                       \{\par
594     {\cf19 for} ({\cf18 int} i = 0; i < FrameTensoes::numeroDeBarras; i++) \{\par
595         {\cf18 int} pos = 0;\par
596 \par
597         ui->tableBarras->setItem(pos++, i, {\cf17 new} QTableWidgetItem(QString::number(barras[i].getTensaoPu(), {\cf23 'f'}, 5)));\par
598         ui->tableBarras->setItem(pos++, i, {\cf17 new} QTableWidgetItem(QString::number(barras[i].getTensaoNominalKv(), {\cf23 'f'}, 5)));\par
599         ui->tableBarras->setItem(pos++, i, {\cf17 new} QTableWidgetItem(QString::number(barras[i].getThdvPercent(), {\cf23 'f'}, 5)));\par
600 \par
601         {\cf19 for} ({\cf18 int} j = 3; j <= indiceHarmMax; j += 2) \{\par
602             QTableWidgetItem* dtiAbsolut = {\cf17 new} QTableWidgetItem(QString::number(barras[i].getDti().find(j)->second.first.first, {\cf23 'e'}, 5));\par
603             ui->tableBarras->setItem(pos++, i, dtiAbsolut);\par
604         \}\par
605 \par
606         {\cf19 for} ({\cf18 int} j = 3; j <= indiceHarmMax; j += 2) \{\par
607             QTableWidgetItem* dtiRelative = {\cf17 new} QTableWidgetItem(QString::number(barras[i].getDti().find(j)->second.first.second, {\cf23 'f'}, 5));\par
608             ui->tableBarras->setItem(pos++, i, dtiRelative);\par
609         \}\par
610 \par
611         ui->tableBarras->setItem(pos, i, {\cf17 new} QTableWidgetItem(QString::number(barras[i].getTensaoEficaz(), {\cf23 'f'}, 5)));\par
612     \}\par
613 \}\par
}
}
{\xe \v preencheTabelaLinha\:FrameBarras}
{\xe \v FrameBarras\:preencheTabelaLinha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::preencheTabelaLinha ()}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 754                                      \{\par
755     {\cf19 for}({\cf18 int} i = 0 ; i < numeroDeLinhas ; i++)\{\par
756         QTableWidgetItem* correntePu = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getCorrente(),{\cf23 'f'},5));\par
757         QTableWidgetItem* dht = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getDhtPercent(),{\cf23 'f'},5));\par
758         ui->tableLinhas->setItem(0,i,correntePu);\par
759         ui->tableLinhas->setItem(1,i,dht);\par
760         {\cf18 int} pos =2;\par
761         {\cf19 for}({\cf18 int} j = 3 ; j <= indiceHarmMax ; j+=2)\{\par
762             QTableWidgetItem* dtiAbsolut = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getDti().find(j)->second.first,{\cf23 'e'},5));\par
763             ui->tableLinhas->setItem(pos,i,dtiAbsolut);\par
764             pos++;\par
765         \}\par
766         {\cf19 for}({\cf18 int} j = 3 ; j <= indiceHarmMax ; j+=2)\{\par
767             QTableWidgetItem* dtiRelative = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getDti().find(j)->second.second,{\cf23 'f'},5));\par
768             ui->tableLinhas->setItem(pos,i,dtiRelative);\par
769             pos++;\par
770         \}\par
771         QTableWidgetItem* correnteEficaz = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getCorrenteEficaz(),{\cf23 'f'},5));\par
772         ui->tableLinhas->setItem(pos,i,correnteEficaz);\par
773         pos++;\par
774 \par
775         QTableWidgetItem* resistencia = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getResistencia(),{\cf23 'f'},5));\par
776         ui->tableLinhas->setItem(pos,i,resistencia);\par
777         pos++;\par
778 \par
779         QTableWidgetItem* perdas = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getPerdas(),{\cf23 'f'},5));\par
780         ui->tableLinhas->setItem(pos,i,perdas);\par
781         pos++;\par
782 \par
783         QTableWidgetItem* perdasEficaz = {\cf17 new} QTableWidgetItem(QString::number(linhas[i].getPerdasEficaz(),{\cf23 'f'},5));\par
784         ui->tableLinhas->setItem(pos,i,perdasEficaz);\par
785         pos++;\par
786     \}\par
787 \}\par
}
}
{\xe \v setLimitesDti\:FrameBarras}
{\xe \v FrameBarras\:setLimitesDti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void FrameBarras::setLimitesDti (int  {\i nivelTensao}, int  {\i harmonica}, double  {\i limite}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                                                               \{\par
63         limitesDti[nivelTensao][harmonica] = limite;\par
64     \}\par
}
}
{\xe \v verificaAvanco\:FrameBarras}
{\xe \v FrameBarras\:verificaAvanco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameBarras::verificaAvanco ()}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v barras\:FrameBarras}
{\xe \v FrameBarras\:barras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b Barra} > FrameBarras::barras = QList<{\b Barra}>(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QList est\'E1tico do tipo '{\b Barra}', respons\'E1vel por armazenar todas as barras do sistema,seus atributos e m\'E9todos. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QList<Barra> {\b FrameBarras::barras} \par
}}
{\xe \v filtroBarraInserido\:FrameBarras}
{\xe \v FrameBarras\:filtroBarraInserido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FrameBarras::filtroBarraInserido{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v filtroLinhaInserido\:FrameBarras}
{\xe \v FrameBarras\:filtroLinhaInserido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FrameBarras::filtroLinhaInserido{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v indexTab\:FrameBarras}
{\xe \v FrameBarras\:indexTab}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::indexTab = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica em qual index do TabWidget o us\'FAario est\'E1. 0 para barras e 1 para linhas. Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FrameBarras::indexTab} \par
}}
{\xe \v indiceHarmMax\:FrameBarras}
{\xe \v FrameBarras\:indiceHarmMax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::indiceHarmMax{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
V\'E1riavel est\'E1tica respons\'E1vel por armazenar o \'EDndice harm\'F4nico m\'E1ximo a ser an\'E1lisado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FrameBarras::indiceHarmMax} \par
}}
{\xe \v linhas\:FrameBarras}
{\xe \v FrameBarras\:linhas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b Linha} > FrameBarras::linhas = QList<{\b Linha}>(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
QList est\'E1tico do tipo '{\b Linha}', respons\'E1vel por armazenar todas as linhas do sistema,seus atributos e m\'E9todos. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QList<Linha> {\b FrameBarras::linhas} \par
}}
{\xe \v numeroDeLinhas\:FrameBarras}
{\xe \v FrameBarras\:numeroDeLinhas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::numeroDeLinhas{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por armazenar o n\'FAmero de linhas do sistema. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FrameBarras::numeroDeLinhas} \par
}}
{\xe \v quantidadeDeComponentesHarm\:FrameBarras}
{\xe \v FrameBarras\:quantidadeDeComponentesHarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameBarras::quantidadeDeComponentesHarm{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
V\'E1riavel est\'E1tica respons\'E1vel por armazenar a quantidade de componentes harm\'F4nicas a serem an\'E1lisadas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FrameBarras::quantidadeDeComponentesHarm} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b framebarras.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b framebarras.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FrameExportar Class Reference\par \pard\plain 
{\tc\tcl2 \v FrameExportar}
{\xe \v FrameExportar}
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela exporta\'E7\'E3o dos dados em 3 formatos diferentes ( Pdf , Excel e .csv ) @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar. }}\par
{
{\f2 #include <frameexportar.h>}}\par
Inheritance diagram for FrameExportar:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_frame_exportar.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameExportar::FrameExportar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b FrameExportar}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mw} \cell }{(Par\'E3metro do tipo Ui::MainWindow para permitir acesso aos componentes da interface do frame {\b MainWindow}) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fb} \cell }{(Par\'E3metro do tipo Ui::FrameTensoes para permitir acesso aos componentes da interface do frame {\b FrameBarras}) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FrameExportar} (QWidget *parent=nullptr, Ui::MainWindow *mw=nullptr, Ui::FrameBarras *fb=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameExportar::~FrameExportar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b FrameExportar} \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FrameExportar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameExportar::inserirQssFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar m\'E9todos que inserem Qss nos componentes do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirQssFrame} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameExportar::inserirQssImg\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir um imagem ilustrativa no Frame e Qss nela.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirQssImg} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameExportar::inicializaFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primeiro m\'E9todo a ser chamada no construtor, respons\'E1vel por chamar os m\'E9todos subsequ\'EAntes que modelam a Interface do frame.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaFrame} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameExportar::ExportacaoParaPdf\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por implementar a exporta\'E7\'E3o para Pdf. Este m\'E9todo \'E9 respons\'E1vel por verificar quais foram os filtros escolhidos pelo us\'FAario no frame anterior e direcionar para o m\'E9todo respons\'E1vel pela exporta\'E7\'E3o escolhida. \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExportacaoParaPdf} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameExportar::ExportacaoParaExcel\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por implementar a exporta\'E7\'E3o para Excel. Este m\'E9todo \'E9 respons\'E1vel por verificar quais foram os filtros escolhidos pelo us\'FAario no frame anterior e direcionar para o m\'E9todo respons\'E1vel pela exporta\'E7\'E3o escolhida. \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExportacaoParaExcel} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameExportar::ExportacaoParaCsv\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por implementar a exporta\'E7\'E3o para Csv. Este m\'E9todo \'E9 respons\'E1vel por verificar quais foram os filtros escolhidos pelo us\'FAario no frame anterior e direcionar para o m\'E9todo respons\'E1vel pela exporta\'E7\'E3o escolhida. \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExportacaoParaCsv} ()\par
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
FrameExportar::inserirQssRadioButton\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos bot\'F5es exportar e voltar\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirQssRadioButton} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserirQssBtn} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela exporta\'E7\'E3o dos dados em 3 formatos diferentes ( Pdf , Excel e .csv ) @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FrameExportar\:FrameExportar}
{\xe \v FrameExportar\:FrameExportar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameExportar::FrameExportar (QWidget *  {\i parent} = {\f2 nullptr}, Ui::MainWindow *  {\i mw} = {\f2 nullptr}, Ui::FrameBarras *  {\i fb} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 48                                                                                  :\par
49     QFrame(parent),\par
50     ui({\cf17 new} Ui::FrameExportar)\par
51 \{\par
52     ui->setupUi({\cf17 this});\par
53 \par
54     frameMa = mw;\par
55     pa = parent;\par
56     frameB = fb;\par
57 \par
58 \par
59     inicializaFrame();\par
60 \par
61 \}\par
}
}
{\xe \v ~FrameExportar\:FrameExportar}
{\xe \v FrameExportar\:~FrameExportar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameExportar::~FrameExportar ()}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 68 \{\par
69     {\cf17 delete} ui;\par
70 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ExportacaoParaCsv\:FrameExportar}
{\xe \v FrameExportar\:ExportacaoParaCsv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExportacaoParaCsv ()}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 246                                      \{\par
247     ExportarCsv csv(pa);\par
248     {\cf19 if}(FiltrosBarra::indexComboBox == 0 )\{\par
249         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
250             csv.CsvInterBarrasTodL1TodL2();\par
251         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
252             csv.CsvInterBarrasInterL1TodL2();\par
253         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
254             csv.CsvInterBarrasTodL1InterL2();\par
255         \}{\cf19 else}\{\par
256             csv.CsvInterBarrasInterL1InterL2();\par
257         \}\par
258     \}{\cf19 else} {\cf19 if}(FiltrosBarra::indexComboBox == 1 )\{\par
259         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
260             csv.CsvCompBarrasaTodL1TodL2();\par
261         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
262             csv.CsvCompBarrasInterL1TodL2();\par
263         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
264             csv.CsvCompBarrasTodL1InterL2();\par
265         \}{\cf19 else}\{\par
266             csv.CsvCompBarrasInterL1InterL2();\par
267         \}\par
268     \}{\cf19 else}\{\par
269         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
270             csv.CsvInfecBarrasTodL1TodL2();\par
271         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
272             csv.CsvInfecBarrasInterL1TodL2();\par
273         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
274             csv.CsvInfecBarrasTodL1InterL2();\par
275         \}{\cf19 else}\{\par
276             csv.CsvInfecBarrasInterL1InterL2();\par
277         \}\par
278     \}\par
279 \}\par
}
}
{\xe \v ExportacaoParaExcel\:FrameExportar}
{\xe \v FrameExportar\:ExportacaoParaExcel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExportacaoParaExcel ()}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 206                                        \{\par
207     ExportarExcel excel(pa);\par
208     {\cf19 if}(FiltrosBarra::indexComboBox == 0 )\{\par
209         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
210             excel.ExcelInterBarrasTodL1TodL2();\par
211         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
212             excel.ExcelInterBInterL1TodL2();\par
213         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
214             excel.ExcelInterBarrasTodL1InterL2();\par
215         \}{\cf19 else}\{\par
216             excel.ExcelInterBInterL1InterL2();\par
217         \}\par
218     \}{\cf19 else} {\cf19 if}(FiltrosBarra::indexComboBox == 1 )\{\par
219         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
220             excel.ExcelCompBarrasaTodL1TodL2();\par
221         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
222             excel.ExcelCompBarrasInterL1TodL2();\par
223         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
224             excel.ExcelCompBarrasTodL1InterL2();\par
225         \}{\cf19 else}\{\par
226             excel.ExcelCompBarrasInterL1InterL2();\par
227         \}\par
228     \}{\cf19 else}\{\par
229         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
230             excel.ExcelInfecBarrasTodL1TodL2();\par
231         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
232             excel.ExcelInfecBarrasInterL1TodL2();\par
233         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
234             excel.ExcelInfecBarrasTodL1InterL2();\par
235         \}{\cf19 else}\{\par
236             excel.ExcelInfecBarrasInterL1InterL2();\par
237         \}\par
238     \}\par
239 \}\par
}
}
{\xe \v ExportacaoParaPdf\:FrameExportar}
{\xe \v FrameExportar\:ExportacaoParaPdf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::ExportacaoParaPdf ()}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 166                                      \{\par
167     ExportarPdf pdf(pa);\par
168     {\cf19 if}(FiltrosBarra::indexComboBox == 0 )\{\par
169         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
170             pdf.PdfInterBarrasTodL1TodL2();\par
171         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
172             pdf.PdfInterBInterL1TodL2();\par
173         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
174             pdf.PdfInterBarrasTodL1InterL2();\par
175         \}{\cf19 else}\{\par
176             pdf.PdfInterBInterL1InterL2();\par
177         \}\par
178     \}{\cf19 else} {\cf19 if}(FiltrosBarra::indexComboBox == 1 )\{\par
179         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
180             pdf.PdfCompBarrasaTodL1TodL2();\par
181         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
182             pdf.PdfCompBarrasInterL1TodL2();\par
183         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
184             pdf.PdfCompBarrasTodL1InterL2();\par
185         \}{\cf19 else}\{\par
186             pdf.PdfCompBarrasInterL1InterL2();\par
187         \}\par
188     \}{\cf19 else}\{\par
189         {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==0)\{\par
190             pdf.PdfInfecBarrasTodL1TodL2();\par
191         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 1 && FiltroLinha::indexComboBoxDestino==0)\{\par
192             pdf.PdfInfecBarrasInterL1TodL2();\par
193         \}{\cf19 else} {\cf19 if}(FiltroLinha::indexComboBoxOrigem == 0 && FiltroLinha::indexComboBoxDestino==1)\{\par
194             pdf.PdfInfecBarrasTodL1InterL2();\par
195         \}{\cf19 else}\{\par
196             pdf.PdfInfecBarrasInterL1InterL2();\par
197         \}\par
198     \}\par
199 \}\par
}
}
{\xe \v inicializaFrame\:FrameExportar}
{\xe \v FrameExportar\:inicializaFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::inicializaFrame ()}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 77                                    \{\par
78     inserirQssFrame();\par
79 \}\par
}
}
{\xe \v inserirQssBtn\:FrameExportar}
{\xe \v FrameExportar\:inserirQssBtn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::inserirQssBtn ()}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 121                                  \{\par
122     Style style;\par
123     ui->btnExportar->setStyleSheet(style.cssBtn);\par
124     ui->btnExportar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/exportar.png"}));\par
125     ui->btnExportar->setLayoutDirection(Qt::RightToLeft);\par
126     ui->btnVoltar->setStyleSheet(style.cssBtn);\par
127     ui->btnVoltar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/anterior.png"}));\par
128 \}\par
}
}
{\xe \v inserirQssFrame\:FrameExportar}
{\xe \v FrameExportar\:inserirQssFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::inserirQssFrame ()}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 86                                    \{\par
87     inserirQssImg();\par
88     inserirQssRadioButton();\par
89     inserirQssBtn();\par
90 \}\par
}
}
{\xe \v inserirQssImg\:FrameExportar}
{\xe \v FrameExportar\:inserirQssImg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::inserirQssImg ()}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 97                                  \{\par
98     Style style;\par
99     ui->img->setPixmap(QPixmap({\cf22 ":/imgExportar/imgs/descritiva/relatorio.png"}));\par
100     ui->img->setStyleSheet(style.cssImgExportar);\par
101 \}\par
}
}
{\xe \v inserirQssRadioButton\:FrameExportar}
{\xe \v FrameExportar\:inserirQssRadioButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameExportar::inserirQssRadioButton ()}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 108                                          \{\par
109     Style style;\par
110     ui->radioButtonCsv->setStyleSheet(style.cssRadioButton);\par
111     ui->radioButtonPDF->setChecked({\cf17 true});\par
112     ui->radioButtonExcel->setStyleSheet(style.cssRadioButton);\par
113     ui->radioButtonPDF->setStyleSheet(style.cssRadioButton);\par
114 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b frameexportar.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b frameexportar.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FrameTensoes Class Reference\par \pard\plain 
{\tc\tcl2 \v FrameTensoes}
{\xe \v FrameTensoes}
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela aquisi\'E7\'E3o dos dados de tens\'E3o nominal do sistema el\'E9trico @reentrant Essa janela foi construida com 1 frame que se posiciona no mesmo local do frame respons\'E1vel por receber os arquivos no {\b MainWindow}, nele h\'E1 um QTableWidget para inser\'E7\'E3o dos valores das tens\'F5es, seja por inser\'E7\'E3o manual ou para importar um arquivo com esses dados. Al\'E9m de bot\'F5es de salva, avan\'E7ar e voltar. }}\par
{
{\f2 #include <frametensoes.h>}}\par
Inheritance diagram for FrameTensoes:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_frame_tensoes.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::FrameTensoes\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b FrameTensoes}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mw} \cell }{(Par\'E3metro do tipo Ui::MainWindow para permitir acesso aos componentes da interface do frame {\b MainWindow}) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FrameTensoes} (QWidget *parent=nullptr, Ui::MainWindow *mw=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::~FrameTensoes\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b FrameTensoes} \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FrameTensoes} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereQssBotaoAvancar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o de Avan\'E7ar. Insere Qss no bot\'E3o para iniciar com aspecto de bloqueado. Insere um icone dentro do bot\'E3o demonstrando tendencia de seguir em frente, esse icon fica \'E1 direita do texto do bot\'E3o Bot\'E3o inicia bloqueado, j\'E1 que s\'F3 ser\'E1 liberado com a inser\'E7\'E3o de todos os arquivos nos LineEdits\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBotaoAvancar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereQssImportar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no Bot\'E3o importar e no seu lineEdit correspondente\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssImportar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereQssBtnVoltar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no Bot\'E3o voltar. Insere Qss padr\'E3o de bot\'E3o nele e um icone dentro do bot\'E3o indicando uma tend\'EAncia de retornar,esse icon fica \'E1 esquerda do texto do bot\'E3o\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnVoltar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereQssBtnLixeira\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o de apagar dados j\'E1 inseridos no LineEdit. Nesse bot\'E3o h\'E1 a inser\'E7\'E3o de um icone de lixeira, al\'E9m do Qss para que seu fundo seja vermelho, indicando uma remo\'E7\'E3o. O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnLixeira} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereQssBtnSalvar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no Bot\'E3o salvar. Insere Qss padr\'E3o de bot\'E3o nele e um icone dentro do bot\'E3o indicando uma tend\'EAncia de salvar\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnSalvar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereQssFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no frame atual\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssFrame} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereTableTensoes\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere e configura uma tabela de tens\'F5es na interface do usu\'E1rio.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereTableTensoes} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::insereQssFrameTensoes\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar m\'E9todos que ir\'E3o inserir Qss na interface do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssFrameTensoes} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::inicializaFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primeiro m\'E9todo a ser chamada no construtor, respons\'E1vel por chamar os m\'E9todos subsequ\'EAntes que modelam a Interface do frame. Al\'E9m de chamar o m\'E9todo que ir\'E1 inicializar a v\'E1riavel numeroDeBarras\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaFrame} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid FrameTensoes::tabelaTensoesPreenchida\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por verificar se toda a tabela est\'E1 preenchida\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna verdadeiro se a tabela estiver completamente preenchida e falso, caso o contrario; \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b tabelaTensoesPreenchida} ()\par
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QList< double > {\b tensoesNominais}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel respons\'E1vel por armazenar os valores das tens\'F5es nominais das barras para utilizar esses dados posteriormente no decorrer da aplica\'E7\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b numeroDeBarras}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que armazenar\'E1 o numero de barras do sistema, apartir da leitura dos arquivos inseridos no frame {\b MainWindow}. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
FrameTensoes::quantidadeDeBarras\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por c\'E1lcular o n\'FAmero de barras do sistema\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
valor inteiro do numero de barras do sistema \par
}}}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b quantidadeDeBarras} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela aquisi\'E7\'E3o dos dados de tens\'E3o nominal do sistema el\'E9trico @reentrant Essa janela foi construida com 1 frame que se posiciona no mesmo local do frame respons\'E1vel por receber os arquivos no {\b MainWindow}, nele h\'E1 um QTableWidget para inser\'E7\'E3o dos valores das tens\'F5es, seja por inser\'E7\'E3o manual ou para importar um arquivo com esses dados. Al\'E9m de bot\'F5es de salva, avan\'E7ar e voltar. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FrameTensoes\:FrameTensoes}
{\xe \v FrameTensoes\:FrameTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameTensoes::FrameTensoes (QWidget *  {\i parent} = {\f2 nullptr}, Ui::MainWindow *  {\i mw} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52                                                            :\par
53     QFrame(parent),\par
54 \par
55     ui({\cf17 new} Ui::FrameTensoes)\par
56 \{\par
57     ui->setupUi({\cf17 this});\par
58 \par
59     frameMain = mw; {\cf20 // atribui a v\'E1riavel global o endere\'E7o que mem\'F3ria respons\'E1vel por apontar para o Ui::MainWindow}\par
60 \par
61     inicializaFrame();\par
62 \par
63     {\cf20 // Conecta o sinal itemChanged da tabela tableTensoes ao slot verificarPreenchimentoTabela}\par
64     connect(ui->tableTensoes, &QTableWidget::itemChanged, {\cf17 this}, &FrameTensoes::verificarPreenchimentoTabela);\par
65     {\cf20 // Isso permite que o slot verificarPreenchimentoTabela seja chamado sempre que um item da tabela for alterado}\par
66 \}\par
}
}
{\xe \v ~FrameTensoes\:FrameTensoes}
{\xe \v FrameTensoes\:~FrameTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FrameTensoes::~FrameTensoes ()}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73 \{\par
74     {\cf17 delete} ui;\par
75 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v inicializaFrame\:FrameTensoes}
{\xe \v FrameTensoes\:inicializaFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::inicializaFrame ()}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 82                                   \{\par
83     numeroDeBarras=quantidadeDeBarras();\par
84     insereQssFrameTensoes();\par
85 \}\par
}
}
{\xe \v insereQssBotaoAvancar\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssBotaoAvancar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssBotaoAvancar ()}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 110                                         \{\par
111     Style style;\par
112     ui->btnAvancar->setStyleSheet(style.cssBtnTransition); {\cf20 // Inserindo Qss no bot\'E3o avan\'E7ar}\par
113     ui->btnAvancar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/proximo.png"})); {\cf20 //Inser\'E7\'E3o do icon diretamente do arquivo de recursos}\par
114     ui->btnAvancar->setLayoutDirection(Qt::RightToLeft); {\cf20 // Icone \'E9 inserido a direita do texto}\par
115     ui->btnAvancar->setEnabled({\cf17 false}); {\cf20 // Bot\'E3o inicia desabilitado , para s\'F3 ser ativado ap\'F3s o preenchimento dos valores de tens\'E3o}\par
116 \}\par
}
}
{\xe \v insereQssBtnLixeira\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssBtnLixeira}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssBtnLixeira ()}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 148                                       \{\par
149     Style style;\par
150     ui->btnLixeira->hide(); {\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido pelo bot\'E3o importar}\par
151     ui->btnLixeira->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
152     ui->btnLixeira->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"})); {\cf20 //Inser\'E7\'E3o do icon diretamente do arquivo de recursos}\par
153 \}\par
}
}
{\xe \v insereQssBtnSalvar\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssBtnSalvar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssBtnSalvar ()}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 161                                      \{\par
162     Style style;\par
163     ui->btnSalvarTabela->setStyleSheet(style.cssBtn); {\cf20 // Inserindo Qss no bot\'E3o}\par
164     ui->btnSalvarTabela->setIcon(QIcon({\cf22 ":/icons/imgs/icons/salve-.png"})); {\cf20 //Inser\'E7\'E3o do icon diretamente do arquivo de recursos}\par
165 \}\par
}
}
{\xe \v insereQssBtnVoltar\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssBtnVoltar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssBtnVoltar ()}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 135                                      \{\par
136     Style style;\par
137     ui->btnVoltar->setStyleSheet(style.cssBtn); {\cf20 // Inserindo Qss no bot\'E3o}\par
138     ui->btnVoltar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/anterior.png"})); {\cf20 //Inser\'E7\'E3o do icon diretamente do arquivo de recursos}\par
139 \}\par
}
}
{\xe \v insereQssFrame\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssFrame (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 172                                         \{\par
173     Style style;\par
174     this->setStyleSheet(style.cssFrameArq);\par
175 \};\par
}
}
{\xe \v insereQssFrameTensoes\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssFrameTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssFrameTensoes ()}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 92                                         \{\par
93     insereQssBotaoAvancar();\par
94     insereQssImportar();\par
95     insereQssBtnVoltar();\par
96     insereQssBtnLixeira();\par
97     insereQssBtnSalvar();\par
98     insereQssFrame();\par
99     insereTableTensoes();\par
100 \}\par
}
}
{\xe \v insereQssImportar\:FrameTensoes}
{\xe \v FrameTensoes\:insereQssImportar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereQssImportar ()}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 123                                     \{\par
124     Style style;\par
125     ui->btnImportar->setStyleSheet(style.cssBtn); {\cf20 // Inserindo Qss no bot\'E3o}\par
126     ui->lineEditImportar->setStyleSheet(style.cssLineEdit); {\cf20 // Inserindo Qss no LineEdit}\par
127 \}\par
}
}
{\xe \v insereTableTensoes\:FrameTensoes}
{\xe \v FrameTensoes\:insereTableTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FrameTensoes::insereTableTensoes ()}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 183 \{\par
184     Style style;\par
185 \par
186     {\cf20 // Configura\'E7\'E3o da tabela de tens\'F5es}\par
187     ui->tableTensoes->setColumnCount(2); {\cf20 // Duas colunas por ser uma para o indice e a outra para o n\'EDvel de tens\'E3o}\par
188     ui->tableTensoes->setRowCount(numeroDeBarras); {\cf20 // A tabela tem como numero de linhas , o n\'FAmero de barras do sistema}\par
189     ui->tableTensoes->setHorizontalHeaderLabels(\{{\cf22 "Barra"}, {\cf22 "Tens\'E3o [Kv]"}\}); {\cf20 // headers para as duas colunas}\par
190     ui->tableTensoes->setColumnWidth(0, 100); {\cf20 // Define a largura da coluna na posi\'E7\'E3o 0}\par
191     ui->tableTensoes->setColumnWidth(1, (numeroDeBarras <= 17) ? 358 : 346); {\cf20 // define a largura da coluna na posi\'E7\'E3o 1 (segunda coluna) da tabela tableTensoes, dependendo do valor da vari\'E1vel numeroDeBarras. Isso foi inserido para evitar que o scroolBar vertical seja ativado quando desnecess\'E1rio.}\par
192     ui->tableTensoes->verticalScrollBar()->setVisible({\cf17 true}); {\cf20 // garante um scroolBar vertical sempre visivel}\par
193     ui->tableTensoes->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff); {\cf20 // garante um scroolBar horizontal n\'E3o visivel}\par
194     ui->tableTensoes->setStyleSheet(style.csstabelaTensoes); {\cf20 //insere Qss na TabelaTens\'F5es}\par
195     ui->tableTensoes->horizontalHeader()->setStyleSheet(style.cssHeaderTabela); {\cf20 //insere Qss no Header vertical}\par
196     ui->tableTensoes->setAlternatingRowColors({\cf17 true}); {\cf20 //insere alternancia de cores entre as linhas da tabela}\par
197     ui->tableTensoes->verticalHeader()->setVisible({\cf17 false});\par
198     {\cf20 // Preenchimento das linhas da tabela com o \'EDndice das barras}\par
199     {\cf19 for} ({\cf18 int} i = 0; i < numeroDeBarras; i++) \{\par
200         QTableWidgetItem* item = {\cf17 new} QTableWidgetItem(QString::number(i+1));\par
201         item->setFlags(item->flags() & ~Qt::ItemIsEditable);\par
202         ui->tableTensoes->setItem(i, 0, item);\par
203     \}\par
204 \}\par
}
}
{\xe \v quantidadeDeBarras\:FrameTensoes}
{\xe \v FrameTensoes\:quantidadeDeBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameTensoes::quantidadeDeBarras ()}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 226 \{\par
227     QFile *arq1 = MainWindow::arquivoThdv;\par
228 \par
229     {\cf19 if} (!arq1->open(QFile::ReadOnly | QFile::Text)) \{\par
230         {\cf19 if} (arq1->error() == QFile::OpenError) \{\par
231             {\cf19 return} 0;\par
232         \}\par
233         QMessageBox::warning({\cf17 this}, {\cf22 "Erro"}, {\cf22 "Erro ao abrir arquivo"});\par
234         {\cf19 return} 0;\par
235     \}\par
236 \par
237     {\cf18 int} contador = 0;\par
238     QTextStream entrada(arq1);\par
239 \par
240     {\cf19 while} (!arq1->atEnd()) \{\par
241         arq1->readLine();\par
242         contador++;\par
243     \}\par
244 \par
245     arq1->close();\par
246     {\cf19 return} contador - 3;\par
247 \}\par
}
}
{\xe \v tabelaTensoesPreenchida\:FrameTensoes}
{\xe \v FrameTensoes\:tabelaTensoesPreenchida}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FrameTensoes::tabelaTensoesPreenchida ()}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 426 \{\par
427     {\cf20 // Percorre todas as linhas e colunas da tabela}\par
428     {\cf19 for} ({\cf18 int} row = 0; row < ui->tableTensoes->rowCount(); row++) \{\par
429         {\cf19 for} ({\cf18 int} column = 0; column < ui->tableTensoes->columnCount(); column++) \{\par
430             QTableWidgetItem* item = ui->tableTensoes->item(row, column);\par
431             {\cf20 // Obt\'E9m o item da c\'E9lula da tabela}\par
432 \par
433             {\cf19 if} (item == {\cf17 nullptr} || item->text().isEmpty()) \{\par
434                 {\cf20 // Verifica se o item \'E9 nulo ou se o texto est\'E1 vazio}\par
435                 {\cf19 return} {\cf17 false};\par
436                 {\cf20 // Retorna falso se a tabela n\'E3o estiver completamente preenchida}\par
437             \}\par
438         \}\par
439     \}\par
440 \par
441     {\cf19 return} {\cf17 true};\par
442     {\cf20 // Retorna verdadeiro se a tabela estiver completamente preenchida}\par
443 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v numeroDeBarras\:FrameTensoes}
{\xe \v FrameTensoes\:numeroDeBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FrameTensoes::numeroDeBarras{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que armazenar\'E1 o numero de barras do sistema, apartir da leitura dos arquivos inseridos no frame {\b MainWindow}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b FrameTensoes::numeroDeBarras} \par
}}
{\xe \v tensoesNominais\:FrameTensoes}
{\xe \v FrameTensoes\:tensoesNominais}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< double > FrameTensoes::tensoesNominais{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel respons\'E1vel por armazenar os valores das tens\'F5es nominais das barras para utilizar esses dados posteriormente no decorrer da aplica\'E7\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QList<double> {\b FrameTensoes::tensoesNominais} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b frametensoes.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b frametensoes.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Linha Class Reference\par \pard\plain 
{\tc\tcl2 \v Linha}
{\xe \v Linha}
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por armazenar os dados das Linhas. }}\par
{
{\f2 #include <Linha.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getOrigem} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOrigem} (int origem)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getDestino} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDestino} (int destino)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getCorrente} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCorrente} (double corrente)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getDhtPercent} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDhtPercent} (double dhtPercent)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getResistencia} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setResistencia} (double resistencia)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getPerdas} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPerdas} (double perdas)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getCorrenteEficaz} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCorrenteEficaz} (double correnteEficaz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getPerdasEficaz} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPerdasEficaz} (double perdasEficaz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getLinhaInfectadaDht} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLinhaInfectadaDht} (bool infectada)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< int, std::pair< double, double > > {\b getDti} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDti} (int key1, double dAbsolut, double dPercent)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por armazenar os dados das Linhas. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getCorrente\:Linha}
{\xe \v Linha\:getCorrente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getCorrente (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                          \{\par
34         {\cf19 return} corrente;\par
35     \}\par
}
}
{\xe \v getCorrenteEficaz\:Linha}
{\xe \v Linha\:getCorrenteEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getCorrenteEficaz (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65                                \{\par
66         {\cf19 return} correnteEficaz;\par
67     \}\par
}
}
{\xe \v getDestino\:Linha}
{\xe \v Linha\:getDestino}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Linha::getDestino (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                      \{\par
26         {\cf19 return} destino;\par
27     \}\par
}
}
{\xe \v getDhtPercent\:Linha}
{\xe \v Linha\:getDhtPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getDhtPercent (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                            \{\par
42         {\cf19 return} dhtPercent;\par
43     \}\par
}
}
{\xe \v getDti\:Linha}
{\xe \v Linha\:getDti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::map< int, std::pair< double, double > > Linha::getDti (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 89                                                  \{\par
90         {\cf19 return} dti;\par
91     \}\par
}
}
{\xe \v getLinhaInfectadaDht\:Linha}
{\xe \v Linha\:getLinhaInfectadaDht}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Linha::getLinhaInfectadaDht (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 81                                 \{\par
82         {\cf19 return} linhaInfectadaDht;\par
83     \}\par
}
}
{\xe \v getOrigem\:Linha}
{\xe \v Linha\:getOrigem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Linha::getOrigem (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                     \{\par
18         {\cf19 return} origem;\par
19     \}\par
}
}
{\xe \v getPerdas\:Linha}
{\xe \v Linha\:getPerdas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getPerdas (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 57                        \{\par
58         {\cf19 return} perdas;\par
59     \}\par
}
}
{\xe \v getPerdasEficaz\:Linha}
{\xe \v Linha\:getPerdasEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getPerdasEficaz (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73                              \{\par
74         {\cf19 return} perdasEficaz;\par
75     \}\par
}
}
{\xe \v getResistencia\:Linha}
{\xe \v Linha\:getResistencia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Linha::getResistencia (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 49                             \{\par
50         {\cf19 return} resistencia;\par
51     \}\par
}
}
{\xe \v setCorrente\:Linha}
{\xe \v Linha\:setCorrente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setCorrente (double  {\i corrente}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                       \{\par
38         this->corrente = corrente;\par
39     \}\par
}
}
{\xe \v setCorrenteEficaz\:Linha}
{\xe \v Linha\:setCorrenteEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setCorrenteEficaz (double  {\i correnteEficaz}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 69                                                   \{\par
70         this->correnteEficaz = correnteEficaz;\par
71     \}\par
}
}
{\xe \v setDestino\:Linha}
{\xe \v Linha\:setDestino}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setDestino (int  {\i destino}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 29                                  \{\par
30         this->destino = destino;\par
31     \}\par
}
}
{\xe \v setDhtPercent\:Linha}
{\xe \v Linha\:setDhtPercent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setDhtPercent (double  {\i dhtPercent}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 45                                           \{\par
46         this->dhtPercent = dhtPercent;\par
47     \}\par
}
}
{\xe \v setDti\:Linha}
{\xe \v Linha\:setDti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setDti (int  {\i key1}, double  {\i dAbsolut}, double  {\i dPercent}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 93                                                               \{\par
94         this->dti.insert(\{key1,\{dAbsolut,dPercent\}\});\par
95     \}\par
}
}
{\xe \v setLinhaInfectadaDht\:Linha}
{\xe \v Linha\:setLinhaInfectadaDht}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setLinhaInfectadaDht (bool  {\i infectada}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 85                                               \{\par
86         linhaInfectadaDht = infectada;\par
87     \}\par
}
}
{\xe \v setOrigem\:Linha}
{\xe \v Linha\:setOrigem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setOrigem (int  {\i origem}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                \{\par
22         this->origem = origem;\par
23     \}\par
}
}
{\xe \v setPerdas\:Linha}
{\xe \v Linha\:setPerdas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setPerdas (double  {\i perdas}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 61                                   \{\par
62         this->perdas = perdas;\par
63     \}\par
}
}
{\xe \v setPerdasEficaz\:Linha}
{\xe \v Linha\:setPerdasEficaz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setPerdasEficaz (double  {\i perdasEficaz}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 77                                               \{\par
78         this->perdasEficaz = perdasEficaz;\par
79     \}\par
}
}
{\xe \v setResistencia\:Linha}
{\xe \v Linha\:setResistencia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Linha::setResistencia (double  {\i resistencia}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53                                             \{\par
54         this->resistencia = resistencia;\par
55     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b Linha.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Main Class Reference\par \pard\plain 
{\tc\tcl2 \v Main}
{\xe \v Main}
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe principal do programa @reentrant Respons\'E1vel por iniciar o programa, iniciar um spash e o Frame {\b MainWindow}. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe principal do programa @reentrant Respons\'E1vel por iniciar o programa, iniciar um spash e o Frame {\b MainWindow}. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b main.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MainWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v MainWindow}
{\xe \v MainWindow}
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela Principal do Programa @reentrant Essa janela foi construida com 2 frames, um com o intuito de funcionar como uma barra de status do andamento da aplica\'E7\'E3o(tendo 4 labels como sinalizadores) e o outro possui componentes repons\'E1veis por receber endere\'E7o de arquivos que ser\'E3o utilizados nos proximos frames para trataemnto de dados. }}\par
{
{\f2 #include <mainwindow.h>}}\par
Inheritance diagram for MainWindow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_main_window.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getStatusDePreenchimento} (int posicao)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setStatusDePreenchimento} (int posicao, bool status)\par
}
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::MainWindow\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor da classe {\b MainWindow}\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{(Par\'E2metro do tipo QWidget que indica a interface pai da classe atual) \cell }
{\row }
}
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MainWindow} (QWidget *parent=nullptr)\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::~MainWindow\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor da classe {\b MainWindow} \par
}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~MainWindow} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereCssMainWindow()\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por chamar m\'E9todos que ir\'E3o inserir Qss na interface do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssMainWindow} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereIcon\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir o Icon do programa, diretamente do arquivo de recursos, al\'E9m de inserir o nome do programa\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereIcon} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssBarraDeStatus\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no frame da barra de status e seus labels, que correspondem em que frame a aplica\'E7\'E3o est\'E1 rodando.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBarraDeStatus} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssTitulosLineEdit\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no frame que recebe endere\'E7o dos arquivos e seus labels, que correspondem ao titulo de cada arquivo.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssTitulosLineEdit} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssLineEdit\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos LineEdits do frame que recebe endere\'E7o dos arquivos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssLineEdit} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssPlaceHolderLineEdit\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir PlaceHolder nos LineEdits do frame que recebe endere\'E7o dos arquivos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssPlaceHolderLineEdit} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssBtnArquivos\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss nos bot\'F5es de buscar endere\'E7o dos arquivos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnArquivos} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssBtnAvancar\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel pro inserir Qss no bot\'E3o de Avan\'E7ar. Insere Qss no bot\'E3o para iniciar com aspecto de bloqueado. Insere um icone dentro do bot\'E3o demonstrando tendencia de seguir em frente, esse icon fica \'E1 direita do texto do bot\'E3o Bot\'E3o inicia bloqueado, j\'E1 que s\'F3 ser\'E1 liberado com a inser\'E7\'E3o de todos os arquivos nos LineEdits\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnAvancar} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::insereQssBtnLixeira\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por inserir Qss no bot\'E3o de apagar dados j\'E1 inseridos no LineEdit. Nesse bot\'E3o h\'E1 a inser\'E7\'E3o de um icone de lixeira, al\'E9m do Qss para que seu fundo seja vermelho, indicando uma remo\'E7\'E3o. O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssBtnLixeira} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::setaFileNameNosArq\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
seta o FileName dos ponteiros dos arquivos com o que estiver escrito no lineEdit correpondente de cada um.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setaFileNameNosArq} ()\par
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid MainWindow::inicializaFrame\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Primeiro m\'E9todo a ser chamada no construtor, respons\'E1vel por chamar os m\'E9todos subsequ\'EAntes que modelam a Interface do frame\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inicializaFrame} ()\par
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b atualizarStatus} (Ui::MainWindow *ui)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoVsoln} = new QFile()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1veis est\'E1ticas respons\'E1veis por apontar para os arquivos que ser\'E3o inseridos. A classifica\'E7\'E3o de armazenamento dessas v\'E1riaveis foi definida como static pela necessidade dessa vari\'E1vel ser acessada em outros frames para abertura dos arquivos. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoIsoln} = new QFile()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoThdi} = new QFile()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoThdv} = new QFile()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoLdat} = new QFile()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QFile * {\b arquivoTensoes} = new QFile()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por apontar para o arquivo que armazenar\'E1 os valores das tens\'F5es nominais das barras do sistema el\'E9trico. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b frameAtual} =0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica em que frame a aplica\'E7\'E3o est\'E1 rodando. Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
MainWindow::verificarAvanco()\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por habilitar o bot\'E3o avan\'E7ar caso todos os LineEdits estejam preenchdiso\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b verificarAvanco} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
MainWindow::insereQssLblVerifica\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
M\'E9todo respons\'E1vel por garantir, que os labels respons\'E1veis por indicar que as etapas do Frame de status foram cumpridas, iniciem ocultos.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insereQssLblVerifica} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela Principal do Programa @reentrant Essa janela foi construida com 2 frames, um com o intuito de funcionar como uma barra de status do andamento da aplica\'E7\'E3o(tendo 4 labels como sinalizadores) e o outro possui componentes repons\'E1veis por receber endere\'E7o de arquivos que ser\'E3o utilizados nos proximos frames para trataemnto de dados. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MainWindow\:MainWindow}
{\xe \v MainWindow\:MainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MainWindow::MainWindow (QWidget *  {\i parent} = {\f2 nullptr})}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 51     : QMainWindow(parent)\par
52     , ui({\cf17 new} Ui::MainWindow)\par
53 \{\par
54     ui->setupUi({\cf17 this});\par
55     QCoreApplication::addLibraryPath({\cf22 "C:/Qt/6.5.0/mingw_64/plugins"});\par
56     inicializaFrame();\par
57 \par
58 \}\par
}
}
{\xe \v ~MainWindow\:MainWindow}
{\xe \v MainWindow\:~MainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MainWindow::~MainWindow ()}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65 \{\par
66     {\cf17 delete} ui;\par
67 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v atualizarStatus\:MainWindow}
{\xe \v MainWindow\:atualizarStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void MainWindow::atualizarStatus (Ui::MainWindow *  {\i ui}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                                  \{\par
25         Style style;\par
26         {\cf19 switch}(frameAtual)\{\par
27         {\cf19 case} 0:\par
28             ui->txtCarregarArquivos->setStyleSheet(style.cssTxtSelected);\par
29             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
30             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
31             ui->txtExportar->setStyleSheet(style.cssTxt);\par
32             ui->lblVerifica1->hide();\par
33             ui->lblVerifica2->hide();\par
34             ui->lblVerifica3->hide();\par
35             ui->lblVerifica4->hide();\par
36             {\cf19 break};\par
37         {\cf19 case} 1:\par
38             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
39             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxtSelected);\par
40             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
41             ui->txtExportar->setStyleSheet(style.cssTxt);\par
42             ui->lblVerifica1->show();\par
43             ui->lblVerifica2->hide();\par
44             ui->lblVerifica3->hide();\par
45             ui->lblVerifica4->hide();\par
46             {\cf19 break};\par
47         {\cf19 case} 2:\par
48             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
49             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
50             ui->txtPrepararSaida->setStyleSheet(style.cssTxtSelected);\par
51             ui->txtExportar->setStyleSheet(style.cssTxt);\par
52             ui->lblVerifica1->show();\par
53             ui->lblVerifica2->show();\par
54             ui->lblVerifica3->hide();\par
55             ui->lblVerifica4->hide();\par
56             {\cf19 break};\par
57         {\cf19 case} 3:\par
58             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
59             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
60             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
61             ui->txtExportar->setStyleSheet(style.cssTxtSelected);\par
62             ui->lblVerifica1->show();\par
63             ui->lblVerifica2->show();\par
64             ui->lblVerifica3->show();\par
65             ui->lblVerifica4->hide();\par
66             {\cf19 break};\par
67         \}\par
68     \}\par
}
}
{\xe \v getStatusDePreenchimento\:MainWindow}
{\xe \v MainWindow\:getStatusDePreenchimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MainWindow::getStatusDePreenchimento (int  {\i posicao}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 91                                               \{\par
92         {\cf19 if}(posicao < 5 && posicao >=0)\{\par
93             {\cf19 return} statusDePreenchimento[posicao];\par
94         \}\par
95         {\cf19 else}\{\par
96             {\cf19 return} {\cf17 false};\par
97         \}\par
98     \}\par
}
}
{\xe \v inicializaFrame\:MainWindow}
{\xe \v MainWindow\:inicializaFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::inicializaFrame ()}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 74                                 \{\par
75     insereQssMainWindow();\par
76 \}\par
}
}
{\xe \v insereIcon\:MainWindow}
{\xe \v MainWindow\:insereIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereIcon ()}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 100                            \{\par
101     setWindowIcon(QIcon({\cf22 ":/icons/imgs/icons/engrenagem.png"}));\par
102     setWindowTitle({\cf22 "EletricData 1.0"});\par
103 \}\par
}
}
{\xe \v insereQssBarraDeStatus\:MainWindow}
{\xe \v MainWindow\:insereQssBarraDeStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssBarraDeStatus ()}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 110                                        \{\par
111     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
112 \par
113     ui->txtCarregarArquivos->setStyleSheet(style.cssTxtSelected); {\cf20 //Insere Qss Selecionado no item da barra de Status ( 1. Carregar Arquivos)}\par
114     ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt); {\cf20 //Insere Qss no item da barra de Status ( 2. Tens\'F5es nas Barras)}\par
115     ui->txtPrepararSaida->setStyleSheet(style.cssTxt); {\cf20 //Insere Qss no item da barra de Status ( 3. Preparar Saida)}\par
116     ui->txtExportar->setStyleSheet(style.cssTxt); {\cf20 //Insere Qss  no item da barra de Status ( 4. Exportar)}\par
117     ui->statusFrame->setStyleSheet(style.cssStatusFrame); {\cf20 // Insere Qss no Frame da Barra de Status}\par
118 \}\par
}
}
{\xe \v insereQssBtnArquivos\:MainWindow}
{\xe \v MainWindow\:insereQssBtnArquivos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssBtnArquivos ()}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 176                                      \{\par
177     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
178 \par
179     ui->btnVsoln->setStyleSheet(style.cssBtn); {\cf20 //Insere Qss no Bot\'E3o de busca do arquivo Vsoln}\par
180     ui->btnThdv->setStyleSheet(style.cssBtn); {\cf20 //Insere Qss no Bot\'E3o de busca do arquivo Thdv}\par
181     ui->btnThdi->setStyleSheet(style.cssBtn); {\cf20 //Insere Qss no Bot\'E3o de busca do arquivo Thdi}\par
182     ui->btnIsoln->setStyleSheet(style.cssBtn); {\cf20 //Insere Qss no Bot\'E3o de busca do arquivo Isoln}\par
183     ui->btnLdat->setStyleSheet(style.cssBtn); {\cf20 //Insere Qss no Bot\'E3o de busca do arquivo Ldat}\par
184 \}\par
}
}
{\xe \v insereQssBtnAvancar\:MainWindow}
{\xe \v MainWindow\:insereQssBtnAvancar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssBtnAvancar ()}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 194                                     \{\par
195     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
196 \par
197     ui->btnAvancar->setStyleSheet(style.cssBtnTransition); {\cf20 // Inserindo Qss no bot\'E3o avan\'E7ar}\par
198     ui->btnAvancar->setIcon(QIcon({\cf22 ":/icons/imgs/icons/proximo.png"})); {\cf20 //Inser\'E7\'E3o do icon diretamente do arquivo de recursos}\par
199     ui->btnAvancar->setLayoutDirection(Qt::RightToLeft); {\cf20 // Icone \'E9 inserido a direita do texto}\par
200     ui->btnAvancar->setEnabled({\cf17 false}); {\cf20 // Bot\'E3o inicia desabilitado}\par
201 \}\par
}
}
{\xe \v insereQssBtnLixeira\:MainWindow}
{\xe \v MainWindow\:insereQssBtnLixeira}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssBtnLixeira ()}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 210                                     \{\par
211     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
212 \par
213     {\cf20 //Bot\'F5es de Checked e lixeira para cada arquivo}\par
214     ui->btnLixeiraVsoln->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"})); {\cf20 //Inser\'E7\'E3o do icon diretamente do arquivo de recursos}\par
215     ui->btnLixeiraVsoln->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
216     ui->btnLixeiraVsoln->hide();{\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit}\par
217 \par
218     ui->btnLixeiraThdv->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"}));\par
219     ui->btnLixeiraThdv->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
220     ui->btnLixeiraThdv->hide();{\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit}\par
221 \par
222     ui->btnLixeiraThdi->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"}));\par
223     ui->btnLixeiraThdi->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
224     ui->btnLixeiraThdi->hide();{\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit}\par
225 \par
226     ui->btnLixeiraIsoln->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"}));\par
227     ui->btnLixeiraIsoln->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
228     ui->btnLixeiraIsoln->hide();{\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit}\par
229 \par
230     ui->btnLixeiraLdat->setIcon(QIcon({\cf22 ":/icons/imgs/icons/lixeira.png"}));\par
231     ui->btnLixeiraLdat->setStyleSheet(style.cssBtnLixeira); {\cf20 // Inserindo Qss no bot\'E3o}\par
232     ui->btnLixeiraLdat->hide();{\cf20 //O bot\'E3o inicia escondido, para s\'F3 ser mostrado ap\'F3s ter algo inserido no LineEdit}\par
233 \}\par
}
}
{\xe \v insereQssLblVerifica\:MainWindow}
{\xe \v MainWindow\:insereQssLblVerifica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssLblVerifica ()}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 240                                      \{\par
241     {\cf20 //os labels de Checked iniciam escondidos j\'E1 que nada foi realizado ainda}\par
242     ui->lblVerifica1->hide();\par
243     ui->lblVerifica2->hide();\par
244     ui->lblVerifica3->hide();\par
245     ui->lblVerifica4->hide();\par
246 \}\par
}
}
{\xe \v insereQssLineEdit\:MainWindow}
{\xe \v MainWindow\:insereQssLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssLineEdit ()}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 141                                   \{\par
142     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
143 \par
144     ui->lineEditVsoln->setStyleSheet(style.cssLineEdit); {\cf20 //Insere Qss No LineEdit Vsoln}\par
145     ui->lineEditThdv->setStyleSheet(style.cssLineEdit); {\cf20 //Insere Qss No LineEdit Thdv}\par
146     ui->lineEditThdi->setStyleSheet(style.cssLineEdit); {\cf20 //Insere Qss No LineEdit Thdi}\par
147     ui->lineEditIsoln->setStyleSheet(style.cssLineEdit); {\cf20 //Insere Qss No LineEdit Isoln}\par
148     ui->lineEditLdat->setStyleSheet(style.cssLineEdit); {\cf20 //Insere Qss No LineEdit Ldat}\par
149     ui->lineEditVsoln->setEnabled({\cf17 false});   {\cf20 //Desativa altera\'E7\'E3o no lineEditVsoln para que s\'F3 possa ser alterado pela inser\'E7\'E3o de texto no bot\'E3o buscar}\par
150     ui->lineEditThdv->setEnabled({\cf17 false});    {\cf20 //Desativa altera\'E7\'E3o no lineEditThdv para que s\'F3 possa ser alterado pela inser\'E7\'E3o de texto no bot\'E3o buscar}\par
151     ui->lineEditThdi->setEnabled({\cf17 false});    {\cf20 //Desativa altera\'E7\'E3o no lineEditThdi para que s\'F3 possa ser alterado pela inser\'E7\'E3o de texto no bot\'E3o buscar}\par
152     ui->lineEditIsoln->setEnabled({\cf17 false});   {\cf20 //Desativa altera\'E7\'E3o no lineEditIsoln para que s\'F3 possa ser alterado pela inser\'E7\'E3o de texto no bot\'E3o buscar}\par
153     ui->lineEditLdat->setEnabled({\cf17 false});    {\cf20 //Desativa altera\'E7\'E3o no lineEditLdat para que s\'F3 possa ser alterado pela inser\'E7\'E3o de texto no bot\'E3o buscar}\par
154 \}\par
}
}
{\xe \v insereQssMainWindow\:MainWindow}
{\xe \v MainWindow\:insereQssMainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssMainWindow ()}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 83                                     \{\par
84     insereIcon();\par
85     insereQssBarraDeStatus();\par
86     insereQssTitulosLineEdit();\par
87     insereQssLineEdit();\par
88     insereQssPlaceHolderLineEdit();\par
89     insereQssBtnArquivos();\par
90     insereQssBtnAvancar();\par
91     insereQssBtnLixeira();\par
92     insereQssLblVerifica();\par
93 \}\par
}
}
{\xe \v insereQssPlaceHolderLineEdit\:MainWindow}
{\xe \v MainWindow\:insereQssPlaceHolderLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssPlaceHolderLineEdit ()}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 161                                              \{\par
162     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
163 \par
164     ui->lineEditVsoln->setPlaceholderText({\cf22 "Clique em buscar para inserir o caminho do arquivo"}); {\cf20 //Insere Place Holder no LineEdit do Vsoln}\par
165     ui->lineEditThdv->setPlaceholderText({\cf22 "Clique em buscar para inserir o caminho do arquivo"}); {\cf20 //Insere Place Holder no LineEdit do Thdv}\par
166     ui->lineEditThdi->setPlaceholderText({\cf22 "Clique em buscar para inserir o caminho do arquivo"}); {\cf20 //Insere Place Holder no LineEdit do Thdi}\par
167     ui->lineEditIsoln->setPlaceholderText({\cf22 "Clique em buscar para inserir o caminho do arquivo"}); {\cf20 //Insere Place Holder no LineEdit do Isoln}\par
168     ui->lineEditLdat->setPlaceholderText({\cf22 "Clique em buscar para inserir o caminho do arquivo"}); {\cf20 //Insere Place Holder no LineEdit do Ldat}\par
169 \}\par
}
}
{\xe \v insereQssTitulosLineEdit\:MainWindow}
{\xe \v MainWindow\:insereQssTitulosLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::insereQssTitulosLineEdit ()}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 125                                          \{\par
126     Style style; {\cf20 // Defini\'E7\'E3o da Classe Style para ser utilizada na fun\'E7\'E3o}\par
127 \par
128     ui->txtVsoln->setStyleSheet(style.cssTxtArquivos); {\cf20 // Insere Qss No titulo acima do LineEdit Vsoln}\par
129     ui->txtThdv->setStyleSheet(style.cssTxtArquivos); {\cf20 // Insere Qss No titulo acima do LineEdit Thdv}\par
130     ui->txtThdi->setStyleSheet(style.cssTxtArquivos); {\cf20 // Insere Qss No titulo acima do LineEdit Thdi}\par
131     ui->txtIsoln->setStyleSheet(style.cssTxtArquivos); {\cf20 // Insere Qss No titulo acima do LineEdit Isoln}\par
132     ui->txtLdat->setStyleSheet(style.cssTxtArquivos); {\cf20 // Insere Qss No titulo acima do LineEdit Ldat}\par
133     ui->frameArquivos->setStyleSheet(style.cssFrameArq); {\cf20 // Insere Qss no Frame da Barra Arquivos}\par
134 \}\par
}
}
{\xe \v setaFileNameNosArq\:MainWindow}
{\xe \v MainWindow\:setaFileNameNosArq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::setaFileNameNosArq ()}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 559                                    \{\par
560     arquivoVsoln->setFileName(ui->lineEditVsoln->text());   {\cf20 //seta FileName no arquivoVsoln}\par
561     arquivoThdi->setFileName(ui->lineEditThdi->text());     {\cf20 //seta FileName no arquivoThdi}\par
562     arquivoThdv->setFileName(ui->lineEditThdv->text());     {\cf20 //seta FileName no arquivoThdv}\par
563     arquivoIsoln->setFileName(ui->lineEditIsoln->text());   {\cf20 //seta FileName no arquivoIsoln}\par
564     arquivoLdat->setFileName(ui->lineEditLdat->text());     {\cf20 //seta FileName no arquivoLdat}\par
565 \}\par
}
}
{\xe \v setStatusDePreenchimento\:MainWindow}
{\xe \v MainWindow\:setStatusDePreenchimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::setStatusDePreenchimento (int  {\i posicao}, bool  {\i status}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 99                                                            \{\par
100         {\cf19 if}(posicao < 5 && posicao >=0)\{\par
101             statusDePreenchimento[posicao]=status;\par
102         \}\par
103     \}\par
}
}
{\xe \v verificarAvanco\:MainWindow}
{\xe \v MainWindow\:verificarAvanco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::verificarAvanco ()}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 396                                 \{\par
397 \par
398     {\cf19 for} ({\cf18 int} i = 0 ; i < 5; i++ ) \{\par
399         {\cf19 if}(!this->getStatusDePreenchimento(i))\{ {\cf20 // verifica se os status de preenchimento est\'E3o com valor true para cada arquivo}\par
400             {\cf19 return}; {\cf20 //caso algum estejam false, nada acontece}\par
401         \}\par
402     \}\par
403     ui->btnAvancar->setEnabled({\cf17 true}); {\cf20 // caso todos estejam 'true' , o bot\'E3o avan\'E7ar \'E9 habilitado}\par
404 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v arquivoIsoln\:MainWindow}
{\xe \v MainWindow\:arquivoIsoln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoIsoln = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v arquivoLdat\:MainWindow}
{\xe \v MainWindow\:arquivoLdat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoLdat = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v arquivoTensoes\:MainWindow}
{\xe \v MainWindow\:arquivoTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoTensoes = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica respons\'E1vel por apontar para o arquivo que armazenar\'E1 os valores das tens\'F5es nominais das barras do sistema el\'E9trico. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QFile* {\b MainWindow::arquivoTensoes} \par
}}
{\xe \v arquivoThdi\:MainWindow}
{\xe \v MainWindow\:arquivoThdi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoThdi = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v arquivoThdv\:MainWindow}
{\xe \v MainWindow\:arquivoThdv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoThdv = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v arquivoVsoln\:MainWindow}
{\xe \v MainWindow\:arquivoVsoln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFile * MainWindow::arquivoVsoln = new QFile(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1veis est\'E1ticas respons\'E1veis por apontar para os arquivos que ser\'E3o inseridos. A classifica\'E7\'E3o de armazenamento dessas v\'E1riaveis foi definida como static pela necessidade dessa vari\'E1vel ser acessada em outros frames para abertura dos arquivos. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QFile* {\b MainWindow::arquivoVsoln} @variable QFile* {\b MainWindow::arquivoIsoln} @variable QFile* {\b MainWindow::arquivoThdi} @variable QFile* {\b MainWindow::arquivoThdv} @variable QFile* {\b MainWindow::arquivoLdat} \par
}}
{\xe \v frameAtual\:MainWindow}
{\xe \v MainWindow\:frameAtual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MainWindow::frameAtual =0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vari\'E1vel est\'E1tica que identifica em que frame a aplica\'E7\'E3o est\'E1 rodando. Seu valor inicial \'E9 0. Sua classifica\'E7\'E3o de armazenamento foi definida como static pela necessidade dessa vari\'E1vel ser acessada e seu valor modificado ao longo de outros frames. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable int {\b MainWindow::frameAtual} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b mainwindow.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b frametensoes.cpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b mainwindow.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Style Class Reference\par \pard\plain 
{\tc\tcl2 \v Style}
{\xe \v Style}
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por armazenar as QString dos Qss a serem utilizados nas interfaces. }}\par
{
{\f2 #include <style.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b corPrimaria} ="#1E385B"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b corSecundaria} ="#D3D3D3"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b corHoverBtn} ="#325a8f"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b segundaOpcao} ="#c7db79"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b branco} ="#FFFFFF"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b corSelected} ="#63d6db"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssTxt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssTxtSelected}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssStatusFrame} ="background-color:"+{\b corPrimaria}+";"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssTxtArquivos}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssFrameArq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssLineEdit}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssLineEditDisabled}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssBtn}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssBtnTransition}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssBtnLixeira}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b csstabelaTensoes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssTabelaBarras}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssHeaderTabela}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssTabWidget}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssCheckbox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssComboBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssGroupBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssRadioButton}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b cssImgExportar} = "border-radius:30px;"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por armazenar as QString dos Qss a serem utilizados nas interfaces. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jo\'E3o Vitor N. Ramos \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v branco\:Style}
{\xe \v Style\:branco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::branco ="#FFFFFF"}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v corHoverBtn\:Style}
{\xe \v Style\:corHoverBtn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::corHoverBtn ="#325a8f"}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v corPrimaria\:Style}
{\xe \v Style\:corPrimaria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::corPrimaria ="#1E385B"}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v corSecundaria\:Style}
{\xe \v Style\:corSecundaria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::corSecundaria ="#D3D3D3"}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v corSelected\:Style}
{\xe \v Style\:corSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::corSelected ="#63d6db"}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cssBtn\:Style}
{\xe \v Style\:cssBtn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssBtn}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QPushButton\{"}\par
                         {\cf22 "border:2px solid "}+corPrimaria+{\cf22 ";"}\par
                         {\cf22 "font-family: 'Roboto';"}\par
                         {\cf22 "font-size:15px;"}\par
                         {\cf22 "background-color:"}+corPrimaria+{\cf22 ";"}\par
                         {\cf22 "color:white;"}\par
                         {\cf22 "border-radius:5px;\}"}\par
                    {\cf22 "QPushButton:hover\{"}\par
                         {\cf22 "border:2px solid "}+corHoverBtn+{\cf22 ";"}\par
                         {\cf22 "font-size:15px;"}\par
                         {\cf22 "font-weight:bold;"}\par
                         {\cf22 "color:white;"}\par
                         {\cf22 "background-color:"}+corHoverBtn+{\cf22 ";\}"}\par
                    {\cf22 "QPushButton:pressed\{"}\par
                        {\cf22 "background-color: #0D2C4D;"}\par
                        {\cf22 "color: #FFFFFF;\}"}\par
}
}
{\xe \v cssBtnLixeira\:Style}
{\xe \v Style\:cssBtnLixeira}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssBtnLixeira}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QPushButton\{"}\par
                                     {\cf22 "font-family: 'Roboto';"}\par
                                     {\cf22 "font-size:15px;"}\par
                                     {\cf22 "background-color:#8B0000;"}\par
                                     {\cf22 "color:white;"}\par
                                     {\cf22 "border-radius:5px;\}"}\par
                                     {\cf22 "QPushButton:hover\{"}\par
                                     {\cf22 "font-size:15px;"}\par
                                     {\cf22 "font-weight:bold;"}\par
                                     {\cf22 "color:white;"}\par
                                     {\cf22 "background-color:#B22222;\}"}\par
                                     {\cf22 "QPushButton:pressed\{"}\par
                                     {\cf22 "background-color: #CD5C5C;"}\par
                                     {\cf22 "color: #FFFFFF;\}"}\par
}
}
{\xe \v cssBtnTransition\:Style}
{\xe \v Style\:cssBtnTransition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssBtnTransition}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QPushButton\{"}\par
                                     {\cf22 "border:2px solid "}+corPrimaria+{\cf22 ";"}\par
                                     {\cf22 "font-family: 'Roboto';"}\par
                                     {\cf22 "font-size: 15px;"}\par
                                     {\cf22 "background-color:"}+corPrimaria+{\cf22 ";"}\par
                                     {\cf22 "color:white;"}\par
                                     {\cf22 "border-radius:5px;\}"}\par
                             {\cf22 "QPushButton:hover\{"}\par
                                     {\cf22 "border:2px solid "}+corHoverBtn+{\cf22 ";"}\par
                                     {\cf22 "font-size: 15px;"}\par
                                     {\cf22 "font-weight:bold;"}\par
                                     {\cf22 "color:white;"}\par
                                     {\cf22 "background-color:"}+corHoverBtn+{\cf22 ";\}"}\par
                             {\cf22 "QPushButton:pressed\{"}\par
                                     {\cf22 "background-color: #0D2C4D;"}\par
                                     {\cf22 "color: #FFFFFF;\}"}\par
                             {\cf22 "QPushButton:disabled\{"}\par
                                     {\cf22 "border:2px solid #808080;"}\par
                                     {\cf22 "background-color:#808080;\}"}\par
}
}
{\xe \v cssCheckbox\:Style}
{\xe \v Style\:cssCheckbox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssCheckbox}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "QCheckBox\{"}\par
                              {\cf22 "font-size:13px;"}\par
                              {\cf22 "font-weight:bold;"}\par
                              {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"}\par
                          {\cf22 "QCheckBox::indicator\{"}\par
                              {\cf22 "width: 30px;"}\par
                              {\cf22 "height: 30px;\}"}\par
}
}
{\xe \v cssComboBox\:Style}
{\xe \v Style\:cssComboBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssComboBox}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "QComboBox \{"}\par
                          {\cf22 "border-radius: 3px;"}\par
                          {\cf22 "border:1px solid"}+corPrimaria+{\cf22 ";"}\par
                          {\cf22 "color: #1E385B;"}\par
                          {\cf22 "background-color: #FFFFFF;"}\par
                          {\cf22 "\}"}\par
}
}
{\xe \v cssFrameArq\:Style}
{\xe \v Style\:cssFrameArq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssFrameArq}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QFrame\{"}\par
                          {\cf22 "background-color:"}+corSecundaria+{\cf22 ";\}"}\par
}
}
{\xe \v cssGroupBox\:Style}
{\xe \v Style\:cssGroupBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssGroupBox}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "QGroupBox \{"}\par
                          {\cf22 "font-size:15px;"}\par
                          {\cf22 "font-weight:bold;"}\par
                          {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"}\par
}
}
{\xe \v cssHeaderTabela\:Style}
{\xe \v Style\:cssHeaderTabela}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssHeaderTabela}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "font-family: 'Roboto';"}\par
                            {\cf22 "font-size:17px;"}\par
}
}
{\xe \v cssImgExportar\:Style}
{\xe \v Style\:cssImgExportar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssImgExportar = "border-radius:30px;"}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cssLineEdit\:Style}
{\xe \v Style\:cssLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssLineEdit}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QLineEdit\{"}\par
                            {\cf22 "background-color:"}+branco+{\cf22 ";"}\par
                            {\cf22 "font-size:12px;"}\par
                            {\cf22 "border-radius:3px;\}"}\par
                        {\cf22 "QLineEdit:hover\{"}\par
                            {\cf22 "font-size:20px;"}\par
                            {\cf22 "font-family: 'Roboto';"}\par
                                     {\cf22 "border: 2px solid"}+corPrimaria+{\cf22 ";\}"}\par
}
}
{\xe \v cssLineEditDisabled\:Style}
{\xe \v Style\:cssLineEditDisabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssLineEditDisabled}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "QLineEdit\{"}\par
                                  {\cf22 "background-color:"}+branco+{\cf22 ";"}\par
                                     {\cf22 "font-size:12px;"}\par
                                     {\cf22 "border-radius:3px;\}"}\par
                                 {\cf22 "QLineEdit:hover\{"}\par
                                     {\cf22 "font-size:20px;"}\par
                                     {\cf22 "font-family: 'Roboto';"}\par
                                     {\cf22 "border: 2px solid"}+corPrimaria+{\cf22 ";\}"}\par
                                  {\cf22 "QLineEdit:disabled\{"}\par
                                          {\cf22 "background-color:#808080;\}"}\par
}
}
{\xe \v cssRadioButton\:Style}
{\xe \v Style\:cssRadioButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssRadioButton}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "QRadioButton \{"}\par
                             {\cf22 "font-size:20px;"}\par
                             {\cf22 "font-family: 'Roboto';"}\par
                             {\cf22 "font-weight:bold;"}\par
                             {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"}\par
}
}
{\xe \v cssStatusFrame\:Style}
{\xe \v Style\:cssStatusFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssStatusFrame ="background-color:"+{\b corPrimaria}+";"}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cssTabelaBarras\:Style}
{\xe \v Style\:cssTabelaBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssTabelaBarras}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v csstabelaTensoes\:Style}
{\xe \v Style\:csstabelaTensoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::csstabelaTensoes}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cssTabWidget\:Style}
{\xe \v Style\:cssTabWidget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssTabWidget}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "QTabWidget::pane \{"}\par
                              {\cf22 "border: 2px solid "}+corPrimaria+{\cf22 ";"}\par
                              {\cf22 "border-radius:4px;"}\par
                              {\cf22 "\}"}\par
                              {\cf22 "QTabBar::tab \{"}\par
                               {\cf22 "border-radius:1px;"}\par
                              {\cf22 "background-color: #2E4E7E;"}\par
                              {\cf22 "color: #FFFFFF;"}\par
                              {\cf22 "font-weight: bold;"}\par
                               {\cf22 "min-width: 100px;"}\par
                               {\cf22 "min-height:20px;"}\par
                              {\cf22 "\}"}\par
                              {\cf22 "QTabBar::tab:selected \{"}\par
                              {\cf22 "background-color: #1E385B;"}\par
                              {\cf22 "\}"}\par
                              {\cf22 "QTabBar::tab:focus \{"}\par
                              {\cf22 "border: none;"}\par
                              {\cf22 "font-size: 15px;"}\par
                              {\cf22 "font-weight: 500;"}\par
                              {\cf22 "font-family: 'Roboto';"}\par
                              {\cf22 "color:branco;"}\par
                                         {\cf22 "\}"}\par
}
}
{\xe \v cssTxt\:Style}
{\xe \v Style\:cssTxt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssTxt}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "border:none;"}\par
                   {\cf22 "font-size:15px;"}\par
                   {\cf22 "font-weight:500;"}\par
                   {\cf22 "font-family: 'Roboto';"}\par
                   {\cf22 "color:"}+branco+{\cf22 ";"}\par
}
}
{\xe \v cssTxtArquivos\:Style}
{\xe \v Style\:cssTxtArquivos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssTxtArquivos}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ={\cf22 "border:none;"}\par
                            {\cf22 "font-size:15px;"}\par
                            {\cf22 "font-family: 'Roboto';"}\par
                            {\cf22 "font-style:italic;"}\par
                            {\cf22 "font-weight:600;"}\par
                            {\cf22 "color:"}+corPrimaria+{\cf22 ";"}\par
}
}
{\xe \v cssTxtSelected\:Style}
{\xe \v Style\:cssTxtSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::cssTxtSelected}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "font-size:17px;"}\par
                            {\cf22 "font-weight:bold;"}\par
                            {\cf22 "font-family: 'Roboto';"}\par
                            {\cf22 "color:"}+corSelected+{\cf22 ";"}\par
}
}
{\xe \v segundaOpcao\:Style}
{\xe \v Style\:segundaOpcao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Style::segundaOpcao ="#c7db79"}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/QT/EletricData/{\b style.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/animatedhoverbutton.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/animatedhoverbutton.cpp}
{\xe \v D:/QT/EletricData/animatedhoverbutton.cpp}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "AnimatedHoverButton.h"}\par
{\f2 #include <QVariantAnimation>}\par
{\f2 #include <QStyleOptionButton>}\par
{\f2 #include <QStylePainter>}\par
{\f2 #include <QEvent>}\par
{\f2 #include "style.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/AnimatedHoverButton.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/AnimatedHoverButton.h}
{\xe \v D:/QT/EletricData/AnimatedHoverButton.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QPushButton>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AnimatedHoverButton}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/AnimatedHoverButton.h\par \pard\plain 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
25 {\cf21 #ifndef ANIMATEDHOVERBUTTON_H}\par
26 {\cf21 #define ANIMATEDHOVERBUTTON_H}\par
27 \par
28 {\cf21 #include <QPushButton>}\par
29 \par
30 {\cf17 class }QVariantAnimation;\par
31 \par
32 {\cf17 class }AnimatedHoverButton : {\cf17 public} QPushButton\par
33 \{\par
34     Q_OBJECT\par
35 {\cf17 public}:\par
36     {\cf17 explicit} AnimatedHoverButton({\cf17 const} QString &text, QWidget *parent = {\cf17 nullptr});\par
37 \par
38     {\cf18 void} setTransitionDuration({\cf18 int} duration);\par
39     {\cf18 bool} event(QEvent *event) {\cf17 override};\par
40 \par
41 {\cf17 protected}:\par
42     {\cf18 void} paintEvent(QPaintEvent *) {\cf17 override};\par
43 \par
44 {\cf17 private}:\par
45     {\cf18 void} animateHover({\cf18 bool} in);\par
46 \par
47     QVariantAnimation *m_transition;\par
48     {\cf18 int} m_duration;\par
49     QColor m_currentColor;\par
50 \};\par
51 \par
52 {\cf21 #endif }{\cf20 // ANIMATEDHOVERBUTTON_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/Barra.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/Barra.h}
{\xe \v D:/QT/EletricData/Barra.h}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QObject>}\par
{\f2 #include <utility>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Barra}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por armazenar os dados das barras. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/Barra.h\par \pard\plain 
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef BARRA_H}\par
2 {\cf21 #define BARRA_H}\par
3 \par
10 {\cf21 #include <QObject>}\par
11 {\cf21 #include <utility>}\par
12 \par
13 {\cf17 class }Barra \{\par
14 {\cf17 public}:\par
15     {\cf18 double} getTensaoPu()  \{\par
16         {\cf19 return} tensaoPu;\par
17     \}\par
18 \par
19     {\cf18 void} setTensaoPu({\cf18 double} value) \{\par
20         tensaoPu = value;\par
21     \}\par
22 \par
23     {\cf18 double} getTensaoNominalKv()  \{\par
24         {\cf19 return} tensaoNominalKv;\par
25     \}\par
26 \par
27     {\cf18 void} setTensaoNominalKv({\cf18 double} value) \{\par
28         tensaoNominalKv = value;\par
29     \}\par
30 \par
31     {\cf18 double} getThdvPercent()  \{\par
32         {\cf19 return} thdvPercent;\par
33     \}\par
34 \par
35     {\cf18 void} setThdvPercent({\cf18 double} value) \{\par
36         thdvPercent = value;\par
37     \}\par
38 \par
39     std::map<int, std::pair<std::pair<double, double>, std::pair<int, bool>>> getDti()\{\par
40         {\cf19 return} dti;\par
41     \}\par
42 \par
43     {\cf18 void} somatorioHarmonico({\cf18 int} key1, {\cf18 double} dAbsolut ,  {\cf18 double} dPercent,{\cf18 int} classeTensaoThdi ,{\cf18 bool} poluida ) \{\par
44         this->dti.insert(\{key1,\{\{dAbsolut,dPercent\},\{classeTensaoThdi,poluida\}\}\});\par
45     \}\par
46 \par
47     {\cf18 double} getTensaoEficaz() \{\par
48         {\cf19 return} tensaoEficaz;\par
49     \}\par
50 \par
51     {\cf18 void} setTensaoEficaz({\cf18 double} value) \{\par
52         tensaoEficaz = value;\par
53     \}\par
54 \par
55     {\cf18 int} getClasseTensaoThdv()\{\par
56         {\cf19 return} classeTensaoThdv;\par
57     \}\par
58 \par
59     {\cf18 void} setClasseTensaoThdv({\cf18 int} value)\{\par
60         classeTensaoThdv= value;\par
61     \}\par
62 \par
63     {\cf18 bool} getBarraInfectadaThdv()\{\par
64         {\cf19 return} barraInfectadaThdv;\par
65     \}\par
66 \par
67     {\cf18 void} setbarraInfectadaThdv({\cf18 bool} value)\{\par
68         barraInfectadaThdv = value;\par
69     \}\par
70 \par
71 \par
72 \par
73 \par
74 \par
75 {\cf17 private}:\par
76     {\cf18 double} tensaoPu;\par
77     {\cf18 double} tensaoNominalKv;\par
78     {\cf18 double} thdvPercent;\par
79     {\cf18 double} tensaoEficaz;\par
80     std::map<int, std::pair<std::pair<double, double>, std::pair<int, bool>>> dti;\par
81     {\cf18 int} classeTensaoThdv;\par
82     {\cf18 bool} barraInfectadaThdv;\par
83 \par
84 \par
85 \};\par
86 \par
87 {\cf21 #endif }{\cf20 // BARRA_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarcsv.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/exportarcsv.cpp}
{\xe \v D:/QT/EletricData/exportarcsv.cpp}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "exportarcsv.h"}\par
{\f2 #include "filtrolinha.h"}\par
{\f2 #include "filtrosbarra.h"}\par
{\f2 #include "framebarras.h"}\par
{\f2 #include <QFileDialog>}\par
{\f2 #include <QMessageBox>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b parentExportarCsv}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v parentExportarCsv\:exportarcsv.cpp}
{\xe \v exportarcsv.cpp\:parentExportarCsv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget* parentExportarCsv}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QWidget *parentExportarCsv; \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarcsv.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/exportarcsv.h}
{\xe \v D:/QT/EletricData/exportarcsv.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QFile>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExportarCsv}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para csv Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarcsv.h\par \pard\plain 
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef EXPORTARCSV_H}\par
3 {\cf21 #define EXPORTARCSV_H}\par
4 \par
5 {\cf21 #include <QFile>}\par
6 \par
7 \par
8 {\cf17 class }ExportarCsv\par
9 \{\par
10 {\cf17 public}:\par
11     ExportarCsv(QWidget *parent = {\cf17 nullptr});\par
12 \par
13     {\cf20 //----------fun\'E7\'F5es CSV}\par
14     {\cf20 //Fun\'E7\'F5es para imprimir csv com barras em intervalo}\par
15     {\cf18 void} CsvInterBarrasInterL1InterL2();\par
16     {\cf18 void} CsvInterBarrasInterL1TodL2();\par
17     {\cf18 void} CsvInterBarrasTodL1InterL2();\par
18     {\cf18 void} CsvInterBarrasTodL1TodL2();\par
19     {\cf20 //Fun\'E7\'F5es para imprimir csv com barras em componentes}\par
20     {\cf18 void} CsvCompBarrasInterL1InterL2();\par
21     {\cf18 void} CsvCompBarrasInterL1TodL2();\par
22     {\cf18 void} CsvCompBarrasTodL1InterL2();\par
23     {\cf18 void} CsvCompBarrasaTodL1TodL2();\par
24     {\cf20 //Fun\'E7\'F5es de para imprimir csv com barras infectadas}\par
25     {\cf18 void} CsvInfecBarrasInterL1InterL2();\par
26     {\cf18 void} CsvInfecBarrasInterL1TodL2();\par
27     {\cf18 void} CsvInfecBarrasTodL1InterL2();\par
28     {\cf18 void} CsvInfecBarrasTodL1TodL2();\par
29 \par
30     {\cf20 //Fun\'E7\'F5es Auxiliares}\par
31     {\cf20 //Cria arquivo}\par
32     QFile* criaArquivo();\par
33 \par
34     {\cf20 //escreve as barras em intervalo}\par
35     {\cf18 void} CsvEscreveBarrasIntervalo(QTextStream* );\par
36     {\cf20 //escreve as barras em componentes}\par
37     {\cf18 void} CsvEscreveBarrasComp(QTextStream* );\par
38     {\cf20 //escreve as barras Infectadas}\par
39     {\cf18 void} CsvEscreveBarrasInfec(QTextStream* );\par
40     {\cf20 //escreve Linhas com origens e destinos em estado de componentes}\par
41     {\cf18 void} CsvEscreveLInterL1InterL2(QTextStream* );\par
42     {\cf20 //escreve Linhas com origens em estado de componentes e todos destinos}\par
43     {\cf18 void} CsvEscreveLInterL1TodL2(QTextStream* );\par
44     {\cf20 //escreve Linhas com todas origens e destinos em componenetes}\par
45     {\cf18 void} CsvEscreveLTodL1InterL2(QTextStream* );\par
46     {\cf20 //escreve Linhas de todas origens e destinos}\par
47     {\cf18 void} CsvEscreveLTodL1TodL2(QTextStream* );\par
48 \};\par
49 \par
50 {\cf21 #endif }{\cf20 // EXPORTARCSV_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarexcel.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/exportarexcel.cpp}
{\xe \v D:/QT/EletricData/exportarexcel.cpp}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "exportarexcel.h"}\par
{\f2 #include "filtrolinha.h"}\par
{\f2 #include "filtrosbarra.h"}\par
{\f2 #include "framebarras.h"}\par
{\f2 #include <QMessageBox>}\par
{\f2 #include <QDir>}\par
{\f2 #include <QFileDialog>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b parentExportarExcel}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v parentExportarExcel\:exportarexcel.cpp}
{\xe \v exportarexcel.cpp\:parentExportarExcel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget* parentExportarExcel}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QWidget *parentExportarExcel; \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarexcel.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/exportarexcel.h}
{\xe \v D:/QT/EletricData/exportarexcel.h}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "xlsxdocument.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExportarExcel}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para csv Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarexcel.h\par \pard\plain 
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef EXPORTAREXCEL_H}\par
3 {\cf21 #define EXPORTAREXCEL_H}\par
4 \par
5 {\cf21 #include "xlsxdocument.h"}\par
6 \par
7 {\cf17 using namespace }QXlsx;\par
8 \par
9 \par
10 {\cf17 class }ExportarExcel\par
11 \{\par
12 {\cf17 public}:\par
13     {\cf17 explicit} ExportarExcel(QWidget *parent = {\cf17 nullptr});\par
14 \par
15     {\cf20 //----------Fun\'E7\'F5es Excel}\par
16     {\cf20 //Fun\'E7\'F5es para imprimir excel com barras em intervalo}\par
17     {\cf18 void} ExcelInterBInterL1InterL2();\par
18     {\cf18 void} ExcelInterBInterL1TodL2();\par
19     {\cf18 void} ExcelInterBarrasTodL1InterL2();\par
20     {\cf18 void} ExcelInterBarrasTodL1TodL2();\par
21     {\cf20 //Fun\'E7\'F5es para imprimir Excel com barras em componentes}\par
22     {\cf18 void} ExcelCompBarrasInterL1InterL2();\par
23     {\cf18 void} ExcelCompBarrasInterL1TodL2();\par
24     {\cf18 void} ExcelCompBarrasTodL1InterL2();\par
25     {\cf18 void} ExcelCompBarrasaTodL1TodL2();\par
26     {\cf20 //Fun\'E7\'F5es de para imprimir Excel com barras infectadas}\par
27     {\cf18 void} ExcelInfecBarrasInterL1InterL2();\par
28     {\cf18 void} ExcelInfecBarrasInterL1TodL2();\par
29     {\cf18 void} ExcelInfecBarrasTodL1InterL2();\par
30     {\cf18 void} ExcelInfecBarrasTodL1TodL2();\par
31 \par
32 \par
33     {\cf20 //Fun\'E7\'F5es Auxiliares}\par
34     QString numeroParaLetra({\cf18 int} numero);\par
35     {\cf20 //Cria planilha}\par
36     QXlsx::Document* criaPlanilha();\par
37     {\cf20 //pula linhas entre barras e Linhas}\par
38     {\cf18 void} ExcelPulaLinha({\cf18 int}* );\par
39     {\cf20 //Salva Planilha}\par
40     {\cf18 void} salvaPlanilha(QXlsx::Document* );\par
41 \par
42 \par
43     {\cf20 //escreve as barras em intervalo}\par
44     {\cf18 void} ExcelEscreveBarrasIntervalo(QXlsx::Document* , {\cf18 int}* );\par
45     {\cf20 //escreve as barras em componentes}\par
46     {\cf18 void} ExcelEscreveBarrasComp(QXlsx::Document* , {\cf18 int}*  );\par
47     {\cf20 //escreve as barras Infectadas}\par
48     {\cf18 void} ExcelEscreveBarrasInfec(QXlsx::Document* , {\cf18 int}* );\par
49     {\cf20 //escreve Linhas com origens e destinos em estado de componentes}\par
50     {\cf18 void} ExcelEscreveLInterL1InterL2(QXlsx::Document* , {\cf18 int}* );\par
51     {\cf20 //escreve Linhas com origens em estado de componentes e todos destinos}\par
52     {\cf18 void} ExcelEscreveLInterL1TodL2(QXlsx::Document*, {\cf18 int}*  );\par
53     {\cf20 //escreve Linhas com todas origens e destinos em componenetes}\par
54     {\cf18 void} ExcelEscreveLTodL1InterL2(QXlsx::Document* , {\cf18 int}* );\par
55     {\cf20 //escreve Linhas de todas origens e destinos}\par
56     {\cf18 void} ExcelEscreveLTodL1TodL2(QXlsx::Document*, {\cf18 int}* );\par
57 \par
58 \};\par
59 \par
60 {\cf21 #endif }{\cf20 // EXPORTAREXCEL_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarpdf.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/exportarpdf.cpp}
{\xe \v D:/QT/EletricData/exportarpdf.cpp}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "exportarpdf.h"}\par
{\f2 #include "framebarras.h"}\par
{\f2 #include <QMessageBox>}\par
{\f2 #include <QDir>}\par
{\f2 #include <QDesktopServices>}\par
{\f2 #include <QFileDialog>}\par
{\f2 #include <QDebug>}\par
{\f2 #include <QFont>}\par
{\f2 #include <QUrl>}\par
{\f2 #include <QFontMetrics>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b parenteExportarPdf}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v parenteExportarPdf\:exportarpdf.cpp}
{\xe \v exportarpdf.cpp\:parenteExportarPdf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget* parenteExportarPdf}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QWidget *parenteExportarPdf; \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarpdf.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/exportarpdf.h}
{\xe \v D:/QT/EletricData/exportarpdf.h}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QPdfWriter>}\par
{\f2 #include <QPrinter>}\par
{\f2 #include <QPainter>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExportarPdf}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por realizar as exporta\'E7\'F5es para pdf Classe sem atributos. Utilizada para realiza\'E7\'E3o de m\'E9todos. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/exportarpdf.h\par \pard\plain 
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef EXPORTARPDF_H}\par
3 {\cf21 #define EXPORTARPDF_H}\par
4 \par
5 {\cf21 #include <QPdfWriter>}\par
6 {\cf21 #include <QPrinter>}\par
7 {\cf21 #include<QPainter>}\par
8 \par
9 \par
10 {\cf17 class }ExportarPdf\par
11 \{\par
12 {\cf17 public}:\par
13     {\cf17 explicit} ExportarPdf(QWidget *parent = {\cf17 nullptr});\par
14 \par
15     {\cf20 //----------Fun\'E7\'F5es PDF}\par
16     {\cf20 //Fun\'E7\'F5es para imprimir PDF com barras em intervalo}\par
17     {\cf18 void} PdfInterBInterL1InterL2();\par
18     {\cf18 void} PdfInterBInterL1TodL2();\par
19     {\cf18 void} PdfInterBarrasTodL1InterL2();\par
20     {\cf18 void} PdfInterBarrasTodL1TodL2();\par
21     {\cf20 //Fun\'E7\'F5es para imprimir PDF com barras em componentes}\par
22     {\cf18 void} PdfCompBarrasInterL1InterL2();\par
23     {\cf18 void} PdfCompBarrasInterL1TodL2();\par
24     {\cf18 void} PdfCompBarrasTodL1InterL2();\par
25     {\cf18 void} PdfCompBarrasaTodL1TodL2();\par
26     {\cf20 //Fun\'E7\'F5es de para imprimir PDF com barras infectadas}\par
27     {\cf18 void} PdfInfecBarrasInterL1InterL2();\par
28     {\cf18 void} PdfInfecBarrasInterL1TodL2();\par
29     {\cf18 void} PdfInfecBarrasTodL1InterL2();\par
30     {\cf18 void} PdfInfecBarrasTodL1TodL2();\par
31     {\cf20 //Fun\'E7\'F5es Auxiliares}\par
32     {\cf20 //Fun\'E7\'F5es os conteudos com barras em intervalo}\par
33     {\cf18 void} ContInterBInterL1InterL2(QPrinter* );\par
34     {\cf18 void} ContInterBInterL1TodL2(QPrinter* );\par
35     {\cf18 void} ContInterBarrasTodL1InterL2(QPrinter* );\par
36     {\cf18 void} ContInterBarrasTodL1TodL2(QPrinter* );\par
37     {\cf20 //Fun\'E7\'F5es para imprimir PDF com barras em componentes}\par
38     {\cf18 void} ContCompBarrasInterL1InterL2(QPrinter* );\par
39     {\cf18 void} ContCompBarrasInterL1TodL2(QPrinter* );\par
40     {\cf18 void} ContCompBarrasTodL1InterL2(QPrinter* );\par
41     {\cf18 void} ContCompBarrasaTodL1TodL2(QPrinter* );\par
42     {\cf20 //Fun\'E7\'F5es de para imprimir PDF com barras infectadas}\par
43     {\cf18 void} ContInfecBarrasInterL1InterL2(QPrinter* );\par
44     {\cf18 void} ContInfecBarrasInterL1TodL2(QPrinter* );\par
45     {\cf18 void} ContInfecBarrasTodL1InterL2(QPrinter* );\par
46     {\cf18 void} ContInfecBarrasTodL1TodL2(QPrinter* );\par
47 \par
48 \par
49     {\cf20 //cacula quantidade de linhas que uma barra ir\'E1 ocupar no sistema}\par
50     {\cf18 int}  QtdLinhasInfoBarra();\par
51     {\cf18 int}  QtdLinhasInfoLinha();\par
52 \};\par
53 \par
54 {\cf21 #endif }{\cf20 // EXPORTARPDF_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/filtrolinha.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/filtrolinha.cpp}
{\xe \v D:/QT/EletricData/filtrolinha.cpp}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "filtrolinha.h"}\par
{\f2 #include "ui_filtrolinha.h"}\par
{\f2 #include "style.h"}\par
{\f2 #include "framebarras.h"}\par
{\f2 #include <QMessageBox>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::FrameBarras * {\b frameBarras2}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameBarras}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v frameBarras2\:filtrolinha.cpp}
{\xe \v filtrolinha.cpp\:frameBarras2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::FrameBarras* frameBarras2}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameBarras}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable Ui::FrameBarras *frameBarras2 \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/filtrolinha.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/filtrolinha.h}
{\xe \v D:/QT/EletricData/filtrolinha.h}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QDialog>}\par
{\f2 #include "ui_filtrolinha.h"}\par
{\f2 #include "ui_framebarras.h"}\par
{\f2 #include "mainwindow.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FiltroLinha}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableLinhas do {\b FrameBarras}. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/filtrolinha.h\par \pard\plain 
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FILTROLINHA_H}\par
2 {\cf21 #define FILTROLINHA_H}\par
3 \par
4 {\cf21 #include <QDialog>}\par
5 {\cf21 #include "ui_filtrolinha.h"}\par
6 {\cf21 #include "ui_framebarras.h"}\par
7 {\cf21 #include "mainwindow.h"}\par
8 {\cf17 namespace }Ui \{\par
9 {\cf17 class }FiltroLinha;\par
10 \}\par
11 \par
12 {\cf17 class }FiltroLinha : {\cf17 public} QDialog\par
13 \{\par
14     Q_OBJECT\par
15 \par
16 {\cf17 public}:\par
17     {\cf17 explicit} FiltroLinha(QWidget *parent = {\cf17 nullptr}, Ui::FrameBarras *fb={\cf17 nullptr});\par
18     ~FiltroLinha();\par
19     {\cf17 static} {\cf18 bool} correntePu;\par
20     {\cf17 static} {\cf18 bool} dht;\par
21     {\cf17 static} {\cf18 bool} dit;\par
22     {\cf17 static} {\cf18 bool} ditPercent;\par
23     {\cf17 static} {\cf18 bool} correnteEficaz;\par
24     {\cf17 static} {\cf18 bool} resistencia;\par
25     {\cf17 static} {\cf18 bool} perdas;\par
26     {\cf17 static} {\cf18 bool} perdasEficaz;\par
27     {\cf17 static} {\cf18 int} indexComboBoxOrigem;\par
28     {\cf17 static} {\cf18 int} indexComboBoxDestino;\par
29     {\cf17 static} {\cf18 int} indexComboBoxOrigemEnvio;\par
30     {\cf17 static} {\cf18 int} indexComboBoxDestinoEnvio;\par
31 \par
32     {\cf18 void} inserindoQssFiltrosLinha();\par
33     {\cf18 void} inserindoQssCheckBox();\par
34     {\cf18 void} inserindoQssLineEdit();\par
35     {\cf18 void} inserindoQssBtnAplicar();\par
36     {\cf18 void} inserindoQssComboBox();\par
37     {\cf18 void} inserindoQssGroupBox();\par
38     {\cf18 void} inserindoQssJanela();\par
39     {\cf18 void} inicializandoFrame();\par
40     {\cf17 static} QStringList indiceOrigensEscolhidas;\par
41     {\cf17 static} QStringList indiceDestinosEscolhidos;\par
42 \par
43     {\cf18 void} atualizaVariaveis();\par
44     {\cf18 void} filtrarLinhasTabela();\par
45     {\cf18 void} filtrarColunasTabela();\par
46     {\cf18 void} filtrarColTod1Tod2();\par
47     {\cf18 void} filtrarColTod1Ind2();\par
48     {\cf18 void} filtrarColInd1Tod2();\par
49     {\cf18 void} filtrarColInd1Ind2();\par
50 \par
51 \par
52 \par
53 {\cf17 private} slots:\par
54 \par
55     {\cf18 void} on_comboBoxOrigem_currentIndexChanged({\cf18 int} index);\par
56 \par
57     {\cf18 void} on_comboBoxDestino_currentIndexChanged({\cf18 int} index);\par
58 \par
59     {\cf18 void} on_btnAplicar_clicked();\par
60 \par
61 {\cf17 private}:\par
62     Ui::FiltroLinha *ui;\par
63 \};\par
64 \par
65 {\cf21 #endif }{\cf20 // FILTROLINHA_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/filtrosbarra.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/filtrosbarra.cpp}
{\xe \v D:/QT/EletricData/filtrosbarra.cpp}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "filtrosbarra.h"}\par
{\f2 #include "ui_filtrosbarra.h"}\par
{\f2 #include "style.h"}\par
{\f2 #include "framebarras.h"}\par
{\f2 #include <QMessageBox>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::FrameBarras * {\b frameBarras}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameBarras}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v frameBarras\:filtrosbarra.cpp}
{\xe \v filtrosbarra.cpp\:frameBarras}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::FrameBarras* frameBarras}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameBarras}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable Ui::FrameBarras *frameBarras \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/filtrosbarra.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/filtrosbarra.h}
{\xe \v D:/QT/EletricData/filtrosbarra.h}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QDialog>}\par
{\f2 #include "ui_filtrosbarra.h"}\par
{\f2 #include "ui_framebarras.h"}\par
{\f2 #include "mainwindow.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FiltrosBarra}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela inser\'E7\'E3o dos filtros do TableBarras do {\b FrameBarras}. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/filtrosbarra.h\par \pard\plain 
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FILTROSBARRA_H}\par
2 {\cf21 #define FILTROSBARRA_H}\par
3 \par
4 {\cf21 #include <QDialog>}\par
5 {\cf21 #include "ui_filtrosbarra.h"}\par
6 {\cf21 #include "ui_framebarras.h"}\par
7 {\cf21 #include "mainwindow.h"}\par
8 \par
9 {\cf17 namespace }Ui \{\par
10 {\cf17 class }FiltrosBarra;\par
11 \}\par
12 \par
13 {\cf17 class }FiltrosBarra : {\cf17 public} QDialog\par
14 \{\par
15     Q_OBJECT\par
16 \par
17 {\cf17 public}:\par
18     {\cf17 explicit} FiltrosBarra(QWidget *parent = {\cf17 nullptr} , Ui::FrameBarras *fb={\cf17 nullptr});\par
19     ~FiltrosBarra();\par
20     Ui::FiltrosBarra* getUi()\{\par
21         {\cf19 return} ui;\par
22     \}\par
23     {\cf17 static} {\cf18 bool} tensaoPu;\par
24     {\cf17 static} {\cf18 bool} tensaoNominal;\par
25     {\cf17 static} {\cf18 bool} thdv;\par
26     {\cf17 static} {\cf18 bool} dit;\par
27     {\cf17 static} {\cf18 bool} ditPercent;\par
28     {\cf17 static} {\cf18 bool} tensaoEficaz;\par
29     {\cf17 static} {\cf18 int} indexComboBox;\par
30     {\cf17 static} {\cf18 int} indexComboBoxEnvio;\par
31     {\cf17 static} QStringList indiceBarrasEscolhidas;\par
32     {\cf18 void} inserindoQssFiltrosBarra();\par
33     {\cf18 void} inserindoQssCheckBox();\par
34     {\cf18 void} inserindoQssLineEdit();\par
35     {\cf18 void} inserindoQssBtnAplicar();\par
36     {\cf18 void} inserindoQssComboBox();\par
37     {\cf18 void} inserindoQssGroupBox();\par
38     {\cf18 void} inserindoQssJanela();\par
39     {\cf18 void} inicializandoFrame();\par
40 \par
41     {\cf18 void} atualizaVariaveis();\par
42     {\cf18 void} filtrarLinhasTabela();\par
43     {\cf18 void} filtrarColunasTabela();\par
44     {\cf18 void} filtrarColunasPorIndices();\par
45     {\cf18 void} filtrarColunasPorFaixa();\par
46     {\cf18 void} filtrarColunasPorMarcadores();\par
47 \par
48 {\cf17 private} slots:\par
49     {\cf18 void} on_comboBoxFBarra_currentIndexChanged({\cf18 int} index);\par
50 \par
51     {\cf18 void} on_btnAplicar_clicked();\par
52 \par
53 {\cf17 private}:\par
54     Ui::FiltrosBarra *ui;\par
55 \};\par
56 \par
57 {\cf21 #endif }{\cf20 // FILTROSBARRA_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/framebarras.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/framebarras.cpp}
{\xe \v D:/QT/EletricData/framebarras.cpp}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "framebarras.h"}\par
{\f2 #include "ui_framebarras.h"}\par
{\f2 #include "style.h"}\par
{\f2 #include <QMessageBox>}\par
{\f2 #include <QDebug>}\par
{\f2 #include <QCoreApplication>}\par
{\f2 #include <QtMath>}\par
{\f2 #include "frameexportar.h"}\par
{\f2 #include "frametensoes.h"}\par
{\f2 #include "Barra.h"}\par
{\f2 #include "mainwindow.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::FrameTensoes * {\b frameT}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameTensoes}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::MainWindow * {\b frameM}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b MainWindow}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b p}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v frameM\:framebarras.cpp}
{\xe \v framebarras.cpp\:frameM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::MainWindow* frameM}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b MainWindow}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable Ui::MainWindow *frameM \par
}}
{\xe \v frameT\:framebarras.cpp}
{\xe \v framebarras.cpp\:frameT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::FrameTensoes* frameT}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameTensoes}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable Ui::FrameTensoes *frameT \par
}}
{\xe \v p\:framebarras.cpp}
{\xe \v framebarras.cpp\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget* p}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QWidget *p; \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/framebarras.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/framebarras.h}
{\xe \v D:/QT/EletricData/framebarras.h}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QFrame>}\par
{\f2 #include "ui_frametensoes.h"}\par
{\f2 #include "ui_mainwindow.h"}\par
{\f2 #include "mainwindow.h"}\par
{\f2 #include "frametensoes.h"}\par
{\f2 #include "filtrosbarra.h"}\par
{\f2 #include "ui_filtrosbarra.h"}\par
{\f2 #include "filtrolinha.h"}\par
{\f2 #include "ui_filtrolinha.h"}\par
{\f2 #include "Barra.h"}\par
{\f2 #include "Linha.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FrameBarras}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pelo armazenamento dos dados em nos atributos da classes {\b Barra} e {\b Linha}. Al\'E9m de etregar ao us\'FAario uma TabWidget amig\'E1vel, para que possa filtrar os dados que quiser para realizar sua an\'E1lise. @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/framebarras.h\par \pard\plain 
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FRAMEBARRAS_H}\par
2 {\cf21 #define FRAMEBARRAS_H}\par
3 \par
4 {\cf21 #include <QFrame>}\par
5 {\cf21 #include "ui_frametensoes.h"}\par
6 {\cf21 #include "ui_mainwindow.h"}\par
7 {\cf21 #include "mainwindow.h"}\par
8 {\cf21 #include "frametensoes.h"}\par
9 {\cf21 #include "filtrosbarra.h"}\par
10 {\cf21 #include "ui_filtrosbarra.h"}\par
11 {\cf21 #include "filtrolinha.h"}\par
12 {\cf21 #include "ui_filtrolinha.h"}\par
13 {\cf21 #include "Barra.h"}\par
14 {\cf21 #include "Linha.h"}\par
15 \par
16 {\cf17 namespace }Ui \{\par
17 {\cf17 class }FrameBarras;\par
18 \}\par
19 \par
20 {\cf17 class }FrameBarras : {\cf17 public} QFrame\par
21 \{\par
22     Q_OBJECT\par
23 \par
24 {\cf17 public}:\par
25     {\cf17 explicit} FrameBarras(QWidget *parent = {\cf17 nullptr}, Ui::MainWindow *mw={\cf17 nullptr},Ui::FrameTensoes *ft={\cf17 nullptr});\par
26     ~FrameBarras();\par
27     {\cf18 int} buscaIndiceHarmMax();\par
28     {\cf17 inline} {\cf18 int} buscaQtdHarm({\cf18 int} );\par
29     {\cf17 static} {\cf18 int} indexTab;\par
30     {\cf17 static} {\cf18 int} indiceHarmMax;\par
31     {\cf17 static} {\cf18 int} numeroDeLinhas;\par
32     {\cf17 static} {\cf18 int} quantidadeDeComponentesHarm;\par
33     {\cf18 void} preencheFrameBarras();\par
34     {\cf18 void} inicializaVariaveisStatic();\par
35     {\cf18 void} inicializaFrame();\par
36     QStringList cabecalhoBarras();\par
37     QStringList cabecalhoLinhas();\par
38     {\cf18 void} preencheBarra();\par
39     {\cf18 void} inicializaBarra();\par
40     QStringList linhasDoSistema();\par
41     {\cf17 inline} {\cf18 double} potencia({\cf18 double} , {\cf18 int} );\par
42     {\cf18 void} insereQssBtnAvancar();\par
43     {\cf18 void} insereQssBtnVoltar();\par
44     {\cf18 void} insereQssTabWidget();\par
45     {\cf18 void} insereQssTableBarras();\par
46     {\cf18 void} insereQssTableLinhas();\par
47     {\cf18 void} insereQssFrameBarras();\par
48     {\cf18 void} preencheTabelaBarra();\par
49     {\cf18 void} preencheTabelaLinha();\par
50     {\cf18 void} preencheLimites();\par
51     {\cf17 static} QList<Barra> barras;\par
52     {\cf17 static} QList<Linha> linhas;\par
53     {\cf18 void} insereQSSBtnFiltrar();\par
54     {\cf18 void} preencheLinha();\par
55     {\cf18 void} inicializaLinha();\par
56     {\cf17 static} {\cf18 bool} filtroLinhaInserido;\par
57     {\cf17 static} {\cf18 bool} filtroBarraInserido;\par
58     {\cf17 static} std::map<int , std::map<int , double >> getLimitesDti()\{\par
59         {\cf19 return} limitesDti;\par
60     \}\par
61 \par
62     {\cf17 static} {\cf18 void} setLimitesDti({\cf18 int} nivelTensao , {\cf18 int} harmonica , {\cf18 double} limite)\{\par
63         limitesDti[nivelTensao][harmonica] = limite;\par
64     \}\par
65 \par
66 \par
67     {\cf18 void} insereBackgroundNasPoluidoras();\par
68     {\cf18 void} verificaAvanco();\par
69 \par
70 {\cf17 private} slots:\par
71 \par
72 \par
73     {\cf18 void} on_btnFiltrar_clicked();\par
74 \par
75     {\cf18 void} on_tabLinhas_currentChanged({\cf18 int} index);\par
76 \par
77     {\cf18 void} on_btnVoltar_clicked();\par
78 \par
79     {\cf18 void} on_btnAvancar_clicked();\par
80 \par
81 {\cf17 private}:\par
82     Ui::FrameBarras *ui;\par
83     {\cf17 static} std::map<int , std::map<int , double >> limitesDti;\par
84 \par
85 \};\par
86 \par
87 {\cf21 #endif }{\cf20 // FRAMEBARRAS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/frameexportar.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/frameexportar.cpp}
{\xe \v D:/QT/EletricData/frameexportar.cpp}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "frameexportar.h"}\par
{\f2 #include "ui_frameexportar.h"}\par
{\f2 #include "style.h"}\par
{\f2 #include "mainwindow.h"}\par
{\f2 #include "ui_mainwindow.h"}\par
{\f2 #include "ui_framebarras.h"}\par
{\f2 #include "exportarpdf.h"}\par
{\f2 #include "exportarexcel.h"}\par
{\f2 #include "exportarcsv.h"}\par
{\f2 #include "filtrolinha.h"}\par
{\f2 #include "filtrosbarra.h"}\par
{\f2 #include <QDebug>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::MainWindow * {\b frameMa}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b MainWindow}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::FrameBarras * {\b frameB}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameBarras}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWidget * {\b pa}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v frameB\:frameexportar.cpp}
{\xe \v frameexportar.cpp\:frameB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::FrameBarras* frameB}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b FrameBarras}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable Ui::FrameBarras *frameB \par
}}
{\xe \v frameMa\:frameexportar.cpp}
{\xe \v frameexportar.cpp\:frameMa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::MainWindow* frameMa}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b MainWindow}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable Ui::MainWindow *frameMa \par
}}
{\xe \v pa\:frameexportar.cpp}
{\xe \v frameexportar.cpp\:pa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWidget* pa}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar seu parent. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable QWidget *pa; \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/frameexportar.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/frameexportar.h}
{\xe \v D:/QT/EletricData/frameexportar.h}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QFrame>}\par
{\f2 #include "ui_mainwindow.h"}\par
{\f2 #include "mainwindow.h"}\par
{\f2 #include "ui_framebarras.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FrameExportar}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela exporta\'E7\'E3o dos dados em 3 formatos diferentes ( Pdf , Excel e .csv ) @reentrant Essa janela foi construida com 1 tabWidget e dois TableWidget entro dela, um para as Barras e outro para as linhas, al\'E9m de bot\'F5es para filtragem, avan\'E7o e voltar. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/frameexportar.h\par \pard\plain 
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FRAMEEXPORTAR_H}\par
2 {\cf21 #define FRAMEEXPORTAR_H}\par
3 \par
4 {\cf21 #include <QFrame>}\par
5 {\cf21 #include "ui_mainwindow.h"}\par
6 {\cf21 #include "mainwindow.h"}\par
7 {\cf21 #include "ui_framebarras.h"}\par
8 \par
9 \par
10 \par
11 \par
12 {\cf17 namespace }Ui \{\par
13 {\cf17 class }FrameExportar;\par
14 \}\par
15 \par
16 {\cf17 class }FrameExportar : {\cf17 public} QFrame\par
17 \{\par
18     Q_OBJECT\par
19 \par
20 {\cf17 public}:\par
21     {\cf17 explicit} FrameExportar(QWidget *parent = {\cf17 nullptr}, Ui::MainWindow *mw={\cf17 nullptr},  Ui::FrameBarras *fb={\cf17 nullptr});\par
22     ~FrameExportar();\par
23 \par
24     {\cf18 void} inserirQssFrame();\par
25     {\cf18 void} inserirQssImg();\par
26     {\cf18 void} inserirQssRadioButton();\par
27     {\cf18 void} inserirQssBtn();\par
28     {\cf18 void} inicializaFrame();\par
29 \par
30     {\cf18 void} ExportacaoParaPdf();\par
31     {\cf18 void} ExportacaoParaExcel();\par
32     {\cf18 void} ExportacaoParaCsv();\par
33 \par
34 \par
35 {\cf17 private} slots:\par
36     {\cf18 void} on_btnVoltar_clicked();\par
37 \par
38     {\cf18 void} on_btnExportar_clicked();\par
39 \par
40 {\cf17 private}:\par
41     Ui::FrameExportar *ui;\par
42 \};\par
43 \par
44 {\cf21 #endif }{\cf20 // FRAMEEXPORTAR_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/frametensoes.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/frametensoes.cpp}
{\xe \v D:/QT/EletricData/frametensoes.cpp}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "frametensoes.h"}\par
{\f2 #include "framebarras.h"}\par
{\f2 #include <QFile>}\par
{\f2 #include <QFileDialog>}\par
{\f2 #include <QMessageBox>}\par
{\f2 #include <QScrollBar>}\par
{\f2 #include <QDebug>}\par
{\f2 #include <QTextStream>}\par
{\f2 #include "style.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::MainWindow * {\b frameMain}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b MainWindow}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v frameMain\:frametensoes.cpp}
{\xe \v frametensoes.cpp\:frameMain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::MainWindow* frameMain}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variavel que permite acessar o '{\b Ui}' do {\b MainWindow}. Foi declarada como v\'E1rival global para ser utilizada em qualquer parte da classe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@variable Ui::MainWindow *frameMain \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/frametensoes.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/frametensoes.h}
{\xe \v D:/QT/EletricData/frametensoes.h}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QFrame>}\par
{\f2 #include "mainwindow.h"}\par
{\f2 #include "QMainWindow"}\par
{\f2 #include <ui_mainwindow.h>}\par
{\f2 #include <QObject>}\par
{\f2 #include <utility>}\par
{\f2 #include <QTableWidgetItem>}\par
{\f2 #include <QTableWidget>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FrameTensoes}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela respons\'E1vel pela aquisi\'E7\'E3o dos dados de tens\'E3o nominal do sistema el\'E9trico @reentrant Essa janela foi construida com 1 frame que se posiciona no mesmo local do frame respons\'E1vel por receber os arquivos no {\b MainWindow}, nele h\'E1 um QTableWidget para inser\'E7\'E3o dos valores das tens\'F5es, seja por inser\'E7\'E3o manual ou para importar um arquivo com esses dados. Al\'E9m de bot\'F5es de salva, avan\'E7ar e voltar. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/frametensoes.h\par \pard\plain 
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef FRAMETENSOES_H}\par
2 {\cf21 #define FRAMETENSOES_H}\par
3 \par
4 {\cf21 #include <QFrame>}\par
5 {\cf21 #include "mainwindow.h"}\par
6 {\cf21 #include "QMainWindow"}\par
7 {\cf21 #include<ui_mainwindow.h>}\par
8 {\cf21 #include<QObject>}\par
9 {\cf21 #include<utility>}\par
10 {\cf21 #include <QTableWidgetItem>}\par
11 {\cf21 #include <QTableWidget>}\par
12 \par
13 \par
14 \par
15 \par
16 \par
17 {\cf17 namespace }Ui \{\par
18 {\cf17 class }FrameTensoes;\par
19 {\cf17 class }MainWindow;\par
20 \}\par
21 \par
22 {\cf17 class }FrameTensoes : {\cf17 public} QFrame\par
23 \{\par
24     Q_OBJECT\par
25 \par
26 {\cf17 public}:\par
27     {\cf17 explicit} FrameTensoes(QWidget *parent = {\cf17 nullptr}, Ui::MainWindow *mw={\cf17 nullptr});\par
28     ~FrameTensoes();\par
29     {\cf18 int} quantidadeDeBarras();\par
30     {\cf17 static} QList<double> tensoesNominais;\par
31     {\cf18 void} insereQssBotaoAvancar();\par
32     {\cf18 void} insereQssImportar();\par
33     {\cf18 void} insereQssBtnVoltar();\par
34     {\cf18 void} insereQssBtnLixeira();\par
35     {\cf18 void} insereQssBtnSalvar();\par
36     {\cf17 inline} {\cf18 void} insereQssFrame();\par
37     {\cf18 void} insereTableTensoes();\par
38     {\cf18 void} insereQssFrameTensoes();\par
39     {\cf17 static} {\cf18 int} numeroDeBarras;\par
40     {\cf18 void} inicializaFrame();\par
41     {\cf18 bool} tabelaTensoesPreenchida();\par
42 \par
43 {\cf17 private} slots:\par
44 \par
45 \par
46     {\cf18 void} on_btnVoltar_clicked();\par
47 \par
48     {\cf18 void} on_btnImportar_clicked();\par
49 \par
50     {\cf18 void} on_btnLixeira_clicked();\par
51 \par
52     {\cf18 void} on_btnSalvarTabela_clicked();\par
53 \par
54     {\cf18 void} on_btnAvancar_clicked();\par
55 \par
56     {\cf18 void} verificarPreenchimentoTabela(QTableWidgetItem* item);\par
57 \par
58 \par
59 {\cf17 private}:\par
60     Ui::FrameTensoes *ui;\par
61 \par
62 \};\par
63 \par
64 {\cf21 #endif }{\cf20 // FRAMETENSOES_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/Linha.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/Linha.h}
{\xe \v D:/QT/EletricData/Linha.h}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <utility>}\par
{\f2 #include <QObject>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Linha}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por armazenar os dados das Linhas. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/Linha.h\par \pard\plain 
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef LINHA_H}\par
3 {\cf21 #define LINHA_H}\par
4 \par
11 {\cf21 #include<utility>}\par
12 {\cf21 #include<QObject>}\par
13 {\cf21 #endif }{\cf20 // LINHA_H}\par
14 \par
15 {\cf17 class }Linha\{\par
16 {\cf17 public}:\par
17     {\cf18 int} getOrigem() \{\par
18         {\cf19 return} origem;\par
19     \}\par
20 \par
21     {\cf18 void} setOrigem({\cf18 int} origem) \{\par
22         this->origem = origem;\par
23     \}\par
24 \par
25     {\cf18 int} getDestino() \{\par
26         {\cf19 return} destino;\par
27     \}\par
28 \par
29     {\cf18 void} setDestino({\cf18 int} destino) \{\par
30         this->destino = destino;\par
31     \}\par
32 \par
33     {\cf18 double} getCorrente() \{\par
34         {\cf19 return} corrente;\par
35     \}\par
36 \par
37     {\cf18 void} setCorrente({\cf18 double} corrente) \{\par
38         this->corrente = corrente;\par
39     \}\par
40 \par
41     {\cf18 double} getDhtPercent() \{\par
42         {\cf19 return} dhtPercent;\par
43     \}\par
44 \par
45     {\cf18 void} setDhtPercent({\cf18 double} dhtPercent) \{\par
46         this->dhtPercent = dhtPercent;\par
47     \}\par
48 \par
49     {\cf18 double} getResistencia() \{\par
50         {\cf19 return} resistencia;\par
51     \}\par
52 \par
53     {\cf18 void} setResistencia({\cf18 double} resistencia) \{\par
54         this->resistencia = resistencia;\par
55     \}\par
56 \par
57     {\cf18 double} getPerdas() \{\par
58         {\cf19 return} perdas;\par
59     \}\par
60 \par
61     {\cf18 void} setPerdas({\cf18 double} perdas) \{\par
62         this->perdas = perdas;\par
63     \}\par
64 \par
65     {\cf18 double} getCorrenteEficaz() \{\par
66         {\cf19 return} correnteEficaz;\par
67     \}\par
68 \par
69     {\cf18 void} setCorrenteEficaz({\cf18 double} correnteEficaz) \{\par
70         this->correnteEficaz = correnteEficaz;\par
71     \}\par
72 \par
73     {\cf18 double} getPerdasEficaz() \{\par
74         {\cf19 return} perdasEficaz;\par
75     \}\par
76 \par
77     {\cf18 void} setPerdasEficaz({\cf18 double} perdasEficaz) \{\par
78         this->perdasEficaz = perdasEficaz;\par
79     \}\par
80 \par
81     {\cf18 bool} getLinhaInfectadaDht() \{\par
82         {\cf19 return} linhaInfectadaDht;\par
83     \}\par
84 \par
85     {\cf18 void} setLinhaInfectadaDht({\cf18 bool} infectada) \{\par
86         linhaInfectadaDht = infectada;\par
87     \}\par
88 \par
89     std::map<int, std::pair<double, double>> getDti()\{\par
90         {\cf19 return} dti;\par
91     \}\par
92 \par
93     {\cf18 void} setDti({\cf18 int} key1, {\cf18 double} dAbsolut ,  {\cf18 double} dPercent) \{\par
94         this->dti.insert(\{key1,\{dAbsolut,dPercent\}\});\par
95     \}\par
96 \par
97 {\cf17 private}:\par
98     {\cf18 int} origem;\par
99     {\cf18 int} destino;\par
100     {\cf18 double} corrente;\par
101     {\cf18 double} dhtPercent;\par
102     {\cf18 double} resistencia;\par
103     {\cf18 double} perdas;\par
104     {\cf18 double} correnteEficaz;\par
105     {\cf18 double} perdasEficaz;\par
106     {\cf18 bool} linhaInfectadaDht;\par
107     std::map<int, std::pair<double, double>> dti;\par
108 \par
109 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/main.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/main.cpp}
{\xe \v D:/QT/EletricData/main.cpp}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "mainwindow.h"}\par
{\f2 #include <QApplication>}\par
{\f2 #include <QLocale>}\par
{\f2 #include <QTranslator>}\par
{\f2 #include <QTimer>}\par
{\f2 #include <QSplashScreen>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17 \{\par
18     QApplication a(argc, argv);\par
19 \par
20     QTranslator translator;\par
21     {\cf17 const} QStringList uiLanguages = QLocale::system().uiLanguages();\par
22     {\cf19 for} ({\cf17 const} QString &locale : uiLanguages) \{\par
23         {\cf17 const} QString baseName = {\cf22 "EletricData_"} + QLocale(locale).name();\par
24         {\cf19 if} (translator.load({\cf22 ":/i18n/"} + baseName)) \{\par
25             a.installTranslator(&translator);\par
26             {\cf19 break};\par
27         \}\par
28     \}\par
29 \par
30     QSplashScreen *telaSplash={\cf17 new} QSplashScreen;\par
31     MainWindow w;\par
32     telaSplash->setPixmap(QPixmap({\cf22 ":/spash/imgs/spash/spash.jpg"}));\par
33     telaSplash->show();\par
34 \par
35     QTimer::singleShot(1000,telaSplash,SLOT(close()));\par
36     QTimer::singleShot(1000,&w,SLOT(show()));\par
37 \par
38 \par
39 \par
40     {\cf19 return} a.exec();\par
41 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/mainwindow.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/mainwindow.cpp}
{\xe \v D:/QT/EletricData/mainwindow.cpp}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "mainwindow.h"}\par
{\f2 #include "ui_mainwindow.h"}\par
{\f2 #include "style.h"}\par
{\f2 #include <QPropertyAnimation>}\par
{\f2 #include <QApplication>}\par
{\f2 #include "frametensoes.h"}\par
{\f2 #include <QTextStream>}\par
{\f2 #include <QMessageBox>}\par
{\f2 #include <QFileDialog>}\par
{\f2 #include <QFile>}\par
{\f2 #include <QDebug>}\par
{\f2 #include <QtCore/QCoreApplication>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/mainwindow.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/mainwindow.h}
{\xe \v D:/QT/EletricData/mainwindow.h}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QMainWindow>}\par
{\f2 #include <QFile>}\par
{\f2 #include <ui_mainwindow.h>}\par
{\f2 #include "style.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MainWindow}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Janela Principal do Programa @reentrant Essa janela foi construida com 2 frames, um com o intuito de funcionar como uma barra de status do andamento da aplica\'E7\'E3o(tendo 4 labels como sinalizadores) e o outro possui componentes repons\'E1veis por receber endere\'E7o de arquivos que ser\'E3o utilizados nos proximos frames para trataemnto de dados. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/mainwindow.h\par \pard\plain 
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef MAINWINDOW_H}\par
3 {\cf21 #define MAINWINDOW_H}\par
4 \par
5 {\cf21 #include <QMainWindow>}\par
6 {\cf21 #include<QFile>}\par
7 {\cf21 #include<ui_mainwindow.h>}\par
8 {\cf21 #include "style.h"}\par
9 \par
10 \par
11 \par
12 QT_BEGIN_NAMESPACE\par
13 {\cf17 namespace }Ui \{ {\cf17 class }MainWindow; \}\par
14 QT_END_NAMESPACE\par
15 \par
16 {\cf17 class }MainWindow : {\cf17 public} QMainWindow\par
17 \par
18 \{\par
19     Q_OBJECT\par
20 \par
21 {\cf17 public}:\par
22     MainWindow(QWidget *parent = {\cf17 nullptr});\par
23     ~MainWindow();\par
24     {\cf17 static} {\cf18 void} atualizarStatus(Ui::MainWindow *ui)\{\par
25         Style style;\par
26         {\cf19 switch}(frameAtual)\{\par
27         {\cf19 case} 0:\par
28             ui->txtCarregarArquivos->setStyleSheet(style.cssTxtSelected);\par
29             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
30             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
31             ui->txtExportar->setStyleSheet(style.cssTxt);\par
32             ui->lblVerifica1->hide();\par
33             ui->lblVerifica2->hide();\par
34             ui->lblVerifica3->hide();\par
35             ui->lblVerifica4->hide();\par
36             {\cf19 break};\par
37         {\cf19 case} 1:\par
38             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
39             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxtSelected);\par
40             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
41             ui->txtExportar->setStyleSheet(style.cssTxt);\par
42             ui->lblVerifica1->show();\par
43             ui->lblVerifica2->hide();\par
44             ui->lblVerifica3->hide();\par
45             ui->lblVerifica4->hide();\par
46             {\cf19 break};\par
47         {\cf19 case} 2:\par
48             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
49             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
50             ui->txtPrepararSaida->setStyleSheet(style.cssTxtSelected);\par
51             ui->txtExportar->setStyleSheet(style.cssTxt);\par
52             ui->lblVerifica1->show();\par
53             ui->lblVerifica2->show();\par
54             ui->lblVerifica3->hide();\par
55             ui->lblVerifica4->hide();\par
56             {\cf19 break};\par
57         {\cf19 case} 3:\par
58             ui->txtCarregarArquivos->setStyleSheet(style.cssTxt);\par
59             ui->txtTensoesNasBarras->setStyleSheet(style.cssTxt);\par
60             ui->txtPrepararSaida->setStyleSheet(style.cssTxt);\par
61             ui->txtExportar->setStyleSheet(style.cssTxtSelected);\par
62             ui->lblVerifica1->show();\par
63             ui->lblVerifica2->show();\par
64             ui->lblVerifica3->show();\par
65             ui->lblVerifica4->hide();\par
66             {\cf19 break};\par
67         \}\par
68     \}\par
69 \par
70     {\cf18 void} insereQssMainWindow();\par
71     {\cf18 void} insereIcon();\par
72     {\cf18 void} insereQssBarraDeStatus();\par
73     {\cf18 void} verificarAvanco();\par
74     {\cf18 void} insereQssTitulosLineEdit();\par
75     {\cf18 void} insereQssLineEdit();\par
76     {\cf18 void} insereQssPlaceHolderLineEdit();\par
77     {\cf18 void} insereQssBtnArquivos();\par
78     {\cf18 void} insereQssBtnAvancar();\par
79     {\cf18 void} insereQssBtnLixeira();\par
80     {\cf18 void} insereQssLblVerifica();\par
81     {\cf18 void} setaFileNameNosArq();\par
82     {\cf18 void} inicializaFrame();\par
83 \par
84     {\cf17 static} QFile *arquivoVsoln;\par
85     {\cf17 static} QFile *arquivoIsoln;\par
86     {\cf17 static} QFile *arquivoThdi;\par
87     {\cf17 static} QFile *arquivoThdv;\par
88     {\cf17 static} QFile *arquivoLdat;\par
89     {\cf17 static} QFile *arquivoTensoes;\par
90     {\cf17 static} {\cf18 int} frameAtual;\par
91     {\cf18 bool} getStatusDePreenchimento({\cf18 int} posicao)\{\par
92         {\cf19 if}(posicao < 5 && posicao >=0)\{\par
93             {\cf19 return} statusDePreenchimento[posicao];\par
94         \}\par
95         {\cf19 else}\{\par
96             {\cf19 return} {\cf17 false};\par
97         \}\par
98     \}\par
99     {\cf18 void} setStatusDePreenchimento({\cf18 int} posicao, {\cf18 bool} status)\{\par
100         {\cf19 if}(posicao < 5 && posicao >=0)\{\par
101             statusDePreenchimento[posicao]=status;\par
102         \}\par
103     \}\par
104 \par
105 \par
106 {\cf17 private} slots:\par
107     {\cf18 void} on_btnAvancar_clicked();\par
108 \par
109     {\cf18 void} on_btnVsoln_clicked();\par
110 \par
111     {\cf18 void} on_btnThdv_clicked();\par
112 \par
113     {\cf18 void} on_btnThdi_clicked();\par
114 \par
115     {\cf18 void} on_btnIsoln_clicked();\par
116 \par
117     {\cf18 void} on_btnLdat_clicked();\par
118 \par
119     {\cf18 void} on_btnLixeiraVsoln_clicked();\par
120 \par
121     {\cf18 void} on_btnLixeiraThdv_clicked();\par
122 \par
123     {\cf18 void} on_btnLixeiraThdi_clicked();\par
124 \par
125     {\cf18 void} on_btnLixeiraIsoln_clicked();\par
126 \par
127     {\cf18 void} on_btnLixeiraLdat_clicked();\par
128 \par
129 {\cf17 private}:\par
130     Ui::MainWindow *ui;\par
131     {\cf18 bool} statusDePreenchimento[5]\{0\};\par
132 \par
133 \par
134 \par
135     {\cf20 //Metodo para atualizar a barra de Status}\par
136 \par
137 \};\par
138 \par
139 \par
140 \par
141 \par
142 \par
143 {\cf21 #endif }{\cf20 // MAINWINDOW_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/style.h File Reference\par \pard\plain 
{\tc\tcl2 \v D:/QT/EletricData/style.h}
{\xe \v D:/QT/EletricData/style.h}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QObject>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Style}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe respons\'E1vel por armazenar as QString dos Qss a serem utilizados nas interfaces. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/QT/EletricData/style.h\par \pard\plain 
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef STYLE_H}\par
3 {\cf21 #define STYLE_H}\par
4 \par
11 {\cf21 #include<QObject>}\par
12 \par
13 {\cf17 class }Style\{\par
14     {\cf17 public}:\par
15     QString corPrimaria={\cf22 "#1E385B"};\par
16     QString corSecundaria={\cf22 "#D3D3D3"};\par
17     QString corHoverBtn={\cf22 "#325a8f"};\par
18     QString segundaOpcao={\cf22 "#c7db79"};\par
19     QString branco={\cf22 "#FFFFFF"};\par
20     QString corSelected={\cf22 "#63d6db"};\par
21     QString cssTxt={\cf22 "border:none;"}\par
22                    {\cf22 "font-size:15px;"}\par
23                    {\cf22 "font-weight:500;"}\par
24                    {\cf22 "font-family: 'Roboto';"}\par
25                    {\cf22 "color:"}+branco+{\cf22 ";"};\par
26     QString cssTxtSelected= {\cf22 "font-size:17px;"}\par
27                             {\cf22 "font-weight:bold;"}\par
28                             {\cf22 "font-family: 'Roboto';"}\par
29                             {\cf22 "color:"}+corSelected+{\cf22 ";"};\par
30     QString cssStatusFrame={\cf22 "background-color:"}+corPrimaria+{\cf22 ";"};\par
31     QString cssTxtArquivos={\cf22 "border:none;"}\par
32                             {\cf22 "font-size:15px;"}\par
33                             {\cf22 "font-family: 'Roboto';"}\par
34                             {\cf22 "font-style:italic;"}\par
35                             {\cf22 "font-weight:600;"}\par
36                             {\cf22 "color:"}+corPrimaria+{\cf22 ";"};\par
37     QString cssFrameArq={\cf22 "QFrame\{"}\par
38                           {\cf22 "background-color:"}+corSecundaria+{\cf22 ";\}"};\par
39     QString cssLineEdit={\cf22 "QLineEdit\{"}\par
40                             {\cf22 "background-color:"}+branco+{\cf22 ";"}\par
41                             {\cf22 "font-size:12px;"}\par
42                             {\cf22 "border-radius:3px;\}"}\par
43                         {\cf22 "QLineEdit:hover\{"}\par
44                             {\cf22 "font-size:20px;"}\par
45                             {\cf22 "font-family: 'Roboto';"}\par
46                                      {\cf22 "border: 2px solid"}+corPrimaria+{\cf22 ";\}"};\par
47 \par
48     QString cssLineEditDisabled={\cf22 "QLineEdit\{"}\par
49                                   {\cf22 "background-color:"}+branco+{\cf22 ";"}\par
50                                      {\cf22 "font-size:12px;"}\par
51                                      {\cf22 "border-radius:3px;\}"}\par
52                                  {\cf22 "QLineEdit:hover\{"}\par
53                                      {\cf22 "font-size:20px;"}\par
54                                      {\cf22 "font-family: 'Roboto';"}\par
55                                      {\cf22 "border: 2px solid"}+corPrimaria+{\cf22 ";\}"}\par
56                                   {\cf22 "QLineEdit:disabled\{"}\par
57                                           {\cf22 "background-color:#808080;\}"};\par
58     QString cssBtn={\cf22 "QPushButton\{"}\par
59                          {\cf22 "border:2px solid "}+corPrimaria+{\cf22 ";"}\par
60                          {\cf22 "font-family: 'Roboto';"}\par
61                          {\cf22 "font-size:15px;"}\par
62                          {\cf22 "background-color:"}+corPrimaria+{\cf22 ";"}\par
63                          {\cf22 "color:white;"}\par
64                          {\cf22 "border-radius:5px;\}"}\par
65                     {\cf22 "QPushButton:hover\{"}\par
66                          {\cf22 "border:2px solid "}+corHoverBtn+{\cf22 ";"}\par
67                          {\cf22 "font-size:15px;"}\par
68                          {\cf22 "font-weight:bold;"}\par
69                          {\cf22 "color:white;"}\par
70                          {\cf22 "background-color:"}+corHoverBtn+{\cf22 ";\}"}\par
71                     {\cf22 "QPushButton:pressed\{"}\par
72                         {\cf22 "background-color: #0D2C4D;"}\par
73                         {\cf22 "color: #FFFFFF;\}"};\par
74 \par
75     QString cssBtnTransition={\cf22 "QPushButton\{"}\par
76                                      {\cf22 "border:2px solid "}+corPrimaria+{\cf22 ";"}\par
77                                      {\cf22 "font-family: 'Roboto';"}\par
78                                      {\cf22 "font-size: 15px;"}\par
79                                      {\cf22 "background-color:"}+corPrimaria+{\cf22 ";"}\par
80                                      {\cf22 "color:white;"}\par
81                                      {\cf22 "border-radius:5px;\}"}\par
82                              {\cf22 "QPushButton:hover\{"}\par
83                                      {\cf22 "border:2px solid "}+corHoverBtn+{\cf22 ";"}\par
84                                      {\cf22 "font-size: 15px;"}\par
85                                      {\cf22 "font-weight:bold;"}\par
86                                      {\cf22 "color:white;"}\par
87                                      {\cf22 "background-color:"}+corHoverBtn+{\cf22 ";\}"}\par
88                              {\cf22 "QPushButton:pressed\{"}\par
89                                      {\cf22 "background-color: #0D2C4D;"}\par
90                                      {\cf22 "color: #FFFFFF;\}"}\par
91                              {\cf22 "QPushButton:disabled\{"}\par
92                                      {\cf22 "border:2px solid #808080;"}\par
93                                      {\cf22 "background-color:#808080;\}"};\par
94 \par
95     QString cssBtnLixeira={\cf22 "QPushButton\{"}\par
96                                      {\cf22 "font-family: 'Roboto';"}\par
97                                      {\cf22 "font-size:15px;"}\par
98                                      {\cf22 "background-color:#8B0000;"}\par
99                                      {\cf22 "color:white;"}\par
100                                      {\cf22 "border-radius:5px;\}"}\par
101                                      {\cf22 "QPushButton:hover\{"}\par
102                                      {\cf22 "font-size:15px;"}\par
103                                      {\cf22 "font-weight:bold;"}\par
104                                      {\cf22 "color:white;"}\par
105                                      {\cf22 "background-color:#B22222;\}"}\par
106                                      {\cf22 "QPushButton:pressed\{"}\par
107                                      {\cf22 "background-color: #CD5C5C;"}\par
108                                      {\cf22 "color: #FFFFFF;\}"};\par
109 \par
110     QString csstabelaTensoes={\cf22 "QTableWidget\{font-family: 'Roboto' ;"}\par
111                                {\cf22 "font-size:15px;"}\par
112                                {\cf22 "border:2px solid "}+corPrimaria+{\cf22 ";"}\par
113                                {\cf22 "color: black;"}\par
114                                {\cf22 "border-radius:5px;"}\par
115                                {\cf22 "text-align: center;"}\par
116                                {\cf22 "background-color:#f0f0f0;\}"}\par
117                                {\cf22 "QTableWidget QScrollBar:vertical \{"}\par
118                                {\cf22 "    border: none;"}\par
119                                {\cf22 "    background-color: #f5f5f5;"}\par
120                                {\cf22 "    width: 10px;"}\par
121                                {\cf22 "    margin: 0px 0 0px 0;"}\par
122                                {\cf22 "\}"}\par
123                                {\cf22 "QTableWidget QScrollBar::handle:vertical \{"}\par
124                                {\cf22 "    background-color: #d3d3d3;"}\par
125                                {\cf22 "    min-height: 20px;"}\par
126                                {\cf22 "\}"}\par
127                                {\cf22 "QTableWidget QScrollBar::add-line:vertical \{"}\par
128                                {\cf22 "    background-color: #f5f5f5;"}\par
129                                {\cf22 "    height: 20px;"}\par
130                                {\cf22 "    subcontrol-position: bottom;"}\par
131                                {\cf22 "    subcontrol-origin: margin;"}\par
132                                {\cf22 "\}"}\par
133                                {\cf22 "QTableWidget QScrollBar::sub-line:vertical \{"}\par
134                                {\cf22 "    background-color: #f5f5f5;"}\par
135                                {\cf22 "    height: 20px;"}\par
136                                {\cf22 "    subcontrol-position: top;"}\par
137                                {\cf22 "    subcontrol-origin: margin;"}\par
138                                {\cf22 "\}"}\par
139                                {\cf22 "QTableWidget QScrollBar::up-arrow:vertical, QTableWidget QScrollBar::down-arrow:vertical \{"}\par
140                                {\cf22 "    border: none;"}\par
141                                {\cf22 "    background-color: #f5f5f5;"}\par
142                                {\cf22 "    height: 20px;"}\par
143                                {\cf22 "    width: 10px;"}\par
144                                {\cf22 "\}"}\par
145                                {\cf22 "QTableWidget QScrollBar::add-page:vertical, QTableWidget QScrollBar::sub-page:vertical \{"}\par
146                                {\cf22 "    background-color: #f5f5f5;"}\par
147                                {\cf22 "\}"}\par
148                                {\cf22 "QTableWidget::horizontalScrollBar  \{"}\par
149                                     {\cf22 "border: none;"}\par
150                                     {\cf22 "background-color: #F5F5F5;"}\par
151                                     {\cf22 "height: 10px;"}\par
152                                     {\cf22 "margin: 0px 21px 0 21px;\}"}\par
153                                 {\cf22 "QTableWidget::horizontalScrollBar::handle \{"}\par
154                                     {\cf22 "background: #DBDBDB;"}\par
155                                     {\cf22 "    min-width: 20px;\}"}\par
156                                 {\cf22 "QTableWidget::horizontalScrollBar::add-line\{"}\par
157                                 {\cf22 "background-color: none;"}\par
158                                 {\cf22 "width: 20px;"}\par
159                                     {\cf22 "subcontrol-position: right;"}\par
160                                     {\cf22 "subcontrol-origin: margin;\}"}\par
161                                 {\cf22 "QTableWidget::horizontalScrollBar::sub-line \{"}\par
162                                 {\cf22 "background-color: none;"}\par
163                                 {\cf22 "width: 20px;"}\par
164                                     {\cf22 "subcontrol-position: left;"}\par
165                                                {\cf22 "subcontrol-origin: margin;\}"};\par
166 \par
167 \par
168     QString cssTabelaBarras={\cf22 "QTableWidget\{font-family: 'Roboto' ;"}\par
169                                {\cf22 "font-size:15px;"}\par
170                                {\cf22 "color: black;"}\par
171                                {\cf22 "border-radius:25px;"}\par
172                                {\cf22 "text-align: center;"}\par
173                                {\cf22 "background-color:#f0f0f0;\}"}\par
174                               {\cf22 "QTableWidget::verticalScrollBar  \{"}\par
175                                {\cf22 "    border: none;"}\par
176                                {\cf22 "    background-color: #f5f5f5;"}\par
177                                {\cf22 "    width: 10px;"}\par
178                                {\cf22 "    margin: 0px 0 0px 0;"}\par
179                                {\cf22 "\}"}\par
180                               {\cf22 "QTableWidget::verticalScrollBar::handle \{"}\par
181                                {\cf22 "    background-color: #d3d3d3;"}\par
182                                {\cf22 "    min-height: 20px;"}\par
183                                {\cf22 "\}"}\par
184                               {\cf22 "QTableWidget::verticalScrollBar::add-line\{"}\par
185                                {\cf22 "    background-color: #f5f5f5;"}\par
186                                {\cf22 "    height: 20px;"}\par
187                                {\cf22 "    subcontrol-position: bottom;"}\par
188                                {\cf22 "    subcontrol-origin: margin;"}\par
189                                {\cf22 "\}"}\par
190                               {\cf22 "QTableWidget::verticalScrollBar::add-line\{"}\par
191                                {\cf22 "    background-color: #f5f5f5;"}\par
192                                {\cf22 "    height: 20px;"}\par
193                                {\cf22 "    subcontrol-position: top;"}\par
194                                {\cf22 "    subcontrol-origin: margin;"}\par
195                                {\cf22 "\}"}\par
196                                {\cf22 "QTableWidget QScrollBar::up-arrow:vertical, QTableWidget QScrollBar::down-arrow:vertical \{"}\par
197                                {\cf22 "    border: none;"}\par
198                                {\cf22 "    background-color: #f5f5f5;"}\par
199                                {\cf22 "    height: 20px;"}\par
200                                {\cf22 "    width: 10px;"}\par
201                                {\cf22 "\}"}\par
202                                {\cf22 "QHeaderView::section\{"}\par
203                                     {\cf22 "border-bottom:1px solid #D8D8D8;"}\par
204                                     {\cf22 "border-left:0px;"}\par
205                                     {\cf22 "padding-left:5px;"}\par
206                                     {\cf22 "margin:0px;\}"}\par
207                                {\cf22 "QTableWidget QScrollBar::add-page:vertical, QTableWidget QScrollBar::sub-page:vertical \{"}\par
208                                {\cf22 "    background-color: #f5f5f5;"}\par
209                                {\cf22 "\}"}\par
210                                {\cf22 "QTableWidget::horizontalScrollBar  \{"}\par
211                                    {\cf22 "border: none;"}\par
212                                    {\cf22 "background-color: #F5F5F5;"}\par
213                                    {\cf22 "height: 10px;"}\par
214                                    {\cf22 "margin: 0px 21px 0 21px;\}"}\par
215                                {\cf22 "QTableWidget::horizontalScrollBar::handle \{"}\par
216                                    {\cf22 "background: #DBDBDB;"}\par
217                                    {\cf22 "    min-width: 20px;\}"}\par
218                                {\cf22 "QTableWidget::horizontalScrollBar::add-line\{"}\par
219                                    {\cf22 "background-color: none;"}\par
220                                    {\cf22 "width: 20px;"}\par
221                                    {\cf22 "subcontrol-position: right;"}\par
222                                    {\cf22 "subcontrol-origin: margin;\}"}\par
223                                {\cf22 "QTableWidget::horizontalScrollBar::sub-line \{"}\par
224                                {\cf22 "background-color: none;"}\par
225                                {\cf22 "width: 20px;"}\par
226                                {\cf22 "subcontrol-position: left;"}\par
227                                {\cf22 "subcontrol-origin: margin;\}"};\par
228 \par
229 \par
230 \par
231     QString cssHeaderTabela={\cf22 "font-family: 'Roboto';"}\par
232                             {\cf22 "font-size:17px;"}\par
233                             ;\par
234 \par
235     QString cssTabWidget = {\cf22 "QTabWidget::pane \{"}\par
236                               {\cf22 "border: 2px solid "}+corPrimaria+{\cf22 ";"}\par
237                               {\cf22 "border-radius:4px;"}\par
238                               {\cf22 "\}"}\par
239                               {\cf22 "QTabBar::tab \{"}\par
240                                {\cf22 "border-radius:1px;"}\par
241                               {\cf22 "background-color: #2E4E7E;"}\par
242                               {\cf22 "color: #FFFFFF;"}\par
243                               {\cf22 "font-weight: bold;"}\par
244                                {\cf22 "min-width: 100px;"}\par
245                                {\cf22 "min-height:20px;"}\par
246                               {\cf22 "\}"}\par
247                               {\cf22 "QTabBar::tab:selected \{"}\par
248                               {\cf22 "background-color: #1E385B;"}\par
249                               {\cf22 "\}"}\par
250                               {\cf22 "QTabBar::tab:focus \{"}\par
251                               {\cf22 "border: none;"}\par
252                               {\cf22 "font-size: 15px;"}\par
253                               {\cf22 "font-weight: 500;"}\par
254                               {\cf22 "font-family: 'Roboto';"}\par
255                               {\cf22 "color:branco;"}\par
256                                          {\cf22 "\}"};\par
257     QString cssCheckbox = {\cf22 "QCheckBox\{"}\par
258                               {\cf22 "font-size:13px;"}\par
259                               {\cf22 "font-weight:bold;"}\par
260                               {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"}\par
261                           {\cf22 "QCheckBox::indicator\{"}\par
262                               {\cf22 "width: 30px;"}\par
263                               {\cf22 "height: 30px;\}"};\par
264 \par
265     QString cssComboBox = {\cf22 "QComboBox \{"}\par
266                           {\cf22 "border-radius: 3px;"}\par
267                           {\cf22 "border:1px solid"}+corPrimaria+{\cf22 ";"}\par
268                           {\cf22 "color: #1E385B;"}\par
269                           {\cf22 "background-color: #FFFFFF;"}\par
270                           {\cf22 "\}"};\par
271 \par
272     QString cssGroupBox = {\cf22 "QGroupBox \{"}\par
273                           {\cf22 "font-size:15px;"}\par
274                           {\cf22 "font-weight:bold;"}\par
275                           {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"};\par
276 \par
277     QString cssRadioButton = {\cf22 "QRadioButton \{"}\par
278                              {\cf22 "font-size:20px;"}\par
279                              {\cf22 "font-family: 'Roboto';"}\par
280                              {\cf22 "font-weight:bold;"}\par
281                              {\cf22 "color:"}+corPrimaria+{\cf22 ";\}"};\par
282 \par
283     QString cssImgExportar = {\cf22 "border-radius:30px;"};\par
284 \par
285 \par
286 \par
287 \par
288 \par
289 \};\par
290 \par
291 \par
292 \par
293 \par
294 {\cf21 #endif }{\cf20 // STYLE_H}\par
295 \par
296 \par
297 \par
298 \par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
